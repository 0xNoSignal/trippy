{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IBurnMintERC20",
          "name": "token",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "internalType": "struct RateLimiter.Config",
          "name": "rateLimiterConfig",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BucketOverfilled",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "capacity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "requested",
          "type": "uint256"
        }
      ],
      "name": "ConsumingMoreThanMaxCapacity",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "offRamp",
          "type": "address"
        }
      ],
      "name": "InvalidOffRamp",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NullAddressNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PermissionsError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "waitInSeconds",
          "type": "uint256"
        }
      ],
      "name": "RateLimitReached",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Locked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "onRamp",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "OffRampAllowanceSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "onRamp",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "OnRampAllowanceSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Released",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "ramp",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "allowed",
              "type": "bool"
            }
          ],
          "internalType": "struct TokenPool.RampUpdate[]",
          "name": "onRamps",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "ramp",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "allowed",
              "type": "bool"
            }
          ],
          "internalType": "struct TokenPool.RampUpdate[]",
          "name": "offRamps",
          "type": "tuple[]"
        }
      ],
      "name": "applyRampUpdates",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRateLimiterState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "tokens",
              "type": "uint128"
            },
            {
              "internalType": "uint32",
              "name": "lastUpdated",
              "type": "uint32"
            },
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "internalType": "struct RateLimiter.TokenBucket",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "offRamp",
          "type": "address"
        }
      ],
      "name": "isOffRamp",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "onRamp",
          "type": "address"
        }
      ],
      "name": "isOnRamp",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "lockOrBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "releaseOrMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "internalType": "struct RateLimiter.Config",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "setRateLimiterConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "547:1931:37:-:0;;;808:183;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;937:5;944:17;937:5;944:17;316:10:3;;345:1:44;316:10:3;544:59:45;;;;-1:-1:-1;;;544:59:45;;1943:2:69;544:59:45;;;1925:21:69;1982:2;1962:18;;;1955:30;2021:26;2001:18;;;1994:54;2065:18;;544:59:45;;;;;;;;;610:7;:18;;-1:-1:-1;;;;;;610:18:45;-1:-1:-1;;;;;610:18:45;;;;;;;;;;638:26;;;634:79;;674:32;693:12;674:18;:32::i;:::-;-1:-1:-1;;996:7:52;:15;;-1:-1:-1;;;;996:15:52;;;-1:-1:-1;;;;;;1929:28:38;;1925:64;;1966:23;;-1:-1:-1;;;1966:23:38;;;;;;;;;;;1925:64;2012:243;;;;;;;;2132:26;;;;;;-1:-1:-1;;;;;2012:243:38;;;;;;2186:15;2012:243;;;;;;;;2221:27;;2012:243;;;;;;;;2090:26;;2012:243;;;;;;;;2050:22;;;;2012:243;;;;;;;;;;1996:13;:259;;-1:-1:-1;;;;;;1996:259:38;;;;-1:-1:-1;;;1996:259:38;;;;-1:-1:-1;;;;1996:259:38;-1:-1:-1;;;1996:259:38;;;;;;;;;;;;;;;-1:-1:-1;;;;;2262:15:38;;;;;;458:42:35;-1:-1:-1;;;458:42:35;;480:4:::1;458:42;::::0;::::1;2353:51:69::0;-1:-1:-1;;2420:18:69;;;2413:34;458:13:35;;::::1;::::0;::::1;::::0;2326:18:69;;458:42:35::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;969:8:37::1;:17:::0;;-1:-1:-1;;;;;;969:17:37::1;-1:-1:-1::0;;;;;969:17:37;;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;547:1931:37;;-1:-1:-1;;547:1931:37;1497:188:45;1565:10;-1:-1:-1;;;;;1559:16:45;;;1551:52;;;;-1:-1:-1;;;1551:52:45;;2867:2:69;1551:52:45;;;2849:21:69;2906:2;2886:18;;;2879:30;2945:25;2925:18;;;2918:53;2988:18;;1551:52:45;2665:347:69;1551:52:45;1610:14;:19;;-1:-1:-1;;;;;;1610:19:45;-1:-1:-1;;;;;1610:19:45;;;;;;;;;-1:-1:-1;1668:7:45;;1641:39;;1610:19;;1668:7;;1641:39;;-1:-1:-1;1641:39:45;1497:188;:::o;14:147:69:-;-1:-1:-1;;;;;105:31:69;;95:42;;85:70;;151:1;148;141:12;85:70;14:147;:::o;166:164::-;242:13;;291;;284:21;274:32;;264:60;;320:1;317;310:12;264:60;166:164;;;:::o;335:177::-;414:13;;-1:-1:-1;;;;;456:31:69;;446:42;;436:70;;502:1;499;492:12;517:154;596:13;;618:47;596:13;618:47;:::i;676:1060::-;811:6;819;827;871:9;862:7;858:23;901:3;897:2;893:12;890:32;;;918:1;915;908:12;890:32;950:9;944:16;969:47;1010:5;969:47;:::i;:::-;1035:5;-1:-1:-1;1074:4:69;-1:-1:-1;;1056:16:69;;1052:27;1049:47;;;1092:1;1089;1082:12;1049:47;-1:-1:-1;1125:2:69;1119:9;1167:4;1155:17;;-1:-1:-1;;;;;1187:34:69;;1223:22;;;1184:62;1181:185;;;1288:10;1283:3;1279:20;1276:1;1269:31;1323:4;1320:1;1313:15;1351:4;1348:1;1341:15;1181:185;1382:2;1375:22;1421:46;1463:2;1448:18;;1421:46;:::i;:::-;1413:6;1406:62;1501:49;1546:2;1535:9;1531:18;1501:49;:::i;:::-;1496:2;1488:6;1484:15;1477:74;1584:51;1629:4;1618:9;1614:20;1584:51;:::i;:::-;1579:2;1567:15;;1560:76;1571:6;-1:-1:-1;1680:50:69;1725:3;1710:19;;1680:50;:::i;:::-;1670:60;;676:1060;;;;;:::o;2458:202::-;2525:6;2578:2;2566:9;2557:7;2553:23;2549:32;2546:52;;;2594:1;2591;2584:12;2546:52;2617:37;2644:9;2617:37;:::i;:::-;2607:47;2458:202;-1:-1:-1;;;2458:202:69:o;2665:347::-;547:1931:37;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806379ba50971161009757806396875445116100665780639687544514610261578063af51911214610274578063c92b283214610287578063f2fde38b1461029a57600080fd5b806379ba5097146102205780638456cb59146102285780638627fad6146102305780638da5cb5b1461024357600080fd5b80633f4ba83a116100d35780633f4ba83a1461017c578063546719cd146101865780635c975abb146101ea5780636f32b8721461020d57600080fd5b806301ffc9a7146100fa5780631d7a74a01461012257806321df0da714610135575b600080fd5b61010d610108366004611605565b6102ad565b60405190151581526020015b60405180910390f35b61010d610130366004611670565b610346565b7f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610119565b610184610353565b005b61018e610365565b604051610119919081516fffffffffffffffffffffffffffffffff908116825260208084015163ffffffff1690830152604080840151151590830152606080840151821690830152608092830151169181019190915260a00190565b60015474010000000000000000000000000000000000000000900460ff1661010d565b61010d61021b366004611670565b61041a565b610184610427565b610184610529565b61018461023e3660046117d6565b610539565b60005473ffffffffffffffffffffffffffffffffffffffff16610157565b61018461026f3660046118b2565b610685565b610184610282366004611a13565b6107aa565b610184610295366004611a97565b610b4c565b6101846102a8366004611670565b610b62565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f317fa33400000000000000000000000000000000000000000000000000000000148061034057507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b6000610340600483610b73565b61035b610ba5565b610363610c26565b565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526040805160a0810182526006546fffffffffffffffffffffffffffffffff808216835270010000000000000000000000000000000080830463ffffffff1660208501527401000000000000000000000000000000000000000090920460ff16151593830193909352600754808416606084015204909116608082015261041590610ca3565b905090565b6000610340600283610b73565b60015473ffffffffffffffffffffffffffffffffffffffff1633146104ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e65720000000000000000000060448201526064015b60405180910390fd5b60008054337fffffffffffffffffffffffff00000000000000000000000000000000000000008083168217845560018054909116905560405173ffffffffffffffffffffffffffffffffffffffff90921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b610531610ba5565b610363610d55565b610541610dc4565b61054a33610346565b610580576040517f5307f5ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61058983610e49565b6040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152602482018590527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b15801561061957600080fd5b505af115801561062d573d6000803e3d6000fd5b505060405185815273ffffffffffffffffffffffffffffffffffffffff871692503391507f9d228d69b5fdb8d273a2336f8fb8612d039631024ea9bf09c424a9503aa078f09060200160405180910390a35050505050565b61068d610dc4565b6106963361041a565b6106cc576040517f5307f5ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f42966c68000000000000000000000000000000000000000000000000000000008152600481018590527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906342966c6890602401600060405180830381600087803b15801561075457600080fd5b505af1158015610768573d6000803e3d6000fd5b50506040518681523392507f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7915060200160405180910390a250505050505050565b6107b2610ba5565b60005b82518110156108b35760008382815181106107d2576107d2611b05565b6020026020010151905080602001516107f85780516107f390600290610e54565b610806565b805161080690600290610e76565b156108a2577fbceff8f229c6dfcbf8bdcfb18726b84b0fd249b4803deb3948ff34d90401366284838151811061083e5761083e611b05565b60200260200101516000015185848151811061085c5761085c611b05565b60200260200101516020015160405161089992919073ffffffffffffffffffffffffffffffffffffffff9290921682521515602082015260400190565b60405180910390a15b506108ac81611b63565b90506107b5565b5060005b8151811015610b475760008282815181106108d4576108d4611b05565b6020026020010151905080602001516109975780516108f590600490610e54565b15610991577fd8c3333ded377884ced3869cd0bcb9be54ea664076df1f5d39c468912031364883838151811061092d5761092d611b05565b60200260200101516000015184848151811061094b5761094b611b05565b60200260200101516020015160405161098892919073ffffffffffffffffffffffffffffffffffffffff9290921682521515602082015260400190565b60405180910390a15b50610b37565b60085481516040517f1d7a74a000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201526000929190911690631d7a74a0906024016040805180830381865afa158015610a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a309190611b9b565b5090508015610aea578151610a4790600490610e76565b15610ae3577fd8c3333ded377884ced3869cd0bcb9be54ea664076df1f5d39c4689120313648848481518110610a7f57610a7f611b05565b602002602001015160000151858581518110610a9d57610a9d611b05565b602002602001015160200151604051610ada92919073ffffffffffffffffffffffffffffffffffffffff9290921682521515602082015260400190565b60405180910390a15b5050610b37565b81516040517f331a894e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911660048201526024016104a4565b610b4081611b63565b90506108b7565b505050565b610b54610ba5565b610b5f600682610e98565b50565b610b6a610ba5565b610b5f8161107d565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260018301602052604081205415155b9392505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610363576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000060448201526064016104a4565b610c2e611172565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152610d3182606001516fffffffffffffffffffffffffffffffff1683600001516fffffffffffffffffffffffffffffffff16846020015163ffffffff1642610d159190611bd5565b85608001516fffffffffffffffffffffffffffffffff166111f6565b6fffffffffffffffffffffffffffffffff1682525063ffffffff4216602082015290565b610d5d610dc4565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610c793390565b60015474010000000000000000000000000000000000000000900460ff1615610363576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064016104a4565b610b5f60068261121e565b6000610b9e8373ffffffffffffffffffffffffffffffffffffffff84166114ad565b6000610b9e8373ffffffffffffffffffffffffffffffffffffffff84166115a0565b8154600090610ec190700100000000000000000000000000000000900463ffffffff1642611bd5565b90508015610f635760018301548354610f09916fffffffffffffffffffffffffffffffff808216928116918591700100000000000000000000000000000000909104166111f6565b83546fffffffffffffffffffffffffffffffff919091167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116177001000000000000000000000000000000004263ffffffff16021783555b60208201518354610f89916fffffffffffffffffffffffffffffffff90811691166115ef565b83548351151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffff000000000000000000000000000000009091166fffffffffffffffffffffffffffffffff92831617178455602083015160408085015183167001000000000000000000000000000000000291909216176001850155517f9ea3374b67bf275e6bb9c8ae68f9cae023e1c528b4b27e092f0bb209d3531c19906110709084908151151581526020808301516fffffffffffffffffffffffffffffffff90811691830191909152604092830151169181019190915260600190565b60405180910390a1505050565b3373ffffffffffffffffffffffffffffffffffffffff8216036110fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016104a4565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60015474010000000000000000000000000000000000000000900460ff16610363576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016104a4565b6000611215856112068486611be8565b6112109087611bff565b6115ef565b95945050505050565b815474010000000000000000000000000000000000000000900460ff161580611245575080155b1561124e575050565b815460018301546fffffffffffffffffffffffffffffffff8083169291169060009061129490700100000000000000000000000000000000900463ffffffff1642611bd5565b9050801561135457818311156112d6576040517f9725942a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018501546113109083908590849070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff166111f6565b85547fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff167001000000000000000000000000000000004263ffffffff160217865592505b83821015611398576040517f48369c4300000000000000000000000000000000000000000000000000000000815260048101839052602481018590526044016104a4565b8383101561142c5760018581015470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff169081906113d99082611bd5565b6113e38688611bd5565b6113ed9190611bff565b6113f79190611c12565b6040517fdc96cefa0000000000000000000000000000000000000000000000000000000081526004016104a491815260200190565b6114368484611bd5565b85547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff82161786556040518581529093507f1871cdf8010e63f2eb8384381a68dfa7416dc571a5517e66e88b2d2d0c0a690a9060200160405180910390a15050505050565b600081815260018301602052604081205480156115965760006114d1600183611bd5565b85549091506000906114e590600190611bd5565b905081811461154a57600086600001828154811061150557611505611b05565b906000526020600020015490508087600001848154811061152857611528611b05565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061155b5761155b611c4d565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610340565b6000915050610340565b60008181526001830160205260408120546115e757508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610340565b506000610340565b60008183106115fe5781610b9e565b5090919050565b60006020828403121561161757600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610b9e57600080fd5b803573ffffffffffffffffffffffffffffffffffffffff8116811461166b57600080fd5b919050565b60006020828403121561168257600080fd5b610b9e82611647565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156116dd576116dd61168b565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561172a5761172a61168b565b604052919050565b600082601f83011261174357600080fd5b813567ffffffffffffffff81111561175d5761175d61168b565b61178e60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016116e3565b8181528460208386010111156117a357600080fd5b816020850160208301376000918101602001919091529392505050565b67ffffffffffffffff81168114610b5f57600080fd5b600080600080600060a086880312156117ee57600080fd5b853567ffffffffffffffff8082111561180657600080fd5b61181289838a01611732565b965061182060208901611647565b95506040880135945060608801359150611839826117c0565b9092506080870135908082111561184f57600080fd5b5061185c88828901611732565b9150509295509295909350565b60008083601f84011261187b57600080fd5b50813567ffffffffffffffff81111561189357600080fd5b6020830191508360208285010111156118ab57600080fd5b9250929050565b600080600080600080600060a0888a0312156118cd57600080fd5b6118d688611647565b9650602088013567ffffffffffffffff808211156118f357600080fd5b6118ff8b838c01611869565b909850965060408a0135955060608a0135915061191b826117c0565b9093506080890135908082111561193157600080fd5b5061193e8a828b01611869565b989b979a50959850939692959293505050565b8015158114610b5f57600080fd5b600082601f83011261197057600080fd5b8135602067ffffffffffffffff82111561198c5761198c61168b565b61199a818360051b016116e3565b82815260069290921b840181019181810190868411156119b957600080fd5b8286015b84811015611a0857604081890312156119d65760008081fd5b6119de6116ba565b6119e782611647565b8152848201356119f681611951565b818601528352918301916040016119bd565b509695505050505050565b60008060408385031215611a2657600080fd5b823567ffffffffffffffff80821115611a3e57600080fd5b611a4a8683870161195f565b93506020850135915080821115611a6057600080fd5b50611a6d8582860161195f565b9150509250929050565b80356fffffffffffffffffffffffffffffffff8116811461166b57600080fd5b600060608284031215611aa957600080fd5b6040516060810181811067ffffffffffffffff82111715611acc57611acc61168b565b6040528235611ada81611951565b8152611ae860208401611a77565b6020820152611af960408401611a77565b60408201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611b9457611b94611b34565b5060010190565b60008060408385031215611bae57600080fd5b8251611bb981611951565b6020840151909250611bca816117c0565b809150509250929050565b8181038181111561034057610340611b34565b808202811582820484141761034057610340611b34565b8082018082111561034057610340611b34565b600082611c48577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea164736f6c6343000813000a",
    "sourceMap": "547:1931:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2429:191:38;;;;;;:::i;:::-;;:::i;:::-;;;516:14:69;;509:22;491:41;;479:2;464:18;2429:191:38;;;;;;;;3242:109;;;;;;:::i;:::-;;:::i;2310:89::-;2387:7;2310:89;;;1127:42:69;1115:55;;;1097:74;;1085:2;1070:18;2310:89:38;935:242:69;6027:59:38;;;:::i;:::-;;4746:146;;;:::i;:::-;;;;;;1462:13:69;;1397:34;1458:22;;;1440:41;;1541:4;1529:17;;;1523:24;1549:10;1519:41;1497:20;;;1490:71;1631:4;1619:17;;;1613:24;1606:32;1599:40;1577:20;;;1570:70;1700:4;1688:17;;;1682:24;1678:33;;1656:20;;;1649:63;1772:4;1760:17;;;1754:24;1750:33;1728:20;;;1721:63;;;;1374:3;1359:19;;1182:608;1615:84:52;1685:7;;;;;;;1615:84;;2983:105:38;;;;;;:::i;:::-;;:::i;1016:265:45:-;;;:::i;5929:55:38:-;;;:::i;1139:305:35:-;;;;;;:::i;:::-;;:::i;1332:81:45:-;1379:7;1401;;;1332:81;;758:245:35;;;;;;:::i;:::-;;:::i;1233:1243:37:-;;;;;;:::i;:::-;;:::i;5059:135:38:-;;;;;;:::i;:::-;;:::i;826:98:45:-;;;;;;:::i;:::-;;:::i;2429:191:38:-;2514:4;2533:38;;;2548:23;2533:38;;:82;;-1:-1:-1;2575:40:38;;;2590:25;2575:40;2533:82;2526:89;2429:191;-1:-1:-1;;2429:191:38:o;3242:109::-;3299:4;3318:28;:10;3338:7;3318:19;:28::i;6027:59::-;1956:20:45;:18;:20::i;:::-;6071:10:38::1;:8;:10::i;:::-;6027:59::o:0;4746:146::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4847:38:38;;;;;;;;:13;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:40;;:38;:40::i;:::-;4840:47;;4746:146;:::o;2983:105::-;3038:4;3057:26;:9;3076:6;3057:18;:26::i;1016:265:45:-;1089:14;;;;1075:10;:28;1067:63;;;;;;;8633:2:69;1067:63:45;;;8615:21:69;8672:2;8652:18;;;8645:30;8711:24;8691:18;;;8684:52;8753:18;;1067:63:45;;;;;;;;;1137:16;1156:7;;1179:10;1169:20;;;;;;;;-1:-1:-1;1195:27:45;;;;;;;1234:42;;1156:7;;;;;1179:10;;1156:7;;1234:42;;;1061:220;1016:265::o;5929:55:38:-;1956:20:45;:18;:20::i;:::-;5971:8:38::1;:6;:8::i;1139:305:35:-:0;1239:19:52;:17;:19::i;:::-;5828:21:38::1;5838:10;5828:9;:21::i;:::-;5823:53;;5858:18;;;;;;;;;;;;;;5823:53;1306:25:35::2;1324:6;1306:17;:25::i;:::-;1337:55;::::0;;;;:37:::2;8974:55:69::0;;;1337::35::2;::::0;::::2;8956:74:69::0;9046:18;;;9039:34;;;1360:7:35::2;1337:37;::::0;::::2;::::0;8929:18:69;;1337:55:35::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;1403:36:35::2;::::0;9230:25:69;;;1403:36:35::2;::::0;::::2;::::0;-1:-1:-1;1410:10:35::2;::::0;-1:-1:-1;1403:36:35::2;::::0;9218:2:69;9203:18;1403:36:35::2;;;;;;;1139:305:::0;;;;;:::o;758:245::-;1239:19:52;:17;:19::i;:::-;5586:20:38::1;5595:10;5586:8;:20::i;:::-;5581:52;;5615:18;;;;;;;;;;;;;;5581:52;916:45:35::2;::::0;;;;::::2;::::0;::::2;9230:25:69::0;;;939:7:35::2;916:37;;::::0;::::2;::::0;9203:18:69;;916:45:35::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;972:26:35::2;::::0;9230:25:69;;;979:10:35::2;::::0;-1:-1:-1;972:26:35::2;::::0;-1:-1:-1;9218:2:69;9203:18;972:26:35::2;;;;;;;758:245:::0;;;;;;;:::o;1233:1243:37:-;1956:20:45;:18;:20::i;:::-;1355:9:37::1;1350:364;1374:7;:14;1370:1;:18;1350:364;;;1403:24;1430:7;1438:1;1430:10;;;;;;;;:::i;:::-;;;;;;;1403:37;;1552:6;:14;;;:75;;1615:11:::0;;1598:29:::1;::::0;:9:::1;::::0;:16:::1;:29::i;:::-;1552:75;;;1583:11:::0;;1569:26:::1;::::0;:9:::1;::::0;:13:::1;:26::i;:::-;1548:160;;;1644:55;1663:7;1671:1;1663:10;;;;;;;;:::i;:::-;;;;;;;:15;;;1680:7;1688:1;1680:10;;;;;;;;:::i;:::-;;;;;;;:18;;;1644:55;;;;;;9653:42:69::0;9641:55;;;;9623:74;;9740:14;9733:22;9728:2;9713:18;;9706:50;9611:2;9596:18;;9455:307;1644:55:37::1;;;;;;;;1548:160;-1:-1:-1::0;1390:3:37::1;::::0;::::1;:::i;:::-;;;1350:364;;;;1725:9;1720:752;1744:8;:15;1740:1;:19;1720:752;;;1774:24;1801:8;1810:1;1801:11;;;;;;;;:::i;:::-;;;;;;;1774:38;;1825:6;:14;;;1820:179;;1873:11:::0;;1855:30:::1;::::0;:10:::1;::::0;:17:::1;:30::i;:::-;1851:122;;;1904:58;1924:8;1933:1;1924:11;;;;;;;;:::i;:::-;;;;;;;:16;;;1942:8;1951:1;1942:11;;;;;;;;:::i;:::-;;;;;;;:19;;;1904:58;;;;;;9653:42:69::0;9641:55;;;;9623:74;;9740:14;9733:22;9728:2;9713:18;;9706:50;9611:2;9596:18;;9455:307;1904:58:37::1;;;;;;;;1851:122;1982:8;;;1820:179;2217:8;::::0;2237:11;;2210:39:::1;::::0;;;;2217:8:::1;1115:55:69::0;;;2210:39:37::1;::::0;::::1;1097:74:69::0;2193:11:37::1;::::0;2217:8;;;::::1;::::0;2210:26:::1;::::0;1070:18:69;;2210:39:37::1;::::0;::::1;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2192:57;;;2261:6;2257:167;;;2298:11:::0;;2283:27:::1;::::0;:10:::1;::::0;:14:::1;:27::i;:::-;2279:119;;;2329:58;2349:8;2358:1;2349:11;;;;;;;;:::i;:::-;;;;;;;:16;;;2367:8;2376:1;2367:11;;;;;;;;:::i;:::-;;;;;;;:19;;;2329:58;;;;;;9653:42:69::0;9641:55;;;;9623:74;;9740:14;9733:22;9728:2;9713:18;;9706:50;9611:2;9596:18;;9455:307;2329:58:37::1;;;;;;;;2279:119;2407:8;;;;2257:167;2453:11:::0;;2438:27:::1;::::0;::::1;::::0;;1127:42:69;1115:55;;;2438:27:37::1;::::0;::::1;1097:74:69::0;1070:18;;2438:27:37::1;935:242:69::0;1720:752:37::1;1761:3;::::0;::::1;:::i;:::-;;;1720:752;;;;1233:1243:::0;;:::o;5059:135:38:-;1956:20:45;:18;:20::i;:::-;5146:43:38::1;:13;5182:6:::0;5146:35:::1;:43::i;:::-;5059:135:::0;:::o;826:98:45:-;1956:20;:18;:20::i;:::-;897:22:::1;916:2;897:18;:22::i;8294:159:68:-:0;8423:23;;;8374:4;4067:19;;;:12;;;:19;;;;;;:24;;8393:55;8386:62;8294:159;-1:-1:-1;;;8294:159:68:o;1730:111:45:-;1802:7;;;;1788:10;:21;1780:56;;;;;;;10740:2:69;1780:56:45;;;10722:21:69;10779:2;10759:18;;;10752:30;10818:24;10798:18;;;10791:52;10860:18;;1780:56:45;10538:346:69;2433:117:52;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;;::::1;::::0;;2521:22:::1;713:10:60::0;2530:12:52::1;2521:22;::::0;1127:42:69;1115:55;;;1097:74;;1085:2;1070:18;2521:22:52::1;;;;;;;2433:117::o:0;3371:528:28:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3720:99:28;3737:6;:15;;;3720:99;;3754:6;:13;;;3720:99;;3787:6;:18;;;3769:36;;:15;:36;;;;:::i;:::-;3807:6;:11;;;3720:99;;:16;:99::i;:::-;3689:136;;;;-1:-1:-1;3831:44:28;3859:15;3831:44;:18;;;:44;3689:6;3371:528::o;2186:115:52:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:14:::0;;;::::1;::::0;::::1;::::0;;2274:20:::1;2281:12;713:10:60::0;;638:90;1767:106:52;1685:7;;;;;;;1836:9;1828:38;;;;;;;11224:2:69;1828:38:52;;;11206:21:69;11263:2;11243:18;;;11236:30;11302:18;11282;;;11275:46;11338:18;;1828:38:52;11022:340:69;4530:93:38;4588:30;:13;4611:6;4588:22;:30::i;8071:150:68:-;8144:4;8163:53;8171:3;8191:23;;;8163:7;:53::i;7773:144::-;7843:4;7862:50;7867:3;7887:23;;;7862:4;:50::i;4021:700:28:-;4276:20;;4239:16;;4258:38;;4276:20;;;;;4258:15;:38;:::i;:::-;4239:57;-1:-1:-1;4306:13:28;;4302:193;;4372:17;;;;4391:15;;4355:77;;4372:17;;;;;4391:15;;;4408:8;;4418:13;;;;;4355:16;:77::i;:::-;4329:104;;;;;;;4442:46;;;;;;4472:15;4442:46;;;;;;4302:193;4532:15;;;;4549;;4527:38;;;;;;;4549:15;4527:4;:38::i;:::-;4501:65;;4593:16;;4572:37;;;;;;;;4501:65;;;;4572:37;;;;4635:15;;;;4672:11;;;;;4656:27;;;;4615:35;;;;4656:27;4501:65;4615:17;;4656:27;4695:21;;;;;4593:6;;11593:13:69;;11586:21;11579:29;11561:48;;11656:4;11644:17;;;11638:24;11681:34;11753:21;;;11731:20;;;11724:51;;;;11835:4;11823:17;;;11817:24;11813:33;11791:20;;;11784:63;;;;11549:2;11534:18;;11367:486;4695:21:28;;;;;;;;4113:608;4021:700;;:::o;1497:188:45:-;1565:10;1559:16;;;;1551:52;;;;;;;12060:2:69;1551:52:45;;;12042:21:69;12099:2;12079:18;;;12072:30;12138:25;12118:18;;;12111:53;12181:18;;1551:52:45;11858:347:69;1551:52:45;1610:14;:19;;;;;;;;;;;;;;-1:-1:-1;1668:7:45;;1641:39;;1610:19;;1668:7;;1641:39;;-1:-1:-1;1641:39:45;1497:188;:::o;1945:106:52:-;1685:7;;;;;;;2003:41;;;;;;;12412:2:69;2003:41:52;;;12394:21:69;12451:2;12431:18;;;12424:30;12490:22;12470:18;;;12463:50;12530:18;;2003:41:52;12210:344:69;4991:201:28;5125:7;5147:40;5152:8;5171:15;5182:4;5171:8;:15;:::i;:::-;5162:24;;:6;:24;:::i;:::-;5147:4;:40::i;:::-;5140:47;4991:201;-1:-1:-1;;;;;4991:201:28:o;2003:1245::-;2199:18;;;;;;;2198:19;;:41;;-1:-1:-1;2221:18:28;;2198:41;2194:68;;;2003:1245;;:::o;2194:68::-;2285:15;;;2325:17;;;2285:15;;;;;2325:17;;;2268:14;;2367:38;;2385:20;;;;;2367:15;:38;:::i;:::-;2348:57;-1:-1:-1;2416:13:28;;2412:271;;2452:8;2443:6;:17;2439:48;;;2469:18;;;;;;;;;;;;;;2439:48;2607:13;;;;2562:59;;2579:8;;2589:6;;2597:8;;2607:13;;;;;2562:16;:59::i;:::-;2630:46;;;;;2660:15;2630:46;;;;;;2553:68;-1:-1:-1;2412:271:28;2704:13;2693:8;:24;2689:90;;;2726:53;;;;;;;;13036:25:69;;;13077:18;;;13070:34;;;13009:18;;2726:53:28;12862:248:69;2689:90:28;2798:13;2789:6;:22;2785:282;;;2836:13;;;;;;;;;;;;;3042:8;;2836:13;3042:8;:::i;:::-;3015:22;3031:6;3015:13;:22;:::i;:::-;3014:37;;;;:::i;:::-;3013:46;;;;:::i;:::-;2996:64;;;;;;;;;9230:25:69;;9218:2;9203:18;;9084:177;2785:282:28;3072:23;3082:13;3072:23;;:::i;:::-;3170:33;;;;;;;;;;3214:29;;9230:25:69;;;3170:33:28;;-1:-1:-1;3214:29:28;;9218:2:69;9203:18;3214:29:28;;;;;;;2083:1165;;;2003:1245;;:::o;2660:1242:68:-;2726:4;2855:19;;;:12;;;:19;;;;;;2885:15;;2881:1017;;3224:21;3248:14;3261:1;3248:10;:14;:::i;:::-;3290:18;;3224:38;;-1:-1:-1;3270:17:68;;3290:22;;3311:1;;3290:22;:::i;:::-;3270:42;;3338:13;3325:9;:26;3321:352;;3363:17;3383:3;:11;;3395:9;3383:22;;;;;;;;:::i;:::-;;;;;;;;;3363:42;;3518:9;3489:3;:11;;3501:13;3489:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3585:23;;;:12;;;:23;;;;;:36;;;3321:352;3739:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3819:3;:12;;:19;3832:5;3819:19;;;;;;;;;;;3812:26;;;3854:4;3847:11;;;;;;;2881:1017;3886:5;3879:12;;;;;2152:354;2215:4;4067:19;;;:12;;;:19;;;;;;2227:275;;-1:-1:-1;2263:23:68;;;;;;;;:11;:23;;;;;;;;;;;;;2425:18;;2403:19;;;:12;;;:19;;;;;;:40;;;;2451:11;;2227:275;-1:-1:-1;2490:5:68;2483:12;;5320:99:28;5379:7;5405:1;5401;:5;:13;;5413:1;5401:13;;;-1:-1:-1;5409:1:28;;5320:99;-1:-1:-1;5320:99:28:o;14:332:69:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;543:196;611:20;;671:42;660:54;;650:65;;640:93;;729:1;726;719:12;640:93;543:196;;;:::o;744:186::-;803:6;856:2;844:9;835:7;831:23;827:32;824:52;;;872:1;869;862:12;824:52;895:29;914:9;895:29;:::i;1795:184::-;1847:77;1844:1;1837:88;1944:4;1941:1;1934:15;1968:4;1965:1;1958:15;1984:257;2056:4;2050:11;;;2088:17;;2135:18;2120:34;;2156:22;;;2117:62;2114:88;;;2182:18;;:::i;:::-;2218:4;2211:24;1984:257;:::o;2246:334::-;2317:2;2311:9;2373:2;2363:13;;2378:66;2359:86;2347:99;;2476:18;2461:34;;2497:22;;;2458:62;2455:88;;;2523:18;;:::i;:::-;2559:2;2552:22;2246:334;;-1:-1:-1;2246:334:69:o;2585:589::-;2627:5;2680:3;2673:4;2665:6;2661:17;2657:27;2647:55;;2698:1;2695;2688:12;2647:55;2734:6;2721:20;2760:18;2756:2;2753:26;2750:52;;;2782:18;;:::i;:::-;2826:114;2934:4;2865:66;2858:4;2854:2;2850:13;2846:86;2842:97;2826:114;:::i;:::-;2965:2;2956:7;2949:19;3011:3;3004:4;2999:2;2991:6;2987:15;2983:26;2980:35;2977:55;;;3028:1;3025;3018:12;2977:55;3093:2;3086:4;3078:6;3074:17;3067:4;3058:7;3054:18;3041:55;3141:1;3116:16;;;3134:4;3112:27;3105:38;;;;3120:7;2585:589;-1:-1:-1;;;2585:589:69:o;3179:129::-;3264:18;3257:5;3253:30;3246:5;3243:41;3233:69;;3298:1;3295;3288:12;3313:816;3425:6;3433;3441;3449;3457;3510:3;3498:9;3489:7;3485:23;3481:33;3478:53;;;3527:1;3524;3517:12;3478:53;3567:9;3554:23;3596:18;3637:2;3629:6;3626:14;3623:34;;;3653:1;3650;3643:12;3623:34;3676:49;3717:7;3708:6;3697:9;3693:22;3676:49;:::i;:::-;3666:59;;3744:38;3778:2;3767:9;3763:18;3744:38;:::i;:::-;3734:48;;3829:2;3818:9;3814:18;3801:32;3791:42;;3883:2;3872:9;3868:18;3855:32;3842:45;;3896:30;3920:5;3896:30;:::i;:::-;3945:5;;-1:-1:-1;4003:3:69;3988:19;;3975:33;;4020:16;;;4017:36;;;4049:1;4046;4039:12;4017:36;;4072:51;4115:7;4104:8;4093:9;4089:24;4072:51;:::i;:::-;4062:61;;;3313:816;;;;;;;;:::o;4365:347::-;4416:8;4426:6;4480:3;4473:4;4465:6;4461:17;4457:27;4447:55;;4498:1;4495;4488:12;4447:55;-1:-1:-1;4521:20:69;;4564:18;4553:30;;4550:50;;;4596:1;4593;4586:12;4550:50;4633:4;4625:6;4621:17;4609:29;;4685:3;4678:4;4669:6;4661;4657:19;4653:30;4650:39;4647:59;;;4702:1;4699;4692:12;4647:59;4365:347;;;;;:::o;4717:994::-;4833:6;4841;4849;4857;4865;4873;4881;4934:3;4922:9;4913:7;4909:23;4905:33;4902:53;;;4951:1;4948;4941:12;4902:53;4974:29;4993:9;4974:29;:::i;:::-;4964:39;;5054:2;5043:9;5039:18;5026:32;5077:18;5118:2;5110:6;5107:14;5104:34;;;5134:1;5131;5124:12;5104:34;5173:58;5223:7;5214:6;5203:9;5199:22;5173:58;:::i;:::-;5250:8;;-1:-1:-1;5147:84:69;-1:-1:-1;5332:2:69;5317:18;;5304:32;;-1:-1:-1;5386:2:69;5371:18;;5358:32;;-1:-1:-1;5399:30:69;5358:32;5399:30;:::i;:::-;5448:5;;-1:-1:-1;5506:3:69;5491:19;;5478:33;;5523:16;;;5520:36;;;5552:1;5549;5542:12;5520:36;;5591:60;5643:7;5632:8;5621:9;5617:24;5591:60;:::i;:::-;4717:994;;;;-1:-1:-1;4717:994:69;;-1:-1:-1;4717:994:69;;;;5565:86;;-1:-1:-1;;;4717:994:69:o;5716:118::-;5802:5;5795:13;5788:21;5781:5;5778:32;5768:60;;5824:1;5821;5814:12;5839:1066;5903:5;5956:3;5949:4;5941:6;5937:17;5933:27;5923:55;;5974:1;5971;5964:12;5923:55;6010:6;5997:20;6036:4;6059:18;6055:2;6052:26;6049:52;;;6081:18;;:::i;:::-;6121:36;6153:2;6148;6145:1;6141:10;6137:19;6121:36;:::i;:::-;6191:15;;;6277:1;6273:10;;;;6261:23;;6257:32;;;6222:12;;;;6301:15;;;6298:35;;;6329:1;6326;6319:12;6298:35;6365:2;6357:6;6353:15;6377:499;6393:6;6388:3;6385:15;6377:499;;;6471:4;6465:3;6460;6456:13;6452:24;6449:114;;;6517:1;6546:2;6542;6535:14;6449:114;6589:22;;:::i;:::-;6638:23;6657:3;6638:23;:::i;:::-;6631:5;6624:38;6712:2;6707:3;6703:12;6690:26;6729:30;6751:7;6729:30;:::i;:::-;6779:14;;;6772:31;6816:18;;6854:12;;;;6419:4;6410:14;6377:499;;;-1:-1:-1;6894:5:69;5839:1066;-1:-1:-1;;;;;;5839:1066:69:o;6910:673::-;7086:6;7094;7147:2;7135:9;7126:7;7122:23;7118:32;7115:52;;;7163:1;7160;7153:12;7115:52;7203:9;7190:23;7232:18;7273:2;7265:6;7262:14;7259:34;;;7289:1;7286;7279:12;7259:34;7312:71;7375:7;7366:6;7355:9;7351:22;7312:71;:::i;:::-;7302:81;;7436:2;7425:9;7421:18;7408:32;7392:48;;7465:2;7455:8;7452:16;7449:36;;;7481:1;7478;7471:12;7449:36;;7504:73;7569:7;7558:8;7547:9;7543:24;7504:73;:::i;:::-;7494:83;;;6910:673;;;;;:::o;7588:188::-;7656:20;;7716:34;7705:46;;7695:57;;7685:85;;7766:1;7763;7756:12;7781:645;7864:6;7917:2;7905:9;7896:7;7892:23;7888:32;7885:52;;;7933:1;7930;7923:12;7885:52;7966:2;7960:9;8008:2;8000:6;7996:15;8077:6;8065:10;8062:22;8041:18;8029:10;8026:34;8023:62;8020:88;;;8088:18;;:::i;:::-;8124:2;8117:22;8161:23;;8193:28;8161:23;8193:28;:::i;:::-;8230:21;;8284:38;8318:2;8303:18;;8284:38;:::i;:::-;8279:2;8271:6;8267:15;8260:63;8356:38;8390:2;8379:9;8375:18;8356:38;:::i;:::-;8351:2;8339:15;;8332:63;8343:6;7781:645;-1:-1:-1;;;7781:645:69:o;9266:184::-;9318:77;9315:1;9308:88;9415:4;9412:1;9405:15;9439:4;9436:1;9429:15;9767:184;9819:77;9816:1;9809:88;9916:4;9913:1;9906:15;9940:4;9937:1;9930:15;9956:195;9995:3;10026:66;10019:5;10016:77;10013:103;;10096:18;;:::i;:::-;-1:-1:-1;10143:1:69;10132:13;;9956:195::o;10156:377::-;10231:6;10239;10292:2;10280:9;10271:7;10267:23;10263:32;10260:52;;;10308:1;10305;10298:12;10260:52;10340:9;10334:16;10359:28;10381:5;10359:28;:::i;:::-;10456:2;10441:18;;10435:25;10406:5;;-1:-1:-1;10469:32:69;10435:25;10469:32;:::i;:::-;10520:7;10510:17;;;10156:377;;;;;:::o;10889:128::-;10956:9;;;10977:11;;;10974:37;;;10991:18;;:::i;12559:168::-;12632:9;;;12663;;12680:15;;;12674:22;;12660:37;12650:71;;12701:18;;:::i;12732:125::-;12797:9;;;12818:10;;;12815:36;;;12831:18;;:::i;13115:274::-;13155:1;13181;13171:189;;13216:77;13213:1;13206:88;13317:4;13314:1;13307:15;13345:4;13342:1;13335:15;13171:189;-1:-1:-1;13374:9:69;;13115:274::o;13394:184::-;13446:77;13443:1;13436:88;13543:4;13540:1;13533:15;13567:4;13564:1;13557:15",
    "linkReferences": {},
    "immutableReferences": {
      "12399": [
        {
          "start": 311,
          "length": 32
        },
        {
          "start": 1493,
          "length": 32
        },
        {
          "start": 1787,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "applyRampUpdates((address,bool)[],(address,bool)[])": "af519112",
    "currentRateLimiterState()": "546719cd",
    "getToken()": "21df0da7",
    "isOffRamp(address)": "1d7a74a0",
    "isOnRamp(address)": "6f32b872",
    "lockOrBurn(address,bytes,uint256,uint64,bytes)": "96875445",
    "owner()": "8da5cb5b",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "releaseOrMint(bytes,address,uint256,uint64,bytes)": "8627fad6",
    "setRateLimiterConfig((bool,uint128,uint128))": "c92b2832",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferOwnership(address)": "f2fde38b",
    "unpause()": "3f4ba83a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBurnMintERC20\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"internalType\":\"struct RateLimiter.Config\",\"name\":\"rateLimiterConfig\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BucketOverfilled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"}],\"name\":\"ConsumingMoreThanMaxCapacity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"offRamp\",\"type\":\"address\"}],\"name\":\"InvalidOffRamp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NullAddressNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PermissionsError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"waitInSeconds\",\"type\":\"uint256\"}],\"name\":\"RateLimitReached\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Locked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"onRamp\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"OffRampAllowanceSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"onRamp\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"OnRampAllowanceSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"ramp\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"internalType\":\"struct TokenPool.RampUpdate[]\",\"name\":\"onRamps\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"ramp\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"internalType\":\"struct TokenPool.RampUpdate[]\",\"name\":\"offRamps\",\"type\":\"tuple[]\"}],\"name\":\"applyRampUpdates\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRateLimiterState\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"tokens\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"lastUpdated\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"internalType\":\"struct RateLimiter.TokenBucket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"offRamp\",\"type\":\"address\"}],\"name\":\"isOffRamp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"onRamp\",\"type\":\"address\"}],\"name\":\"isOnRamp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"lockOrBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"releaseOrMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"internalType\":\"struct RateLimiter.Config\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"setRateLimiterConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"applyRampUpdates((address,bool)[],(address,bool)[])\":{\"details\":\"Only callable by the owner\",\"params\":{\"offRamps\":\"A list of offRamps and their new permission status\",\"onRamps\":\"A list of onRamps and their new permission status\"}},\"currentRateLimiterState()\":{\"returns\":{\"_0\":\"The token bucket.\"}},\"getToken()\":{\"returns\":{\"token\":\"The IERC20 token representation.\"}},\"isOffRamp(address)\":{\"returns\":{\"_0\":\"true is the given address is a permissioned offRamp.\"}},\"isOnRamp(address)\":{\"returns\":{\"_0\":\"true if the given address is a permissioned onRamp.\"}},\"lockOrBurn(address,bytes,uint256,uint64,bytes)\":{\"details\":\"Burn is not rate limited at per-pool level. Burn does not contribute to honey pot risk. Benefits of rate limiting here does not justify the extra gas cost.\",\"params\":{\"amount\":\"Amount to burn\"}},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"releaseOrMint(bytes,address,uint256,uint64,bytes)\":{\"params\":{\"amount\":\"Amount to mint\",\"receiver\":\"Recipient address\"}},\"setRateLimiterConfig((bool,uint128,uint128))\":{\"details\":\"should only be callable by the owner or token limit admin.\",\"params\":{\"config\":\"The new rate limiter config.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"applyRampUpdates((address,bool)[],(address,bool)[])\":{\"notice\":\"Sets permissions for all on and offRamps.\"},\"currentRateLimiterState()\":{\"notice\":\"Gets the token bucket with its values for the block it was requested at.\"},\"getToken()\":{\"notice\":\"Gets the IERC20 token that this pool can lock or burn.\"},\"isOffRamp(address)\":{\"notice\":\"Checks whether something is a permissioned offRamp on this contract.\"},\"isOnRamp(address)\":{\"notice\":\"Checks whether something is a permissioned onRamp on this contract.\"},\"lockOrBurn(address,bytes,uint256,uint64,bytes)\":{\"notice\":\"Burn the token in the pool\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"pause()\":{\"notice\":\"Pauses the token pool.\"},\"releaseOrMint(bytes,address,uint256,uint64,bytes)\":{\"notice\":\"Mint tokens from the pool to the recipient\"},\"setRateLimiterConfig((bool,uint128,uint128))\":{\"notice\":\"Sets the rate limited config.\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"},\"unpause()\":{\"notice\":\"Unpauses the token pool.\"}},\"notice\":\"This pool mints and burns a 3rd-party token. This pool is not owned by the DON\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/pools/ThirdPartyBurnMintTokenPool.sol\":\"ThirdPartyBurnMintTokenPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":30000},\"remappings\":[]},\"sources\":{\"contracts/OwnerIsCreator.sol\":{\"keccak256\":\"0xb9a890795a532c39766da1c6e8ef202e7bfc39e1a5deef36503be4fcdd360e2f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2112758933edb2f9dc368a4d426f5db9d3556d9592d68fa37f83c5946f985fe9\",\"dweb:/ipfs/QmV36JwTwSSrAgt5zvPiuo1NhVWacokJKrtHqVVBePUNFo\"]},\"contracts/Router.sol\":{\"keccak256\":\"0xb507c8632192de61365c3ea7fa9156e9d66c8055e33595023237060b1a4d017a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://197e5dbdbc82822fb72e0f155d3706eb86f1bba62b647d7c08d12d726be9acff\",\"dweb:/ipfs/QmbgFfH21mDxsFGdfMF312QZJ4Bj2uC3UFKkGRV1gmtCgP\"]},\"contracts/interfaces/IAny2EVMMessageReceiver.sol\":{\"keccak256\":\"0x8c378d493cb48c2094bb3a08e0934c9fd9ae2690cab9df12119329c10d585fec\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e14cc78c3210475709c6d0a6ab6ef9a5532acb8467e87ae32d8aea8e687b51fd\",\"dweb:/ipfs/QmfBChjRsdGTuEjjKVyALeXG6mMxXDJtDdHikkyyqMv7uQ\"]},\"contracts/interfaces/IEVM2AnyOnRamp.sol\":{\"keccak256\":\"0x855c4ff608c47bf9aedd4f10b7b66b7770dd2e2d1c32721d5358af3e1240a7e9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6b37b65d38e2884c885d8a514ba0e6fe64e07cf9407c278e73e9d0f321e903d2\",\"dweb:/ipfs/QmQcBtmgUdc2gYzokEuFPsURSSTvVjEvxmY9zgvrMHEbH2\"]},\"contracts/interfaces/IRouter.sol\":{\"keccak256\":\"0x6bde62bdca7369b76bb557050235931797d69676e2df4ed1b415e1e001342cdb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e22731e0a4c28b54b8b3aaaee54a6cb942d95a335684adc4de73c3bd3dec582f\",\"dweb:/ipfs/Qmao3kekXG6cdy2t6htxVjrki5RYw3JDtqBrTGfMvTW5MC\"]},\"contracts/interfaces/IRouterClient.sol\":{\"keccak256\":\"0xbf5471e441597fcf9a04280d222474b18f87fea901116dd3c4c20823009332fc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://93514ee7e3ba94ba5fbb6904045ad1fe6bdc85e53cd45dd888b9756dbf7a0e7b\",\"dweb:/ipfs/QmcitG6SVwvNCvgvzpye1yX4HFR33urJFCDTwX4d1rUepu\"]},\"contracts/interfaces/ITypeAndVersion.sol\":{\"keccak256\":\"0x7fb4ee7e597096cf09a1fa0d7c752be16d8eb1403a8c5cdb967670b29c640e2d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1101ac2a3616dc8cb856cb4a8bb00d2862824bc992f62c05f41c47d104e4def8\",\"dweb:/ipfs/QmXXMBm3Cp1HPzBm4ECmPJRCyHmPLzwLxkZmyFxeiLYqXE\"]},\"contracts/interfaces/IWrappedNative.sol\":{\"keccak256\":\"0xd5a9700a32c536fdd4bc21b10c43e52cc1d9fdc5780319c4018cd9d37a6f3ce4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://50758285191633e655dac9ea825e1534bf445d75ef8fe102bc7120abdc7105c4\",\"dweb:/ipfs/QmcqQBH1qAXzCmCUC1TbmgBspHEy6tTZuVoDd99ZbbUhGx\"]},\"contracts/interfaces/pools/IBurnMintERC20.sol\":{\"keccak256\":\"0x09024edaebe3dbe293aa8476187fedb016b8f5bec79a7e529a33386c49a0ca56\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ed2d34247520308e6404dad20fbf2ee84c82eee89c3883afa2878f6f851e4a25\",\"dweb:/ipfs/QmcnAx1fLbNLBL5twrsRhQoCQRWwCEdUHFNH1g2cSCDeeH\"]},\"contracts/interfaces/pools/IPool.sol\":{\"keccak256\":\"0x8e3209bf472b101ee7876ae53cc31bf348c4792e11380b79a53a6b596a1008d1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://36cd8e5d36825dbd2cf0683510a4e45cb857a8b7b447bad217a9f0d5cc738d4b\",\"dweb:/ipfs/QmRDV3VgmdHmo9Bnyri8ePwN2zDNapgpDbhNKNHPiEVpFK\"]},\"contracts/libraries/Client.sol\":{\"keccak256\":\"0xf2616f59db15ba0493e4ce3514ea0655cbc9b65ee754e7fc012fe19752659574\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3ebc41940d13751005c195f743f5f22cc1e7b98f6d72cc10116b4853b5ac9837\",\"dweb:/ipfs/QmNweYHQHsTLWFa9cy8XJgxFRgH97XLAGxPw3k8diwrTj6\"]},\"contracts/libraries/Internal.sol\":{\"keccak256\":\"0xc407f1489512ef93343ac01ed4b722f443b831abb94774f22f80d624a1c00866\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://acc89e538dac709aa4c168a787d497490b4639f8902d34a64ce69291d8dd2b1b\",\"dweb:/ipfs/QmTDSbiYUf9cs6yD5jMHmiFSSQSyzwH4yMsZ8v2PhSruU7\"]},\"contracts/libraries/MerkleMultiProof.sol\":{\"keccak256\":\"0xf790a5d6474b97967073c3594c91f32f39df3329922241a1a6c16d40ca1c56c7\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2648b6c6419109e99d3978632b6a534ec238f380284d4fb7da896f9b6c97add5\",\"dweb:/ipfs/QmS5MCzK8iuCNEZJeRXWdtjxMmNqtG6Yz873QtQt4EhWAP\"]},\"contracts/libraries/RateLimiter.sol\":{\"keccak256\":\"0xbd8f971d35bc5ad464b48277220c3ab0f57198fb3bf27959d1d8b8c6fc187aad\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9f1b60b876887943f880d033341b70f513f3e77bfd68c875920df8f57a84e1e0\",\"dweb:/ipfs/QmYVt4qGACebfu4BMNpwhcerWbiLmw6jFTddwYYqfoMDCa\"]},\"contracts/pools/BurnMintTokenPool.sol\":{\"keccak256\":\"0xd5ded946526913323dcda0bb9dcc2446ab5e2ee6abe6592a6c606d7243b9ab45\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://918e9d88168f1573ec8d6adc61f45af201eab8f81b98764f9c2baf5672383ccc\",\"dweb:/ipfs/QmSVehaoE5fCCWt5C1sfKpU8Ba3b2s4X6cYohxpJZcbJe5\"]},\"contracts/pools/ThirdPartyBurnMintTokenPool.sol\":{\"keccak256\":\"0x7055fffcb05f8754a5f264bf96ac0e9ad6eba1e4694d876793f6f92e1047b9a5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ce330e65fb93e172827bd4d5ba20ed5381befb3116421e010f4e8cdb1e2a9f26\",\"dweb:/ipfs/QmNkC4wEvQTQCPZzRqSB9Jg1WLsqZDAgQ4kUZdK6yC9nWs\"]},\"contracts/pools/TokenPool.sol\":{\"keccak256\":\"0x294306cef2b7f179e75d12345248e7f7c45809780a9ef2c61348e961d1ea756e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4cffc3ac92379d95324538fa494cf4224b407afdea9d5f63a0e98d2d468b4c70\",\"dweb:/ipfs/QmakbAigzsqs24JDydh9XpRyGGrSVnCwtFjUh4URa47CgZ\"]},\"libraries/internal/ConfirmedOwner.sol\":{\"keccak256\":\"0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0371c1af45db651823b9a3d5af761b08243c78f105166342eee28de356c8dd\",\"dweb:/ipfs/QmPnC9qNDKwJFd5unwLb9pxjrutoe8MWjm5EXHTxq2kJ4x\"]},\"libraries/internal/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0xa2f137a1d066795aeac76226e58f33c982278cdd34b4f09e5a2243d5a0924654\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a73f185d79d82e6d9baa531d55ffb88c80def1f6187dff93d3df6b2cb5ab7187\",\"dweb:/ipfs/QmVZEePJvcN1KxSTaD5rhKhaMBWHqs6ZeZ5s17Ft6mR5hJ\"]},\"libraries/internal/interfaces/OwnableInterface.sol\":{\"keccak256\":\"0xb8b3a97783dddc198b790c4cec1eda7fb47aa38cbaea6555220d0ed8c735c086\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acf7ed6aff47fbddeff1b85e1225a717dfa8bfb3ab89db0e6564346afcf03693\",\"dweb:/ipfs/QmQQn5sKn1ARbt1WhYoHwfTJhK8fbQi8MbDQeHxGXTPbPE\"]},\"vendor/openzeppelin-solidity/v4.8.0/security/Pausable.sol\":{\"keccak256\":\"0x5978f41f111faebf93f1662d7b9ecea6f3f301ac1f6e51dd30a54c8754ecddba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a18930b6432dc69f5ea681452293746262f00432d13e93d763b8729b8a00539\",\"dweb:/ipfs/QmTQsVgdBtuLYC4fSSRNWHCbpGkMiSeETbMfRvxAzGoczb\"]},\"vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf7a52b7d3a7b79117544d6bbeb8564bd22c760c4937d69914b99641a957a8f2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b5afd167693d0e80d30d0f50b718b5df237c97d721383b97154049cabab1128\",\"dweb:/ipfs/QmZpVB96pJpaJmmnqB1RC3qSZk8upgLL22YZtq97JzpK5H\"]},\"vendor/openzeppelin-solidity/v4.8.0/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xca8a1e219f7a427d02b93efd7a4f9ecd76a2e6776b5e196df0a5e4ccc175187b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53eb5ae6a9225130a6b4efc4cad8cc9fff2992e3a95bc1ed518dcb9db965e969\",\"dweb:/ipfs/QmSkLFh7WUYVr8VLkth7RaRQ5siQSw6P45Dc3KT2hFhNnX\"]},\"vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xd1668d9229b21a4630535ca2100c61e4a2905ea7e4e6077c27dfd1caa7d467ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6558c79b0459e0d8f98954af7f1fadf1c5c7809a873742e05ea3f88a5edcc20\",\"dweb:/ipfs/QmaY29cBPKADz8PqyR2M72QLqUgY7o3EYCwQknzpj9u6Da\"]},\"vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":{\"keccak256\":\"0xf77cae3ecd8776056d3d2ceb7b6958d757c6a9825b58665f82d38dbec2f695e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://489b9773cb0ef1d391727d0fea532c94228d0a55051d212c434df404a26a849b\",\"dweb:/ipfs/QmQnapN26it7QbPUrjwbMEeEP8QBtppZwfMkjbHBesKAbF\"]},\"vendor/openzeppelin-solidity/v4.8.0/utils/Context.sol\":{\"keccak256\":\"0xd79a77ff36548f48763b53648e02b983e8297f5d93102b026154a23667c28931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c8bc3433c54bbb9d7cd61f7958e3cd8004383e242285471c23475ddb751196d\",\"dweb:/ipfs/QmSf1dt6GThXUNfEcUvnwHoAoJQZWMQBbqCSg7D6UL2aHa\"]},\"vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xac7a4bfe791ee9fe125cac5cd25795b326433e5cf2bdd6b02ad6ad42c2d126a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e49bdba6c6013040eb546db3bbceca7d2c8ac86a2c15ff2c85eacd0ed8541271\",\"dweb:/ipfs/QmYa5en1yth7SdJfq9M7mcwDJJvy3996PSEjiwzgH1HvJW\"]},\"vendor/openzeppelin-solidity/v4.8.0/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0x68fb09424d69c771ebaeb5a425bcbdbb0725a236c0d83d517992b6f44bd7198d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3a036ba98e5d58911511b85abd620e1d8de7d203ab2a48b2a3d827710847df4\",\"dweb:/ipfs/QmNWrWgkfsk1AoLpWKDkbHu5CZmzEcGzrT74Ug46phm4p5\"]},\"vendor/openzeppelin-solidity/v4.8.0/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xa7a4cdd312769aad895841037e16a97caccb0eb0125b4543bec4d2f5f23ade25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://072861cb9eedb2eb05863773c9b7501bd5999a165ffef701244441a793a6a929\",\"dweb:/ipfs/QmVxj7PTnAz6gRa6pB8ozxexhR8F7tMvF5V9mYMa24T7LZ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IBurnMintERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "struct RateLimiter.Config",
              "name": "rateLimiterConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "router",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BucketOverfilled"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "capacity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "requested",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ConsumingMoreThanMaxCapacity"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "offRamp",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InvalidOffRamp"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NullAddressNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PermissionsError"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "waitInSeconds",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "RateLimitReached"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Burned",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Locked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Minted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "onRamp",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "allowed",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OffRampAllowanceSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "onRamp",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "allowed",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OnRampAllowanceSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferRequested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Released",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "struct TokenPool.RampUpdate[]",
              "name": "onRamps",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "ramp",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "allowed",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "struct TokenPool.RampUpdate[]",
              "name": "offRamps",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "ramp",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "allowed",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "applyRampUpdates"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currentRateLimiterState",
          "outputs": [
            {
              "internalType": "struct RateLimiter.TokenBucket",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "tokens",
                  "type": "uint128"
                },
                {
                  "internalType": "uint32",
                  "name": "lastUpdated",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "offRamp",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOffRamp",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "onRamp",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOnRamp",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lockOrBurn"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "releaseOrMint"
        },
        {
          "inputs": [
            {
              "internalType": "struct RateLimiter.Config",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRateLimiterConfig"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "applyRampUpdates((address,bool)[],(address,bool)[])": {
            "details": "Only callable by the owner",
            "params": {
              "offRamps": "A list of offRamps and their new permission status",
              "onRamps": "A list of onRamps and their new permission status"
            }
          },
          "currentRateLimiterState()": {
            "returns": {
              "_0": "The token bucket."
            }
          },
          "getToken()": {
            "returns": {
              "token": "The IERC20 token representation."
            }
          },
          "isOffRamp(address)": {
            "returns": {
              "_0": "true is the given address is a permissioned offRamp."
            }
          },
          "isOnRamp(address)": {
            "returns": {
              "_0": "true if the given address is a permissioned onRamp."
            }
          },
          "lockOrBurn(address,bytes,uint256,uint64,bytes)": {
            "details": "Burn is not rate limited at per-pool level. Burn does not contribute to honey pot risk. Benefits of rate limiting here does not justify the extra gas cost.",
            "params": {
              "amount": "Amount to burn"
            }
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "releaseOrMint(bytes,address,uint256,uint64,bytes)": {
            "params": {
              "amount": "Amount to mint",
              "receiver": "Recipient address"
            }
          },
          "setRateLimiterConfig((bool,uint128,uint128))": {
            "details": "should only be callable by the owner or token limit admin.",
            "params": {
              "config": "The new rate limiter config."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "acceptOwnership()": {
            "notice": "Allows an ownership transfer to be completed by the recipient."
          },
          "applyRampUpdates((address,bool)[],(address,bool)[])": {
            "notice": "Sets permissions for all on and offRamps."
          },
          "currentRateLimiterState()": {
            "notice": "Gets the token bucket with its values for the block it was requested at."
          },
          "getToken()": {
            "notice": "Gets the IERC20 token that this pool can lock or burn."
          },
          "isOffRamp(address)": {
            "notice": "Checks whether something is a permissioned offRamp on this contract."
          },
          "isOnRamp(address)": {
            "notice": "Checks whether something is a permissioned onRamp on this contract."
          },
          "lockOrBurn(address,bytes,uint256,uint64,bytes)": {
            "notice": "Burn the token in the pool"
          },
          "owner()": {
            "notice": "Get the current owner"
          },
          "pause()": {
            "notice": "Pauses the token pool."
          },
          "releaseOrMint(bytes,address,uint256,uint64,bytes)": {
            "notice": "Mint tokens from the pool to the recipient"
          },
          "setRateLimiterConfig((bool,uint128,uint128))": {
            "notice": "Sets the rate limited config."
          },
          "transferOwnership(address)": {
            "notice": "Allows an owner to begin transferring ownership to a new address, pending."
          },
          "unpause()": {
            "notice": "Unpauses the token pool."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [],
      "optimizer": {
        "enabled": true,
        "runs": 30000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/pools/ThirdPartyBurnMintTokenPool.sol": "ThirdPartyBurnMintTokenPool"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/OwnerIsCreator.sol": {
        "keccak256": "0xb9a890795a532c39766da1c6e8ef202e7bfc39e1a5deef36503be4fcdd360e2f",
        "urls": [
          "bzz-raw://2112758933edb2f9dc368a4d426f5db9d3556d9592d68fa37f83c5946f985fe9",
          "dweb:/ipfs/QmV36JwTwSSrAgt5zvPiuo1NhVWacokJKrtHqVVBePUNFo"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/Router.sol": {
        "keccak256": "0xb507c8632192de61365c3ea7fa9156e9d66c8055e33595023237060b1a4d017a",
        "urls": [
          "bzz-raw://197e5dbdbc82822fb72e0f155d3706eb86f1bba62b647d7c08d12d726be9acff",
          "dweb:/ipfs/QmbgFfH21mDxsFGdfMF312QZJ4Bj2uC3UFKkGRV1gmtCgP"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/interfaces/IAny2EVMMessageReceiver.sol": {
        "keccak256": "0x8c378d493cb48c2094bb3a08e0934c9fd9ae2690cab9df12119329c10d585fec",
        "urls": [
          "bzz-raw://e14cc78c3210475709c6d0a6ab6ef9a5532acb8467e87ae32d8aea8e687b51fd",
          "dweb:/ipfs/QmfBChjRsdGTuEjjKVyALeXG6mMxXDJtDdHikkyyqMv7uQ"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/interfaces/IEVM2AnyOnRamp.sol": {
        "keccak256": "0x855c4ff608c47bf9aedd4f10b7b66b7770dd2e2d1c32721d5358af3e1240a7e9",
        "urls": [
          "bzz-raw://6b37b65d38e2884c885d8a514ba0e6fe64e07cf9407c278e73e9d0f321e903d2",
          "dweb:/ipfs/QmQcBtmgUdc2gYzokEuFPsURSSTvVjEvxmY9zgvrMHEbH2"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/interfaces/IRouter.sol": {
        "keccak256": "0x6bde62bdca7369b76bb557050235931797d69676e2df4ed1b415e1e001342cdb",
        "urls": [
          "bzz-raw://e22731e0a4c28b54b8b3aaaee54a6cb942d95a335684adc4de73c3bd3dec582f",
          "dweb:/ipfs/Qmao3kekXG6cdy2t6htxVjrki5RYw3JDtqBrTGfMvTW5MC"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/interfaces/IRouterClient.sol": {
        "keccak256": "0xbf5471e441597fcf9a04280d222474b18f87fea901116dd3c4c20823009332fc",
        "urls": [
          "bzz-raw://93514ee7e3ba94ba5fbb6904045ad1fe6bdc85e53cd45dd888b9756dbf7a0e7b",
          "dweb:/ipfs/QmcitG6SVwvNCvgvzpye1yX4HFR33urJFCDTwX4d1rUepu"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/interfaces/ITypeAndVersion.sol": {
        "keccak256": "0x7fb4ee7e597096cf09a1fa0d7c752be16d8eb1403a8c5cdb967670b29c640e2d",
        "urls": [
          "bzz-raw://1101ac2a3616dc8cb856cb4a8bb00d2862824bc992f62c05f41c47d104e4def8",
          "dweb:/ipfs/QmXXMBm3Cp1HPzBm4ECmPJRCyHmPLzwLxkZmyFxeiLYqXE"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/interfaces/IWrappedNative.sol": {
        "keccak256": "0xd5a9700a32c536fdd4bc21b10c43e52cc1d9fdc5780319c4018cd9d37a6f3ce4",
        "urls": [
          "bzz-raw://50758285191633e655dac9ea825e1534bf445d75ef8fe102bc7120abdc7105c4",
          "dweb:/ipfs/QmcqQBH1qAXzCmCUC1TbmgBspHEy6tTZuVoDd99ZbbUhGx"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/interfaces/pools/IBurnMintERC20.sol": {
        "keccak256": "0x09024edaebe3dbe293aa8476187fedb016b8f5bec79a7e529a33386c49a0ca56",
        "urls": [
          "bzz-raw://ed2d34247520308e6404dad20fbf2ee84c82eee89c3883afa2878f6f851e4a25",
          "dweb:/ipfs/QmcnAx1fLbNLBL5twrsRhQoCQRWwCEdUHFNH1g2cSCDeeH"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/interfaces/pools/IPool.sol": {
        "keccak256": "0x8e3209bf472b101ee7876ae53cc31bf348c4792e11380b79a53a6b596a1008d1",
        "urls": [
          "bzz-raw://36cd8e5d36825dbd2cf0683510a4e45cb857a8b7b447bad217a9f0d5cc738d4b",
          "dweb:/ipfs/QmRDV3VgmdHmo9Bnyri8ePwN2zDNapgpDbhNKNHPiEVpFK"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/libraries/Client.sol": {
        "keccak256": "0xf2616f59db15ba0493e4ce3514ea0655cbc9b65ee754e7fc012fe19752659574",
        "urls": [
          "bzz-raw://3ebc41940d13751005c195f743f5f22cc1e7b98f6d72cc10116b4853b5ac9837",
          "dweb:/ipfs/QmNweYHQHsTLWFa9cy8XJgxFRgH97XLAGxPw3k8diwrTj6"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/libraries/Internal.sol": {
        "keccak256": "0xc407f1489512ef93343ac01ed4b722f443b831abb94774f22f80d624a1c00866",
        "urls": [
          "bzz-raw://acc89e538dac709aa4c168a787d497490b4639f8902d34a64ce69291d8dd2b1b",
          "dweb:/ipfs/QmTDSbiYUf9cs6yD5jMHmiFSSQSyzwH4yMsZ8v2PhSruU7"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/libraries/MerkleMultiProof.sol": {
        "keccak256": "0xf790a5d6474b97967073c3594c91f32f39df3329922241a1a6c16d40ca1c56c7",
        "urls": [
          "bzz-raw://2648b6c6419109e99d3978632b6a534ec238f380284d4fb7da896f9b6c97add5",
          "dweb:/ipfs/QmS5MCzK8iuCNEZJeRXWdtjxMmNqtG6Yz873QtQt4EhWAP"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/libraries/RateLimiter.sol": {
        "keccak256": "0xbd8f971d35bc5ad464b48277220c3ab0f57198fb3bf27959d1d8b8c6fc187aad",
        "urls": [
          "bzz-raw://9f1b60b876887943f880d033341b70f513f3e77bfd68c875920df8f57a84e1e0",
          "dweb:/ipfs/QmYVt4qGACebfu4BMNpwhcerWbiLmw6jFTddwYYqfoMDCa"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/pools/BurnMintTokenPool.sol": {
        "keccak256": "0xd5ded946526913323dcda0bb9dcc2446ab5e2ee6abe6592a6c606d7243b9ab45",
        "urls": [
          "bzz-raw://918e9d88168f1573ec8d6adc61f45af201eab8f81b98764f9c2baf5672383ccc",
          "dweb:/ipfs/QmSVehaoE5fCCWt5C1sfKpU8Ba3b2s4X6cYohxpJZcbJe5"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/pools/ThirdPartyBurnMintTokenPool.sol": {
        "keccak256": "0x7055fffcb05f8754a5f264bf96ac0e9ad6eba1e4694d876793f6f92e1047b9a5",
        "urls": [
          "bzz-raw://ce330e65fb93e172827bd4d5ba20ed5381befb3116421e010f4e8cdb1e2a9f26",
          "dweb:/ipfs/QmNkC4wEvQTQCPZzRqSB9Jg1WLsqZDAgQ4kUZdK6yC9nWs"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/pools/TokenPool.sol": {
        "keccak256": "0x294306cef2b7f179e75d12345248e7f7c45809780a9ef2c61348e961d1ea756e",
        "urls": [
          "bzz-raw://4cffc3ac92379d95324538fa494cf4224b407afdea9d5f63a0e98d2d468b4c70",
          "dweb:/ipfs/QmakbAigzsqs24JDydh9XpRyGGrSVnCwtFjUh4URa47CgZ"
        ],
        "license": "BUSL-1.1"
      },
      "libraries/internal/ConfirmedOwner.sol": {
        "keccak256": "0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72",
        "urls": [
          "bzz-raw://af0371c1af45db651823b9a3d5af761b08243c78f105166342eee28de356c8dd",
          "dweb:/ipfs/QmPnC9qNDKwJFd5unwLb9pxjrutoe8MWjm5EXHTxq2kJ4x"
        ],
        "license": "MIT"
      },
      "libraries/internal/ConfirmedOwnerWithProposal.sol": {
        "keccak256": "0xa2f137a1d066795aeac76226e58f33c982278cdd34b4f09e5a2243d5a0924654",
        "urls": [
          "bzz-raw://a73f185d79d82e6d9baa531d55ffb88c80def1f6187dff93d3df6b2cb5ab7187",
          "dweb:/ipfs/QmVZEePJvcN1KxSTaD5rhKhaMBWHqs6ZeZ5s17Ft6mR5hJ"
        ],
        "license": "MIT"
      },
      "libraries/internal/interfaces/OwnableInterface.sol": {
        "keccak256": "0xb8b3a97783dddc198b790c4cec1eda7fb47aa38cbaea6555220d0ed8c735c086",
        "urls": [
          "bzz-raw://acf7ed6aff47fbddeff1b85e1225a717dfa8bfb3ab89db0e6564346afcf03693",
          "dweb:/ipfs/QmQQn5sKn1ARbt1WhYoHwfTJhK8fbQi8MbDQeHxGXTPbPE"
        ],
        "license": "MIT"
      },
      "vendor/openzeppelin-solidity/v4.8.0/security/Pausable.sol": {
        "keccak256": "0x5978f41f111faebf93f1662d7b9ecea6f3f301ac1f6e51dd30a54c8754ecddba",
        "urls": [
          "bzz-raw://7a18930b6432dc69f5ea681452293746262f00432d13e93d763b8729b8a00539",
          "dweb:/ipfs/QmTQsVgdBtuLYC4fSSRNWHCbpGkMiSeETbMfRvxAzGoczb"
        ],
        "license": "MIT"
      },
      "vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol": {
        "keccak256": "0xf7a52b7d3a7b79117544d6bbeb8564bd22c760c4937d69914b99641a957a8f2a",
        "urls": [
          "bzz-raw://2b5afd167693d0e80d30d0f50b718b5df237c97d721383b97154049cabab1128",
          "dweb:/ipfs/QmZpVB96pJpaJmmnqB1RC3qSZk8upgLL22YZtq97JzpK5H"
        ],
        "license": "MIT"
      },
      "vendor/openzeppelin-solidity/v4.8.0/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xca8a1e219f7a427d02b93efd7a4f9ecd76a2e6776b5e196df0a5e4ccc175187b",
        "urls": [
          "bzz-raw://53eb5ae6a9225130a6b4efc4cad8cc9fff2992e3a95bc1ed518dcb9db965e969",
          "dweb:/ipfs/QmSkLFh7WUYVr8VLkth7RaRQ5siQSw6P45Dc3KT2hFhNnX"
        ],
        "license": "MIT"
      },
      "vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xd1668d9229b21a4630535ca2100c61e4a2905ea7e4e6077c27dfd1caa7d467ef",
        "urls": [
          "bzz-raw://b6558c79b0459e0d8f98954af7f1fadf1c5c7809a873742e05ea3f88a5edcc20",
          "dweb:/ipfs/QmaY29cBPKADz8PqyR2M72QLqUgY7o3EYCwQknzpj9u6Da"
        ],
        "license": "MIT"
      },
      "vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol": {
        "keccak256": "0xf77cae3ecd8776056d3d2ceb7b6958d757c6a9825b58665f82d38dbec2f695e5",
        "urls": [
          "bzz-raw://489b9773cb0ef1d391727d0fea532c94228d0a55051d212c434df404a26a849b",
          "dweb:/ipfs/QmQnapN26it7QbPUrjwbMEeEP8QBtppZwfMkjbHBesKAbF"
        ],
        "license": "MIT"
      },
      "vendor/openzeppelin-solidity/v4.8.0/utils/Context.sol": {
        "keccak256": "0xd79a77ff36548f48763b53648e02b983e8297f5d93102b026154a23667c28931",
        "urls": [
          "bzz-raw://1c8bc3433c54bbb9d7cd61f7958e3cd8004383e242285471c23475ddb751196d",
          "dweb:/ipfs/QmSf1dt6GThXUNfEcUvnwHoAoJQZWMQBbqCSg7D6UL2aHa"
        ],
        "license": "MIT"
      },
      "vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol": {
        "keccak256": "0xac7a4bfe791ee9fe125cac5cd25795b326433e5cf2bdd6b02ad6ad42c2d126a5",
        "urls": [
          "bzz-raw://e49bdba6c6013040eb546db3bbceca7d2c8ac86a2c15ff2c85eacd0ed8541271",
          "dweb:/ipfs/QmYa5en1yth7SdJfq9M7mcwDJJvy3996PSEjiwzgH1HvJW"
        ],
        "license": "MIT"
      },
      "vendor/openzeppelin-solidity/v4.8.0/utils/structs/EnumerableMap.sol": {
        "keccak256": "0x68fb09424d69c771ebaeb5a425bcbdbb0725a236c0d83d517992b6f44bd7198d",
        "urls": [
          "bzz-raw://c3a036ba98e5d58911511b85abd620e1d8de7d203ab2a48b2a3d827710847df4",
          "dweb:/ipfs/QmNWrWgkfsk1AoLpWKDkbHu5CZmzEcGzrT74Ug46phm4p5"
        ],
        "license": "MIT"
      },
      "vendor/openzeppelin-solidity/v4.8.0/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xa7a4cdd312769aad895841037e16a97caccb0eb0125b4543bec4d2f5f23ade25",
        "urls": [
          "bzz-raw://072861cb9eedb2eb05863773c9b7501bd5999a165ffef701244441a793a6a929",
          "dweb:/ipfs/QmVxj7PTnAz6gRa6pB8ozxexhR8F7tMvF5V9mYMa24T7LZ"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/pools/ThirdPartyBurnMintTokenPool.sol",
    "id": 12313,
    "exportedSymbols": {
      "BurnMintTokenPool": [
        11910
      ],
      "EnumerableSet": [
        19024
      ],
      "IBurnMintERC20": [
        5571
      ],
      "RateLimiter": [
        6367
      ],
      "Router": [
        4192
      ],
      "ThirdPartyBurnMintTokenPool": [
        12312
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:2442:37",
    "nodes": [
      {
        "id": 12124,
        "nodeType": "PragmaDirective",
        "src": "37:23:37",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 12126,
        "nodeType": "ImportDirective",
        "src": "62:70:37",
        "nodes": [],
        "absolutePath": "contracts/interfaces/pools/IBurnMintERC20.sol",
        "file": "../interfaces/pools/IBurnMintERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12313,
        "sourceUnit": 5572,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12125,
              "name": "IBurnMintERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5571,
              "src": "70:14:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12128,
        "nodeType": "ImportDirective",
        "src": "134:57:37",
        "nodes": [],
        "absolutePath": "contracts/libraries/RateLimiter.sol",
        "file": "../libraries/RateLimiter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12313,
        "sourceUnit": 6368,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12127,
              "name": "RateLimiter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6367,
              "src": "142:11:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12130,
        "nodeType": "ImportDirective",
        "src": "192:58:37",
        "nodes": [],
        "absolutePath": "contracts/pools/BurnMintTokenPool.sol",
        "file": "./BurnMintTokenPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12313,
        "sourceUnit": 11911,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12129,
              "name": "BurnMintTokenPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11910,
              "src": "200:17:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12132,
        "nodeType": "ImportDirective",
        "src": "251:37:37",
        "nodes": [],
        "absolutePath": "contracts/Router.sol",
        "file": "../Router.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12313,
        "sourceUnit": 4193,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12131,
              "name": "Router",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4192,
              "src": "259:6:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12134,
        "nodeType": "ImportDirective",
        "src": "290:104:37",
        "nodes": [],
        "absolutePath": "vendor/openzeppelin-solidity/v4.8.0/utils/structs/EnumerableSet.sol",
        "file": "../../vendor/openzeppelin-solidity/v4.8.0/utils/structs/EnumerableSet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12313,
        "sourceUnit": 19025,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12133,
              "name": "EnumerableSet",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 19024,
              "src": "298:13:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12312,
        "nodeType": "ContractDefinition",
        "src": "547:1931:37",
        "nodes": [
          {
            "id": 12141,
            "nodeType": "UsingForDirective",
            "src": "609:49:37",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 12138,
              "name": "EnumerableSet",
              "nameLocations": [
                "615:13:37"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19024,
              "src": "615:13:37"
            },
            "typeName": {
              "id": 12140,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12139,
                "name": "EnumerableSet.AddressSet",
                "nameLocations": [
                  "633:13:37",
                  "647:10:37"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 18737,
                "src": "633:24:37"
              },
              "referencedDeclaration": 18737,
              "src": "633:24:37",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$18737_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            }
          },
          {
            "id": 12145,
            "nodeType": "ErrorDefinition",
            "src": "662:38:37",
            "nodes": [],
            "errorSelector": "331a894e",
            "name": "InvalidOffRamp",
            "nameLocation": "668:14:37",
            "parameters": {
              "id": 12144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12143,
                  "mutability": "mutable",
                  "name": "offRamp",
                  "nameLocation": "691:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 12145,
                  "src": "683:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "683:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "682:17:37"
            }
          },
          {
            "id": 12148,
            "nodeType": "VariableDeclaration",
            "src": "779:24:37",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 12146,
              "nodeType": "StructuredDocumentation",
              "src": "704:72:37",
              "text": "@notice the trusted Router address to validate new offRamps through."
            },
            "mutability": "mutable",
            "name": "s_router",
            "nameLocation": "795:8:37",
            "scope": 12312,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12147,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "779:7:37",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 12168,
            "nodeType": "FunctionDefinition",
            "src": "808:183:37",
            "nodes": [],
            "body": {
              "id": 12167,
              "nodeType": "Block",
              "src": "963:28:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 12165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12163,
                      "name": "s_router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12148,
                      "src": "969:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12164,
                      "name": "router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12156,
                      "src": "980:6:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "969:17:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12166,
                  "nodeType": "ExpressionStatement",
                  "src": "969:17:37"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 12159,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12151,
                    "src": "937:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBurnMintERC20_$5571",
                      "typeString": "contract IBurnMintERC20"
                    }
                  },
                  {
                    "id": 12160,
                    "name": "rateLimiterConfig",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12154,
                    "src": "944:17:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Config_$6069_memory_ptr",
                      "typeString": "struct RateLimiter.Config memory"
                    }
                  }
                ],
                "id": 12161,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 12158,
                  "name": "BurnMintTokenPool",
                  "nameLocations": [
                    "919:17:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11910,
                  "src": "919:17:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "919:43:37"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 12157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12151,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "840:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 12168,
                  "src": "825:20:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBurnMintERC20_$5571",
                    "typeString": "contract IBurnMintERC20"
                  },
                  "typeName": {
                    "id": 12150,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12149,
                      "name": "IBurnMintERC20",
                      "nameLocations": [
                        "825:14:37"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5571,
                      "src": "825:14:37"
                    },
                    "referencedDeclaration": 5571,
                    "src": "825:14:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBurnMintERC20_$5571",
                      "typeString": "contract IBurnMintERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12154,
                  "mutability": "mutable",
                  "name": "rateLimiterConfig",
                  "nameLocation": "877:17:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 12168,
                  "src": "851:43:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Config_$6069_memory_ptr",
                    "typeString": "struct RateLimiter.Config"
                  },
                  "typeName": {
                    "id": 12153,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12152,
                      "name": "RateLimiter.Config",
                      "nameLocations": [
                        "851:11:37",
                        "863:6:37"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6069,
                      "src": "851:18:37"
                    },
                    "referencedDeclaration": 6069,
                    "src": "851:18:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Config_$6069_storage_ptr",
                      "typeString": "struct RateLimiter.Config"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12156,
                  "mutability": "mutable",
                  "name": "router",
                  "nameLocation": "908:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 12168,
                  "src": "900:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12155,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "900:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "819:99:37"
            },
            "returnParameters": {
              "id": 12162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "963:0:37"
            },
            "scope": 12312,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 12311,
            "nodeType": "FunctionDefinition",
            "src": "1233:1243:37",
            "nodes": [],
            "body": {
              "id": 12310,
              "nodeType": "Block",
              "src": "1344:1132:37",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 12227,
                    "nodeType": "Block",
                    "src": "1395:319:37",
                    "statements": [
                      {
                        "assignments": [
                          12196
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 12196,
                            "mutability": "mutable",
                            "name": "update",
                            "nameLocation": "1421:6:37",
                            "nodeType": "VariableDeclaration",
                            "scope": 12227,
                            "src": "1403:24:37",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RampUpdate_$12396_memory_ptr",
                              "typeString": "struct TokenPool.RampUpdate"
                            },
                            "typeName": {
                              "id": 12195,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 12194,
                                "name": "RampUpdate",
                                "nameLocations": [
                                  "1403:10:37"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 12396,
                                "src": "1403:10:37"
                              },
                              "referencedDeclaration": 12396,
                              "src": "1403:10:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RampUpdate_$12396_storage_ptr",
                                "typeString": "struct TokenPool.RampUpdate"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 12200,
                        "initialValue": {
                          "baseExpression": {
                            "id": 12197,
                            "name": "onRamps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12173,
                            "src": "1430:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_RampUpdate_$12396_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct TokenPool.RampUpdate memory[] memory"
                            }
                          },
                          "id": 12199,
                          "indexExpression": {
                            "id": 12198,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12184,
                            "src": "1438:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1430:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RampUpdate_$12396_memory_ptr",
                            "typeString": "struct TokenPool.RampUpdate memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1403:37:37"
                      },
                      {
                        "condition": {
                          "condition": {
                            "expression": {
                              "id": 12201,
                              "name": "update",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12196,
                              "src": "1552:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RampUpdate_$12396_memory_ptr",
                                "typeString": "struct TokenPool.RampUpdate memory"
                              }
                            },
                            "id": 12202,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1559:7:37",
                            "memberName": "allowed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12395,
                            "src": "1552:14:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 12210,
                                  "name": "update",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12196,
                                  "src": "1615:6:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RampUpdate_$12396_memory_ptr",
                                    "typeString": "struct TokenPool.RampUpdate memory"
                                  }
                                },
                                "id": 12211,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1622:4:37",
                                "memberName": "ramp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 12393,
                                "src": "1615:11:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 12208,
                                "name": "s_onRamps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12402,
                                "src": "1598:9:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AddressSet_$18737_storage",
                                  "typeString": "struct EnumerableSet.AddressSet storage ref"
                                }
                              },
                              "id": 12209,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1608:6:37",
                              "memberName": "remove",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18791,
                              "src": "1598:16:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$18737_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$18737_storage_ptr_$",
                                "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                              }
                            },
                            "id": 12212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1598:29:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 12213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "1552:75:37",
                          "trueExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 12205,
                                  "name": "update",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12196,
                                  "src": "1583:6:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RampUpdate_$12396_memory_ptr",
                                    "typeString": "struct TokenPool.RampUpdate memory"
                                  }
                                },
                                "id": 12206,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1590:4:37",
                                "memberName": "ramp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 12393,
                                "src": "1583:11:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 12203,
                                "name": "s_onRamps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12402,
                                "src": "1569:9:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AddressSet_$18737_storage",
                                  "typeString": "struct EnumerableSet.AddressSet storage ref"
                                }
                              },
                              "id": 12204,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1579:3:37",
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18764,
                              "src": "1569:13:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$18737_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$18737_storage_ptr_$",
                                "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                              }
                            },
                            "id": 12207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1569:26:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 12226,
                        "nodeType": "IfStatement",
                        "src": "1548:160:37",
                        "trueBody": {
                          "id": 12225,
                          "nodeType": "Block",
                          "src": "1629:79:37",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 12215,
                                        "name": "onRamps",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12173,
                                        "src": "1663:7:37",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_RampUpdate_$12396_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct TokenPool.RampUpdate memory[] memory"
                                        }
                                      },
                                      "id": 12217,
                                      "indexExpression": {
                                        "id": 12216,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12184,
                                        "src": "1671:1:37",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1663:10:37",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RampUpdate_$12396_memory_ptr",
                                        "typeString": "struct TokenPool.RampUpdate memory"
                                      }
                                    },
                                    "id": 12218,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1674:4:37",
                                    "memberName": "ramp",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 12393,
                                    "src": "1663:15:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 12219,
                                        "name": "onRamps",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12173,
                                        "src": "1680:7:37",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_RampUpdate_$12396_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct TokenPool.RampUpdate memory[] memory"
                                        }
                                      },
                                      "id": 12221,
                                      "indexExpression": {
                                        "id": 12220,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12184,
                                        "src": "1688:1:37",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1680:10:37",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RampUpdate_$12396_memory_ptr",
                                        "typeString": "struct TokenPool.RampUpdate memory"
                                      }
                                    },
                                    "id": 12222,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1691:7:37",
                                    "memberName": "allowed",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 12395,
                                    "src": "1680:18:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 12214,
                                  "name": "OnRampAllowanceSet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12385,
                                  "src": "1644:18:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                                    "typeString": "function (address,bool)"
                                  }
                                },
                                "id": 12223,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1644:55:37",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 12224,
                              "nodeType": "EmitStatement",
                              "src": "1639:60:37"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12187,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12184,
                      "src": "1370:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 12188,
                        "name": "onRamps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12173,
                        "src": "1374:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_RampUpdate_$12396_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct TokenPool.RampUpdate memory[] memory"
                        }
                      },
                      "id": 12189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1382:6:37",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1374:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1370:18:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12228,
                  "initializationExpression": {
                    "assignments": [
                      12184
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 12184,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1363:1:37",
                        "nodeType": "VariableDeclaration",
                        "scope": 12228,
                        "src": "1355:9:37",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 12183,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1355:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 12186,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 12185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1367:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1355:13:37"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 12192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1390:3:37",
                      "subExpression": {
                        "id": 12191,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12184,
                        "src": "1392:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12193,
                    "nodeType": "ExpressionStatement",
                    "src": "1390:3:37"
                  },
                  "nodeType": "ForStatement",
                  "src": "1350:364:37"
                },
                {
                  "body": {
                    "id": 12308,
                    "nodeType": "Block",
                    "src": "1766:706:37",
                    "statements": [
                      {
                        "assignments": [
                          12242
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 12242,
                            "mutability": "mutable",
                            "name": "update",
                            "nameLocation": "1792:6:37",
                            "nodeType": "VariableDeclaration",
                            "scope": 12308,
                            "src": "1774:24:37",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RampUpdate_$12396_memory_ptr",
                              "typeString": "struct TokenPool.RampUpdate"
                            },
                            "typeName": {
                              "id": 12241,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 12240,
                                "name": "RampUpdate",
                                "nameLocations": [
                                  "1774:10:37"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 12396,
                                "src": "1774:10:37"
                              },
                              "referencedDeclaration": 12396,
                              "src": "1774:10:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RampUpdate_$12396_storage_ptr",
                                "typeString": "struct TokenPool.RampUpdate"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 12246,
                        "initialValue": {
                          "baseExpression": {
                            "id": 12243,
                            "name": "offRamps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12177,
                            "src": "1801:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_RampUpdate_$12396_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct TokenPool.RampUpdate memory[] memory"
                            }
                          },
                          "id": 12245,
                          "indexExpression": {
                            "id": 12244,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12230,
                            "src": "1810:1:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1801:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RampUpdate_$12396_memory_ptr",
                            "typeString": "struct TokenPool.RampUpdate memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1774:38:37"
                      },
                      {
                        "condition": {
                          "id": 12249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1824:15:37",
                          "subExpression": {
                            "expression": {
                              "id": 12247,
                              "name": "update",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12242,
                              "src": "1825:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RampUpdate_$12396_memory_ptr",
                                "typeString": "struct TokenPool.RampUpdate memory"
                              }
                            },
                            "id": 12248,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1832:7:37",
                            "memberName": "allowed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12395,
                            "src": "1825:14:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 12270,
                        "nodeType": "IfStatement",
                        "src": "1820:179:37",
                        "trueBody": {
                          "id": 12269,
                          "nodeType": "Block",
                          "src": "1841:158:37",
                          "statements": [
                            {
                              "condition": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 12252,
                                      "name": "update",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12242,
                                      "src": "1873:6:37",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RampUpdate_$12396_memory_ptr",
                                        "typeString": "struct TokenPool.RampUpdate memory"
                                      }
                                    },
                                    "id": 12253,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1880:4:37",
                                    "memberName": "ramp",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 12393,
                                    "src": "1873:11:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 12250,
                                    "name": "s_offRamps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12405,
                                    "src": "1855:10:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AddressSet_$18737_storage",
                                      "typeString": "struct EnumerableSet.AddressSet storage ref"
                                    }
                                  },
                                  "id": 12251,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1866:6:37",
                                  "memberName": "remove",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 18791,
                                  "src": "1855:17:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$18737_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$18737_storage_ptr_$",
                                    "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                                  }
                                },
                                "id": 12254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1855:30:37",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 12267,
                              "nodeType": "IfStatement",
                              "src": "1851:122:37",
                              "trueBody": {
                                "id": 12266,
                                "nodeType": "Block",
                                "src": "1887:86:37",
                                "statements": [
                                  {
                                    "eventCall": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 12256,
                                              "name": "offRamps",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 12177,
                                              "src": "1924:8:37",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_RampUpdate_$12396_memory_ptr_$dyn_memory_ptr",
                                                "typeString": "struct TokenPool.RampUpdate memory[] memory"
                                              }
                                            },
                                            "id": 12258,
                                            "indexExpression": {
                                              "id": 12257,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 12230,
                                              "src": "1933:1:37",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "1924:11:37",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_RampUpdate_$12396_memory_ptr",
                                              "typeString": "struct TokenPool.RampUpdate memory"
                                            }
                                          },
                                          "id": 12259,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "1936:4:37",
                                          "memberName": "ramp",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 12393,
                                          "src": "1924:16:37",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 12260,
                                              "name": "offRamps",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 12177,
                                              "src": "1942:8:37",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_RampUpdate_$12396_memory_ptr_$dyn_memory_ptr",
                                                "typeString": "struct TokenPool.RampUpdate memory[] memory"
                                              }
                                            },
                                            "id": 12262,
                                            "indexExpression": {
                                              "id": 12261,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 12230,
                                              "src": "1951:1:37",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "1942:11:37",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_RampUpdate_$12396_memory_ptr",
                                              "typeString": "struct TokenPool.RampUpdate memory"
                                            }
                                          },
                                          "id": 12263,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "1954:7:37",
                                          "memberName": "allowed",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 12395,
                                          "src": "1942:19:37",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        ],
                                        "id": 12255,
                                        "name": "OffRampAllowanceSet",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12391,
                                        "src": "1904:19:37",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                                          "typeString": "function (address,bool)"
                                        }
                                      },
                                      "id": 12264,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1904:58:37",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 12265,
                                    "nodeType": "EmitStatement",
                                    "src": "1899:63:37"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 12268,
                              "nodeType": "Continue",
                              "src": "1982:8:37"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          12272,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 12272,
                            "mutability": "mutable",
                            "name": "exists",
                            "nameLocation": "2198:6:37",
                            "nodeType": "VariableDeclaration",
                            "scope": 12308,
                            "src": "2193:11:37",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 12271,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2193:4:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 12280,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 12277,
                                "name": "update",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12242,
                                "src": "2237:6:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RampUpdate_$12396_memory_ptr",
                                  "typeString": "struct TokenPool.RampUpdate memory"
                                }
                              },
                              "id": 12278,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2244:4:37",
                              "memberName": "ramp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12393,
                              "src": "2237:11:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 12274,
                                  "name": "s_router",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12148,
                                  "src": "2217:8:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 12273,
                                "name": "Router",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4192,
                                "src": "2210:6:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Router_$4192_$",
                                  "typeString": "type(contract Router)"
                                }
                              },
                              "id": 12275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2210:16:37",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Router_$4192",
                                "typeString": "contract Router"
                              }
                            },
                            "id": 12276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2227:9:37",
                            "memberName": "isOffRamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3999,
                            "src": "2210:26:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$_t_uint64_$",
                              "typeString": "function (address) view external returns (bool,uint64)"
                            }
                          },
                          "id": 12279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2210:39:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_uint64_$",
                            "typeString": "tuple(bool,uint64)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2192:57:37"
                      },
                      {
                        "condition": {
                          "id": 12281,
                          "name": "exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12272,
                          "src": "2261:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 12302,
                        "nodeType": "IfStatement",
                        "src": "2257:167:37",
                        "trueBody": {
                          "id": 12301,
                          "nodeType": "Block",
                          "src": "2269:155:37",
                          "statements": [
                            {
                              "condition": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 12284,
                                      "name": "update",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12242,
                                      "src": "2298:6:37",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RampUpdate_$12396_memory_ptr",
                                        "typeString": "struct TokenPool.RampUpdate memory"
                                      }
                                    },
                                    "id": 12285,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2305:4:37",
                                    "memberName": "ramp",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 12393,
                                    "src": "2298:11:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 12282,
                                    "name": "s_offRamps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12405,
                                    "src": "2283:10:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AddressSet_$18737_storage",
                                      "typeString": "struct EnumerableSet.AddressSet storage ref"
                                    }
                                  },
                                  "id": 12283,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2294:3:37",
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 18764,
                                  "src": "2283:14:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$18737_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$18737_storage_ptr_$",
                                    "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                                  }
                                },
                                "id": 12286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2283:27:37",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 12299,
                              "nodeType": "IfStatement",
                              "src": "2279:119:37",
                              "trueBody": {
                                "id": 12298,
                                "nodeType": "Block",
                                "src": "2312:86:37",
                                "statements": [
                                  {
                                    "eventCall": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 12288,
                                              "name": "offRamps",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 12177,
                                              "src": "2349:8:37",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_RampUpdate_$12396_memory_ptr_$dyn_memory_ptr",
                                                "typeString": "struct TokenPool.RampUpdate memory[] memory"
                                              }
                                            },
                                            "id": 12290,
                                            "indexExpression": {
                                              "id": 12289,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 12230,
                                              "src": "2358:1:37",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "2349:11:37",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_RampUpdate_$12396_memory_ptr",
                                              "typeString": "struct TokenPool.RampUpdate memory"
                                            }
                                          },
                                          "id": 12291,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "2361:4:37",
                                          "memberName": "ramp",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 12393,
                                          "src": "2349:16:37",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 12292,
                                              "name": "offRamps",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 12177,
                                              "src": "2367:8:37",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_RampUpdate_$12396_memory_ptr_$dyn_memory_ptr",
                                                "typeString": "struct TokenPool.RampUpdate memory[] memory"
                                              }
                                            },
                                            "id": 12294,
                                            "indexExpression": {
                                              "id": 12293,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 12230,
                                              "src": "2376:1:37",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "2367:11:37",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_RampUpdate_$12396_memory_ptr",
                                              "typeString": "struct TokenPool.RampUpdate memory"
                                            }
                                          },
                                          "id": 12295,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "2379:7:37",
                                          "memberName": "allowed",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 12395,
                                          "src": "2367:19:37",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        ],
                                        "id": 12287,
                                        "name": "OffRampAllowanceSet",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12391,
                                        "src": "2329:19:37",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                                          "typeString": "function (address,bool)"
                                        }
                                      },
                                      "id": 12296,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2329:58:37",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 12297,
                                    "nodeType": "EmitStatement",
                                    "src": "2324:63:37"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 12300,
                              "nodeType": "Continue",
                              "src": "2407:8:37"
                            }
                          ]
                        }
                      },
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 12304,
                                "name": "update",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12242,
                                "src": "2453:6:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RampUpdate_$12396_memory_ptr",
                                  "typeString": "struct TokenPool.RampUpdate memory"
                                }
                              },
                              "id": 12305,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2460:4:37",
                              "memberName": "ramp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12393,
                              "src": "2453:11:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 12303,
                            "name": "InvalidOffRamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12145,
                            "src": "2438:14:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 12306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2438:27:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12307,
                        "nodeType": "RevertStatement",
                        "src": "2431:34:37"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12233,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12230,
                      "src": "1740:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 12234,
                        "name": "offRamps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12177,
                        "src": "1744:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_RampUpdate_$12396_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct TokenPool.RampUpdate memory[] memory"
                        }
                      },
                      "id": 12235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1753:6:37",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1744:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1740:19:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12309,
                  "initializationExpression": {
                    "assignments": [
                      12230
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 12230,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1733:1:37",
                        "nodeType": "VariableDeclaration",
                        "scope": 12309,
                        "src": "1725:9:37",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 12229,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1725:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 12232,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 12231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1737:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1725:13:37"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 12238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1761:3:37",
                      "subExpression": {
                        "id": 12237,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12230,
                        "src": "1763:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12239,
                    "nodeType": "ExpressionStatement",
                    "src": "1761:3:37"
                  },
                  "nodeType": "ForStatement",
                  "src": "1720:752:37"
                }
              ]
            },
            "baseFunctions": [
              12624
            ],
            "documentation": {
              "id": 12169,
              "nodeType": "StructuredDocumentation",
              "src": "995:235:37",
              "text": "@notice Sets permissions for all on and offRamps.\n @dev Only callable by the owner\n @param onRamps A list of onRamps and their new permission status\n @param offRamps A list of offRamps and their new permission status"
            },
            "functionSelector": "af519112",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12181,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12180,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1334:9:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13586,
                  "src": "1334:9:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "1334:9:37"
              }
            ],
            "name": "applyRampUpdates",
            "nameLocation": "1242:16:37",
            "overrides": {
              "id": 12179,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1325:8:37"
            },
            "parameters": {
              "id": 12178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12173,
                  "mutability": "mutable",
                  "name": "onRamps",
                  "nameLocation": "1279:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 12311,
                  "src": "1259:27:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_RampUpdate_$12396_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct TokenPool.RampUpdate[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12171,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 12170,
                        "name": "RampUpdate",
                        "nameLocations": [
                          "1259:10:37"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 12396,
                        "src": "1259:10:37"
                      },
                      "referencedDeclaration": 12396,
                      "src": "1259:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RampUpdate_$12396_storage_ptr",
                        "typeString": "struct TokenPool.RampUpdate"
                      }
                    },
                    "id": 12172,
                    "nodeType": "ArrayTypeName",
                    "src": "1259:12:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_RampUpdate_$12396_storage_$dyn_storage_ptr",
                      "typeString": "struct TokenPool.RampUpdate[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12177,
                  "mutability": "mutable",
                  "name": "offRamps",
                  "nameLocation": "1308:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 12311,
                  "src": "1288:28:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_RampUpdate_$12396_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct TokenPool.RampUpdate[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12175,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 12174,
                        "name": "RampUpdate",
                        "nameLocations": [
                          "1288:10:37"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 12396,
                        "src": "1288:10:37"
                      },
                      "referencedDeclaration": 12396,
                      "src": "1288:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RampUpdate_$12396_storage_ptr",
                        "typeString": "struct TokenPool.RampUpdate"
                      }
                    },
                    "id": 12176,
                    "nodeType": "ArrayTypeName",
                    "src": "1288:12:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_RampUpdate_$12396_storage_$dyn_storage_ptr",
                      "typeString": "struct TokenPool.RampUpdate[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1258:59:37"
            },
            "returnParameters": {
              "id": 12182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1344:0:37"
            },
            "scope": 12312,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12136,
              "name": "BurnMintTokenPool",
              "nameLocations": [
                "587:17:37"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11910,
              "src": "587:17:37"
            },
            "id": 12137,
            "nodeType": "InheritanceSpecifier",
            "src": "587:17:37"
          }
        ],
        "canonicalName": "ThirdPartyBurnMintTokenPool",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 12135,
          "nodeType": "StructuredDocumentation",
          "src": "396:91:37",
          "text": "@notice This pool mints and burns a 3rd-party token. This pool is not owned by the DON"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          12312,
          11910,
          12714,
          16318,
          14456,
          15859,
          2639,
          13425,
          13587,
          13809,
          5611
        ],
        "name": "ThirdPartyBurnMintTokenPool",
        "nameLocation": "556:27:37",
        "scope": 12313,
        "usedErrors": [
          6030,
          6036,
          6040,
          12145,
          12349,
          12351
        ]
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 37
}