{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "internalType": "struct RateLimiter.Config",
          "name": "rateLimiterConfig",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BucketOverfilled",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "capacity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "requested",
          "type": "uint256"
        }
      ],
      "name": "ConsumingMoreThanMaxCapacity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientLiquidity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NullAddressNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PermissionsError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "waitInSeconds",
          "type": "uint256"
        }
      ],
      "name": "RateLimitReached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WithdrawalTooHigh",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LiquidityAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LiquidityRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Locked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "onRamp",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "OffRampAllowanceSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "onRamp",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "OnRampAllowanceSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Released",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "ramp",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "allowed",
              "type": "bool"
            }
          ],
          "internalType": "struct TokenPool.RampUpdate[]",
          "name": "onRamps",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "ramp",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "allowed",
              "type": "bool"
            }
          ],
          "internalType": "struct TokenPool.RampUpdate[]",
          "name": "offRamps",
          "type": "tuple[]"
        }
      ],
      "name": "applyRampUpdates",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRateLimiterState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "tokens",
              "type": "uint128"
            },
            {
              "internalType": "uint32",
              "name": "lastUpdated",
              "type": "uint32"
            },
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "internalType": "struct RateLimiter.TokenBucket",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "provider",
          "type": "address"
        }
      ],
      "name": "getProvidedLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "offRamp",
          "type": "address"
        }
      ],
      "name": "isOffRamp",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "onRamp",
          "type": "address"
        }
      ],
      "name": "isOnRamp",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "lockOrBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "releaseOrMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isEnabled",
              "type": "bool"
            },
            {
              "internalType": "uint128",
              "name": "capacity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "rate",
              "type": "uint128"
            }
          ],
          "internalType": "struct RateLimiter.Config",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "setRateLimiterConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b50604051620024a6380380620024a683398101604081905262000034916200025f565b818133806000816200008d5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0384811691909117909155811615620000c057620000c08162000197565b50506001805460ff60a01b19169055506001600160a01b038216620000f857604051634655efd160e11b815260040160405180910390fd5b6040805160a081018252602083810180516001600160801b039081168085524263ffffffff169385018490528651151585870181905292518216606086018190529690950151166080938401819052600680546001600160a01b031916909517600160801b9384021760ff60a01b1916600160a01b909202919091179093559091029091176007556001600160a01b03919091169052506200031d9050565b336001600160a01b03821603620001f15760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640162000084565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b80516001600160801b03811681146200025a57600080fd5b919050565b60008082840360808112156200027457600080fd5b83516001600160a01b03811681146200028c57600080fd5b92506060601f1982011215620002a157600080fd5b50604051606081016001600160401b0381118282101715620002d357634e487b7160e01b600052604160045260246000fd5b60405260208401518015158114620002ea57600080fd5b8152620002fa6040850162000242565b60208201526200030d6060850162000242565b6040820152809150509250929050565b60805161215162000355600039600081816101780152818161042a015281816106e40152818161085d015261092f01526121516000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c806379ba5097116100b25780639687544511610081578063af51911211610066578063af5191121461031f578063c92b283214610332578063f2fde38b1461034557600080fd5b806396875445146102f95780639c8f9f231461030c57600080fd5b806379ba5097146102b85780638456cb59146102c05780638627fad6146102c85780638da5cb5b146102db57600080fd5b806351c6590a1161010957806356dd1e81116100ee57806356dd1e811461023e5780635c975abb146102825780636f32b872146102a557600080fd5b806351c6590a146101c7578063546719cd146101da57600080fd5b806301ffc9a71461013b5780631d7a74a01461016357806321df0da7146101765780633f4ba83a146101bd575b600080fd5b61014e610149366004611a2a565b610358565b60405190151581526020015b60405180910390f35b61014e610171366004611a95565b6103f1565b7f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161015a565b6101c56103fe565b005b6101c56101d5366004611ab0565b610410565b6101e26104a6565b60405161015a919081516fffffffffffffffffffffffffffffffff908116825260208084015163ffffffff1690830152604080840151151590830152606080840151821690830152608092830151169181019190915260a00190565b61027461024c366004611a95565b73ffffffffffffffffffffffffffffffffffffffff1660009081526008602052604090205490565b60405190815260200161015a565b60015474010000000000000000000000000000000000000000900460ff1661014e565b61014e6102b3366004611a95565b61055b565b6101c5610568565b6101c561066a565b6101c56102d6366004611c16565b61067a565b60005473ffffffffffffffffffffffffffffffffffffffff16610198565b6101c5610307366004611cee565b61075f565b6101c561031a366004611ab0565b6107e4565b6101c561032d366004611e4e565b6109aa565b6101c5610340366004611ed2565b610bba565b6101c5610353366004611a95565b610bd0565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f317fa3340000000000000000000000000000000000000000000000000000000014806103eb57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b60006103eb600483610be1565b610406610c13565b61040e610c94565b565b61045273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016333084610d11565b3360009081526008602052604081208054839290610471908490611f6f565b9091555050604051819033907fc17cea59c2955cb181b03393209566960365771dbba9dc3d510180e7cb31208890600090a350565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526040805160a0810182526006546fffffffffffffffffffffffffffffffff808216835270010000000000000000000000000000000080830463ffffffff1660208501527401000000000000000000000000000000000000000090920460ff16151593830193909352600754808416606084015204909116608082015261055690610df3565b905090565b60006103eb600283610be1565b60015473ffffffffffffffffffffffffffffffffffffffff1633146105ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e65720000000000000000000060448201526064015b60405180910390fd5b60008054337fffffffffffffffffffffffff00000000000000000000000000000000000000008083168217845560018054909116905560405173ffffffffffffffffffffffffffffffffffffffff90921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b610672610c13565b61040e610ea5565b610682610f14565b61068b336103f1565b6106c1576040517f5307f5ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106ca83610f99565b61070b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168585610fa4565b60405183815273ffffffffffffffffffffffffffffffffffffffff85169033907f2d87480f50083e2b2759522a8fdda59802650a8055e609a7772cf70c07748f529060200160405180910390a35050505050565b610767610f14565b6107703361055b565b6107a6576040517f5307f5ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405184815233907f9f1ec8c880f76798e7b793325d625e9b60e4082a553c98f42b6cda368dd600089060200160405180910390a250505050505050565b3360009081526008602052604090205481111561082d576040517f6982012000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa1580156108b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108dd9190611f82565b1015610915576040517fbb55fd2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61095673ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163383610fa4565b3360009081526008602052604081208054839290610975908490611f9b565b9091555050604051819033907fc2c3f06e49b9f15e7b4af9055e183b0d73362e033ad82a07dec9bf984017171990600090a350565b6109b2610c13565b60005b8251811015610ab35760008382815181106109d2576109d2611fae565b6020026020010151905080602001516109f85780516109f390600290610ffa565b610a06565b8051610a069060029061101c565b15610aa2577fbceff8f229c6dfcbf8bdcfb18726b84b0fd249b4803deb3948ff34d904013662848381518110610a3e57610a3e611fae565b602002602001015160000151858481518110610a5c57610a5c611fae565b602002602001015160200151604051610a9992919073ffffffffffffffffffffffffffffffffffffffff9290921682521515602082015260400190565b60405180910390a15b50610aac81611fdd565b90506109b5565b5060005b8151811015610bb5576000828281518110610ad457610ad4611fae565b602002602001015190508060200151610afa578051610af590600490610ffa565b610b08565b8051610b089060049061101c565b15610ba4577fd8c3333ded377884ced3869cd0bcb9be54ea664076df1f5d39c4689120313648838381518110610b4057610b40611fae565b602002602001015160000151848481518110610b5e57610b5e611fae565b602002602001015160200151604051610b9b92919073ffffffffffffffffffffffffffffffffffffffff9290921682521515602082015260400190565b60405180910390a15b50610bae81611fdd565b9050610ab7565b505050565b610bc2610c13565b610bcd60068261103e565b50565b610bd8610c13565b610bcd81611223565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260018301602052604081205415155b9392505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461040e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000060448201526064016105e5565b610c9c611318565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610ded9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261139c565b50505050565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152610e8182606001516fffffffffffffffffffffffffffffffff1683600001516fffffffffffffffffffffffffffffffff16846020015163ffffffff1642610e659190611f9b565b85608001516fffffffffffffffffffffffffffffffff166114a8565b6fffffffffffffffffffffffffffffffff1682525063ffffffff4216602082015290565b610ead610f14565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610ce73390565b60015474010000000000000000000000000000000000000000900460ff161561040e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064016105e5565b610bcd6006826114d2565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610bb59084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401610d6b565b6000610c0c8373ffffffffffffffffffffffffffffffffffffffff8416611761565b6000610c0c8373ffffffffffffffffffffffffffffffffffffffff8416611854565b815460009061106790700100000000000000000000000000000000900463ffffffff1642611f9b565b9050801561110957600183015483546110af916fffffffffffffffffffffffffffffffff808216928116918591700100000000000000000000000000000000909104166114a8565b83546fffffffffffffffffffffffffffffffff919091167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116177001000000000000000000000000000000004263ffffffff16021783555b6020820151835461112f916fffffffffffffffffffffffffffffffff90811691166118a3565b83548351151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffff000000000000000000000000000000009091166fffffffffffffffffffffffffffffffff92831617178455602083015160408085015183167001000000000000000000000000000000000291909216176001850155517f9ea3374b67bf275e6bb9c8ae68f9cae023e1c528b4b27e092f0bb209d3531c19906112169084908151151581526020808301516fffffffffffffffffffffffffffffffff90811691830191909152604092830151169181019190915260600190565b60405180910390a1505050565b3373ffffffffffffffffffffffffffffffffffffffff8216036112a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016105e5565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60015474010000000000000000000000000000000000000000900460ff1661040e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016105e5565b60006113fe826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166118b99092919063ffffffff16565b805190915015610bb5578080602001905181019061141c9190612015565b610bb5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016105e5565b60006114c7856114b88486612032565b6114c29087611f6f565b6118a3565b90505b949350505050565b815474010000000000000000000000000000000000000000900460ff1615806114f9575080155b15611502575050565b815460018301546fffffffffffffffffffffffffffffffff8083169291169060009061154890700100000000000000000000000000000000900463ffffffff1642611f9b565b90508015611608578183111561158a576040517f9725942a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018501546115c49083908590849070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff166114a8565b85547fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff167001000000000000000000000000000000004263ffffffff160217865592505b8382101561164c576040517f48369c4300000000000000000000000000000000000000000000000000000000815260048101839052602481018590526044016105e5565b838310156116e05760018581015470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1690819061168d9082611f9b565b6116978688611f9b565b6116a19190611f6f565b6116ab9190612049565b6040517fdc96cefa0000000000000000000000000000000000000000000000000000000081526004016105e591815260200190565b6116ea8484611f9b565b85547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff82161786556040518581529093507f1871cdf8010e63f2eb8384381a68dfa7416dc571a5517e66e88b2d2d0c0a690a9060200160405180910390a15050505050565b6000818152600183016020526040812054801561184a576000611785600183611f9b565b855490915060009061179990600190611f9b565b90508181146117fe5760008660000182815481106117b9576117b9611fae565b90600052602060002001549050808760000184815481106117dc576117dc611fae565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061180f5761180f612084565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506103eb565b60009150506103eb565b600081815260018301602052604081205461189b575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556103eb565b5060006103eb565b60008183106118b25781610c0c565b5090919050565b60606114ca8484600085856000808673ffffffffffffffffffffffffffffffffffffffff1685876040516118ed91906120d7565b60006040518083038185875af1925050503d806000811461192a576040519150601f19603f3d011682016040523d82523d6000602084013e61192f565b606091505b50915091506119408783838761194b565b979650505050505050565b606083156119e15782516000036119da5773ffffffffffffffffffffffffffffffffffffffff85163b6119da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105e5565b50816114ca565b6114ca83838151156119f65781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e591906120f3565b600060208284031215611a3c57600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610c0c57600080fd5b803573ffffffffffffffffffffffffffffffffffffffff81168114611a9057600080fd5b919050565b600060208284031215611aa757600080fd5b610c0c82611a6c565b600060208284031215611ac257600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611b1b57611b1b611ac9565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611b6857611b68611ac9565b604052919050565b600082601f830112611b8157600080fd5b813567ffffffffffffffff811115611b9b57611b9b611ac9565b611bcc60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611b21565b818152846020838601011115611be157600080fd5b816020850160208301376000918101602001919091529392505050565b803567ffffffffffffffff81168114611a9057600080fd5b600080600080600060a08688031215611c2e57600080fd5b853567ffffffffffffffff80821115611c4657600080fd5b611c5289838a01611b70565b9650611c6060208901611a6c565b955060408801359450611c7560608901611bfe565b93506080880135915080821115611c8b57600080fd5b50611c9888828901611b70565b9150509295509295909350565b60008083601f840112611cb757600080fd5b50813567ffffffffffffffff811115611ccf57600080fd5b602083019150836020828501011115611ce757600080fd5b9250929050565b600080600080600080600060a0888a031215611d0957600080fd5b611d1288611a6c565b9650602088013567ffffffffffffffff80821115611d2f57600080fd5b611d3b8b838c01611ca5565b909850965060408a01359550869150611d5660608b01611bfe565b945060808a0135915080821115611d6c57600080fd5b50611d798a828b01611ca5565b989b979a50959850939692959293505050565b8015158114610bcd57600080fd5b600082601f830112611dab57600080fd5b8135602067ffffffffffffffff821115611dc757611dc7611ac9565b611dd5818360051b01611b21565b82815260069290921b84018101918181019086841115611df457600080fd5b8286015b84811015611e435760408189031215611e115760008081fd5b611e19611af8565b611e2282611a6c565b815284820135611e3181611d8c565b81860152835291830191604001611df8565b509695505050505050565b60008060408385031215611e6157600080fd5b823567ffffffffffffffff80821115611e7957600080fd5b611e8586838701611d9a565b93506020850135915080821115611e9b57600080fd5b50611ea885828601611d9a565b9150509250929050565b80356fffffffffffffffffffffffffffffffff81168114611a9057600080fd5b600060608284031215611ee457600080fd5b6040516060810181811067ffffffffffffffff82111715611f0757611f07611ac9565b6040528235611f1581611d8c565b8152611f2360208401611eb2565b6020820152611f3460408401611eb2565b60408201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156103eb576103eb611f40565b600060208284031215611f9457600080fd5b5051919050565b818103818111156103eb576103eb611f40565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361200e5761200e611f40565b5060010190565b60006020828403121561202757600080fd5b8151610c0c81611d8c565b80820281158282048414176103eb576103eb611f40565b60008261207f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60005b838110156120ce5781810151838201526020016120b6565b50506000910152565b600082516120e98184602087016120b3565b9190910192915050565b60208152600082518060208401526121128160408501602087016120b3565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea164736f6c6343000813000a",
    "sourceMap": "702:2612:36:-:0;;;1063:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1144:5;1151:17;316:10:3;;345:1:44;316:10:3;544:59:45;;;;-1:-1:-1;;;544:59:45;;1476:2:69;544:59:45;;;1458:21:69;1515:2;1495:18;;;1488:30;1554:26;1534:18;;;1527:54;1598:18;;544:59:45;;;;;;;;;610:7;:18;;-1:-1:-1;;;;;;610:18:45;-1:-1:-1;;;;;610:18:45;;;;;;;;;;638:26;;;634:79;;674:32;693:12;674:18;:32::i;:::-;-1:-1:-1;;996:7:52;:15;;-1:-1:-1;;;;996:15:52;;;-1:-1:-1;;;;;;1929:28:38;;1925:64;;1966:23;;-1:-1:-1;;;1966:23:38;;;;;;;;;;;1925:64;2012:243;;;;;;;;2132:26;;;;;;-1:-1:-1;;;;;2012:243:38;;;;;;2186:15;2012:243;;;;;;;;2221:27;;2012:243;;;;;;;;2090:26;;2012:243;;;;;;;;2050:22;;;;;2012:243;;;;;;;;1996:13;:259;;-1:-1:-1;;;;;;1996:259:38;;;;-1:-1:-1;;;1996:259:38;;;;-1:-1:-1;;;;1996:259:38;-1:-1:-1;;;1996:259:38;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2262:15:38;;;;;;-1:-1:-1;702:2612:36;;-1:-1:-1;702:2612:36;1497:188:45;1565:10;-1:-1:-1;;;;;1559:16:45;;;1551:52;;;;-1:-1:-1;;;1551:52:45;;1829:2:69;1551:52:45;;;1811:21:69;1868:2;1848:18;;;1841:30;1907:25;1887:18;;;1880:53;1950:18;;1551:52:45;1627:347:69;1551:52:45;1610:14;:19;;-1:-1:-1;;;;;;1610:19:45;-1:-1:-1;;;;;1610:19:45;;;;;;;;;-1:-1:-1;1668:7:45;;1641:39;;1610:19;;1668:7;;1641:39;;-1:-1:-1;1641:39:45;1497:188;:::o;14:177:69:-;93:13;;-1:-1:-1;;;;;135:31:69;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:1073::-;315:6;323;367:9;358:7;354:23;397:3;393:2;389:12;386:32;;;414:1;411;404:12;386:32;440:16;;-1:-1:-1;;;;;485:31:69;;475:42;;465:70;;531:1;528;521:12;465:70;554:5;-1:-1:-1;593:4:69;-1:-1:-1;;575:16:69;;571:27;568:47;;;611:1;608;601:12;568:47;-1:-1:-1;644:2:69;638:9;686:4;674:17;;-1:-1:-1;;;;;706:34:69;;742:22;;;703:62;700:185;;;807:10;802:3;798:20;795:1;788:31;842:4;839:1;832:15;870:4;867:1;860:15;700:185;901:2;894:22;961:2;946:18;;940:25;1003:15;;996:23;984:36;;974:64;;1034:1;1031;1024:12;974:64;1047:23;;1103:49;1148:2;1133:18;;1103:49;:::i;:::-;1098:2;1090:6;1086:15;1079:74;1186:51;1231:4;1220:9;1216:20;1186:51;:::i;:::-;1181:2;1173:6;1169:15;1162:76;1257:6;1247:16;;;196:1073;;;;;:::o;1627:347::-;702:2612:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101365760003560e01c806379ba5097116100b25780639687544511610081578063af51911211610066578063af5191121461031f578063c92b283214610332578063f2fde38b1461034557600080fd5b806396875445146102f95780639c8f9f231461030c57600080fd5b806379ba5097146102b85780638456cb59146102c05780638627fad6146102c85780638da5cb5b146102db57600080fd5b806351c6590a1161010957806356dd1e81116100ee57806356dd1e811461023e5780635c975abb146102825780636f32b872146102a557600080fd5b806351c6590a146101c7578063546719cd146101da57600080fd5b806301ffc9a71461013b5780631d7a74a01461016357806321df0da7146101765780633f4ba83a146101bd575b600080fd5b61014e610149366004611a2a565b610358565b60405190151581526020015b60405180910390f35b61014e610171366004611a95565b6103f1565b7f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161015a565b6101c56103fe565b005b6101c56101d5366004611ab0565b610410565b6101e26104a6565b60405161015a919081516fffffffffffffffffffffffffffffffff908116825260208084015163ffffffff1690830152604080840151151590830152606080840151821690830152608092830151169181019190915260a00190565b61027461024c366004611a95565b73ffffffffffffffffffffffffffffffffffffffff1660009081526008602052604090205490565b60405190815260200161015a565b60015474010000000000000000000000000000000000000000900460ff1661014e565b61014e6102b3366004611a95565b61055b565b6101c5610568565b6101c561066a565b6101c56102d6366004611c16565b61067a565b60005473ffffffffffffffffffffffffffffffffffffffff16610198565b6101c5610307366004611cee565b61075f565b6101c561031a366004611ab0565b6107e4565b6101c561032d366004611e4e565b6109aa565b6101c5610340366004611ed2565b610bba565b6101c5610353366004611a95565b610bd0565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f317fa3340000000000000000000000000000000000000000000000000000000014806103eb57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b60006103eb600483610be1565b610406610c13565b61040e610c94565b565b61045273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016333084610d11565b3360009081526008602052604081208054839290610471908490611f6f565b9091555050604051819033907fc17cea59c2955cb181b03393209566960365771dbba9dc3d510180e7cb31208890600090a350565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526040805160a0810182526006546fffffffffffffffffffffffffffffffff808216835270010000000000000000000000000000000080830463ffffffff1660208501527401000000000000000000000000000000000000000090920460ff16151593830193909352600754808416606084015204909116608082015261055690610df3565b905090565b60006103eb600283610be1565b60015473ffffffffffffffffffffffffffffffffffffffff1633146105ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e65720000000000000000000060448201526064015b60405180910390fd5b60008054337fffffffffffffffffffffffff00000000000000000000000000000000000000008083168217845560018054909116905560405173ffffffffffffffffffffffffffffffffffffffff90921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b610672610c13565b61040e610ea5565b610682610f14565b61068b336103f1565b6106c1576040517f5307f5ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106ca83610f99565b61070b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168585610fa4565b60405183815273ffffffffffffffffffffffffffffffffffffffff85169033907f2d87480f50083e2b2759522a8fdda59802650a8055e609a7772cf70c07748f529060200160405180910390a35050505050565b610767610f14565b6107703361055b565b6107a6576040517f5307f5ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405184815233907f9f1ec8c880f76798e7b793325d625e9b60e4082a553c98f42b6cda368dd600089060200160405180910390a250505050505050565b3360009081526008602052604090205481111561082d576040517f6982012000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa1580156108b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108dd9190611f82565b1015610915576040517fbb55fd2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61095673ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163383610fa4565b3360009081526008602052604081208054839290610975908490611f9b565b9091555050604051819033907fc2c3f06e49b9f15e7b4af9055e183b0d73362e033ad82a07dec9bf984017171990600090a350565b6109b2610c13565b60005b8251811015610ab35760008382815181106109d2576109d2611fae565b6020026020010151905080602001516109f85780516109f390600290610ffa565b610a06565b8051610a069060029061101c565b15610aa2577fbceff8f229c6dfcbf8bdcfb18726b84b0fd249b4803deb3948ff34d904013662848381518110610a3e57610a3e611fae565b602002602001015160000151858481518110610a5c57610a5c611fae565b602002602001015160200151604051610a9992919073ffffffffffffffffffffffffffffffffffffffff9290921682521515602082015260400190565b60405180910390a15b50610aac81611fdd565b90506109b5565b5060005b8151811015610bb5576000828281518110610ad457610ad4611fae565b602002602001015190508060200151610afa578051610af590600490610ffa565b610b08565b8051610b089060049061101c565b15610ba4577fd8c3333ded377884ced3869cd0bcb9be54ea664076df1f5d39c4689120313648838381518110610b4057610b40611fae565b602002602001015160000151848481518110610b5e57610b5e611fae565b602002602001015160200151604051610b9b92919073ffffffffffffffffffffffffffffffffffffffff9290921682521515602082015260400190565b60405180910390a15b50610bae81611fdd565b9050610ab7565b505050565b610bc2610c13565b610bcd60068261103e565b50565b610bd8610c13565b610bcd81611223565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260018301602052604081205415155b9392505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461040e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000060448201526064016105e5565b610c9c611318565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610ded9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261139c565b50505050565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152610e8182606001516fffffffffffffffffffffffffffffffff1683600001516fffffffffffffffffffffffffffffffff16846020015163ffffffff1642610e659190611f9b565b85608001516fffffffffffffffffffffffffffffffff166114a8565b6fffffffffffffffffffffffffffffffff1682525063ffffffff4216602082015290565b610ead610f14565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610ce73390565b60015474010000000000000000000000000000000000000000900460ff161561040e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064016105e5565b610bcd6006826114d2565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610bb59084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401610d6b565b6000610c0c8373ffffffffffffffffffffffffffffffffffffffff8416611761565b6000610c0c8373ffffffffffffffffffffffffffffffffffffffff8416611854565b815460009061106790700100000000000000000000000000000000900463ffffffff1642611f9b565b9050801561110957600183015483546110af916fffffffffffffffffffffffffffffffff808216928116918591700100000000000000000000000000000000909104166114a8565b83546fffffffffffffffffffffffffffffffff919091167fffffffffffffffffffffffff0000000000000000000000000000000000000000909116177001000000000000000000000000000000004263ffffffff16021783555b6020820151835461112f916fffffffffffffffffffffffffffffffff90811691166118a3565b83548351151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffff000000000000000000000000000000009091166fffffffffffffffffffffffffffffffff92831617178455602083015160408085015183167001000000000000000000000000000000000291909216176001850155517f9ea3374b67bf275e6bb9c8ae68f9cae023e1c528b4b27e092f0bb209d3531c19906112169084908151151581526020808301516fffffffffffffffffffffffffffffffff90811691830191909152604092830151169181019190915260600190565b60405180910390a1505050565b3373ffffffffffffffffffffffffffffffffffffffff8216036112a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016105e5565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60015474010000000000000000000000000000000000000000900460ff1661040e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016105e5565b60006113fe826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166118b99092919063ffffffff16565b805190915015610bb5578080602001905181019061141c9190612015565b610bb5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016105e5565b60006114c7856114b88486612032565b6114c29087611f6f565b6118a3565b90505b949350505050565b815474010000000000000000000000000000000000000000900460ff1615806114f9575080155b15611502575050565b815460018301546fffffffffffffffffffffffffffffffff8083169291169060009061154890700100000000000000000000000000000000900463ffffffff1642611f9b565b90508015611608578183111561158a576040517f9725942a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018501546115c49083908590849070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff166114a8565b85547fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff167001000000000000000000000000000000004263ffffffff160217865592505b8382101561164c576040517f48369c4300000000000000000000000000000000000000000000000000000000815260048101839052602481018590526044016105e5565b838310156116e05760018581015470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1690819061168d9082611f9b565b6116978688611f9b565b6116a19190611f6f565b6116ab9190612049565b6040517fdc96cefa0000000000000000000000000000000000000000000000000000000081526004016105e591815260200190565b6116ea8484611f9b565b85547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff82161786556040518581529093507f1871cdf8010e63f2eb8384381a68dfa7416dc571a5517e66e88b2d2d0c0a690a9060200160405180910390a15050505050565b6000818152600183016020526040812054801561184a576000611785600183611f9b565b855490915060009061179990600190611f9b565b90508181146117fe5760008660000182815481106117b9576117b9611fae565b90600052602060002001549050808760000184815481106117dc576117dc611fae565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061180f5761180f612084565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506103eb565b60009150506103eb565b600081815260018301602052604081205461189b575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556103eb565b5060006103eb565b60008183106118b25781610c0c565b5090919050565b60606114ca8484600085856000808673ffffffffffffffffffffffffffffffffffffffff1685876040516118ed91906120d7565b60006040518083038185875af1925050503d806000811461192a576040519150601f19603f3d011682016040523d82523d6000602084013e61192f565b606091505b50915091506119408783838761194b565b979650505050505050565b606083156119e15782516000036119da5773ffffffffffffffffffffffffffffffffffffffff85163b6119da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105e5565b50816114ca565b6114ca83838151156119f65781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e591906120f3565b600060208284031215611a3c57600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610c0c57600080fd5b803573ffffffffffffffffffffffffffffffffffffffff81168114611a9057600080fd5b919050565b600060208284031215611aa757600080fd5b610c0c82611a6c565b600060208284031215611ac257600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611b1b57611b1b611ac9565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611b6857611b68611ac9565b604052919050565b600082601f830112611b8157600080fd5b813567ffffffffffffffff811115611b9b57611b9b611ac9565b611bcc60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611b21565b818152846020838601011115611be157600080fd5b816020850160208301376000918101602001919091529392505050565b803567ffffffffffffffff81168114611a9057600080fd5b600080600080600060a08688031215611c2e57600080fd5b853567ffffffffffffffff80821115611c4657600080fd5b611c5289838a01611b70565b9650611c6060208901611a6c565b955060408801359450611c7560608901611bfe565b93506080880135915080821115611c8b57600080fd5b50611c9888828901611b70565b9150509295509295909350565b60008083601f840112611cb757600080fd5b50813567ffffffffffffffff811115611ccf57600080fd5b602083019150836020828501011115611ce757600080fd5b9250929050565b600080600080600080600060a0888a031215611d0957600080fd5b611d1288611a6c565b9650602088013567ffffffffffffffff80821115611d2f57600080fd5b611d3b8b838c01611ca5565b909850965060408a01359550869150611d5660608b01611bfe565b945060808a0135915080821115611d6c57600080fd5b50611d798a828b01611ca5565b989b979a50959850939692959293505050565b8015158114610bcd57600080fd5b600082601f830112611dab57600080fd5b8135602067ffffffffffffffff821115611dc757611dc7611ac9565b611dd5818360051b01611b21565b82815260069290921b84018101918181019086841115611df457600080fd5b8286015b84811015611e435760408189031215611e115760008081fd5b611e19611af8565b611e2282611a6c565b815284820135611e3181611d8c565b81860152835291830191604001611df8565b509695505050505050565b60008060408385031215611e6157600080fd5b823567ffffffffffffffff80821115611e7957600080fd5b611e8586838701611d9a565b93506020850135915080821115611e9b57600080fd5b50611ea885828601611d9a565b9150509250929050565b80356fffffffffffffffffffffffffffffffff81168114611a9057600080fd5b600060608284031215611ee457600080fd5b6040516060810181811067ffffffffffffffff82111715611f0757611f07611ac9565b6040528235611f1581611d8c565b8152611f2360208401611eb2565b6020820152611f3460408401611eb2565b60408201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156103eb576103eb611f40565b600060208284031215611f9457600080fd5b5051919050565b818103818111156103eb576103eb611f40565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361200e5761200e611f40565b5060010190565b60006020828403121561202757600080fd5b8151610c0c81611d8c565b80820281158282048414176103eb576103eb611f40565b60008261207f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60005b838110156120ce5781810151838201526020016120b6565b50506000910152565b600082516120e98184602087016120b3565b9190910192915050565b60208152600082518060208401526121128160408501602087016120b3565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea164736f6c6343000813000a",
    "sourceMap": "702:2612:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2429:191:38;;;;;;:::i;:::-;;:::i;:::-;;;516:14:69;;509:22;491:41;;479:2;464:18;2429:191:38;;;;;;;;3242:109;;;;;;:::i;:::-;;:::i;2310:89::-;2387:7;2310:89;;;1127:42:69;1115:55;;;1097:74;;1085:2;1070:18;2310:89:38;935:242:69;6027:59:38;;;:::i;:::-;;2580:217:36;;;;;;:::i;:::-;;:::i;4746:146:38:-;;;:::i;:::-;;;;;;1647:13:69;;1582:34;1643:22;;;1625:41;;1726:4;1714:17;;;1708:24;1734:10;1704:41;1682:20;;;1675:71;1816:4;1804:17;;;1798:24;1791:32;1784:40;1762:20;;;1755:70;1885:4;1873:17;;;1867:24;1863:33;;1841:20;;;1834:63;1957:4;1945:17;;;1939:24;1935:33;1913:20;;;1906:63;;;;1559:3;1544:19;;1367:608;2306:135:36;;;;;;:::i;:::-;2399:37;;2377:7;2399:37;;;:27;:37;;;;;;;2306:135;;;;2126:25:69;;;2114:2;2099:18;2306:135:36;1980:177:69;1615:84:52;1685:7;;;;;;;1615:84;;2983:105:38;;;;;;:::i;:::-;;:::i;1016:265:45:-;;;:::i;5929:55:38:-;;;:::i;1826:293:36:-;;;;;;:::i;:::-;;:::i;1332:81:45:-;1379:7;1401;;;1332:81;;1490:194:36;;;;;;:::i;:::-;;:::i;2940:372::-;;;;;;:::i;:::-;;:::i;3593:663:38:-;;;;;;:::i;:::-;;:::i;5059:135::-;;;;;;:::i;:::-;;:::i;826:98:45:-;;;;;;:::i;:::-;;:::i;2429:191:38:-;2514:4;2533:38;;;2548:23;2533:38;;:82;;-1:-1:-1;2575:40:38;;;2590:25;2575:40;2533:82;2526:89;2429:191;-1:-1:-1;;2429:191:38:o;3242:109::-;3299:4;3318:28;:10;3338:7;3318:19;:28::i;6027:59::-;1956:20:45;:18;:20::i;:::-;6071:10:38::1;:8;:10::i;:::-;6027:59::o:0;2580:217:36:-;2633:59;:24;:7;:24;2658:10;2678:4;2685:6;2633:24;:59::i;:::-;2726:10;2698:39;;;;:27;:39;;;;;:49;;2741:6;;2698:39;:49;;2741:6;;2698:49;:::i;:::-;;;;-1:-1:-1;;2758:34:36;;2785:6;;2773:10;;2758:34;;;;;2580:217;:::o;4746:146:38:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4847:38:38;;;;;;;;:13;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:40;;:38;:40::i;:::-;4840:47;;4746:146;:::o;2983:105::-;3038:4;3057:26;:9;3076:6;3057:18;:26::i;1016:265:45:-;1089:14;;;;1075:10;:28;1067:63;;;;;;;9239:2:69;1067:63:45;;;9221:21:69;9278:2;9258:18;;;9251:30;9317:24;9297:18;;;9290:52;9359:18;;1067:63:45;;;;;;;;;1137:16;1156:7;;1179:10;1169:20;;;;;;;;-1:-1:-1;1195:27:45;;;;;;;1234:42;;1156:7;;;;;1179:10;;1156:7;;1234:42;;;1061:220;1016:265::o;5929:55:38:-;1956:20:45;:18;:20::i;:::-;5971:8:38::1;:6;:8::i;1826:293:36:-:0;1239:19:52;:17;:19::i;:::-;5828:21:38::1;5838:10;5828:9;:21::i;:::-;5823:53;;5858:18;;;;;;;;;;;;;;5823:53;1993:25:36::2;2011:6;1993:17;:25::i;:::-;2024:41;:23;2387:7:38::0;2024:23:36::2;2048:8:::0;2058:6;2024:23:::2;:41::i;:::-;2076:38;::::0;2126:25:69;;;2076:38:36::2;::::0;::::2;::::0;2085:10:::2;::::0;2076:38:::2;::::0;2114:2:69;2099:18;2076:38:36::2;;;;;;;1826:293:::0;;;;;:::o;1490:194::-;1239:19:52;:17;:19::i;:::-;5586:20:38::1;5595:10;5586:8;:20::i;:::-;5581:52;;5615:18;;;;;;;;;;;;;;5581:52;1653:26:36::2;::::0;2126:25:69;;;1660:10:36::2;::::0;1653:26:::2;::::0;2114:2:69;2099:18;1653:26:36::2;;;;;;;1490:194:::0;;;;;;;:::o;2940:372::-;3028:10;3000:39;;;;:27;:39;;;;;;:48;-1:-1:-1;2996:80:36;;;3057:19;;;;;;;;;;;;;;2996:80;3086:32;;;;;3112:4;3086:32;;;1097:74:69;3121:6:36;;3086:7;:17;;;;;1070:18:69;;3086:32:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;3082:77;;;3136:23;;;;;;;;;;;;;;3082:77;3165:40;:20;:7;:20;3186:10;3198:6;3165:20;:40::i;:::-;3239:10;3211:39;;;;:27;:39;;;;;:49;;3254:6;;3211:39;:49;;3254:6;;3211:49;:::i;:::-;;;;-1:-1:-1;;3271:36:36;;3300:6;;3288:10;;3271:36;;;;;2940:372;:::o;3593:663:38:-;1956:20:45;:18;:20::i;:::-;3714:9:38::1;3709:265;3733:7;:14;3729:1;:18;3709:265;;;3762:24;3789:7;3797:1;3789:10;;;;;;;;:::i;:::-;;;;;;;3762:37;;3812:6;:14;;;:75;;3875:11:::0;;3858:29:::1;::::0;:9:::1;::::0;:16:::1;:29::i;:::-;3812:75;;;3843:11:::0;;3829:26:::1;::::0;:9:::1;::::0;:13:::1;:26::i;:::-;3808:160;;;3904:55;3923:7;3931:1;3923:10;;;;;;;;:::i;:::-;;;;;;;:15;;;3940:7;3948:1;3940:10;;;;;;;;:::i;:::-;;;;;;;:18;;;3904:55;;;;;;10097:42:69::0;10085:55;;;;10067:74;;10184:14;10177:22;10172:2;10157:18;;10150:50;10055:2;10040:18;;9899:307;3904:55:38::1;;;;;;;;3808:160;-1:-1:-1::0;3749:3:38::1;::::0;::::1;:::i;:::-;;;3709:265;;;;3985:9;3980:272;4004:8;:15;4000:1;:19;3980:272;;;4034:24;4061:8;4070:1;4061:11;;;;;;;;:::i;:::-;;;;;;;4034:38;;4085:6;:14;;;:77;;4150:11:::0;;4132:30:::1;::::0;:10:::1;::::0;:17:::1;:30::i;:::-;4085:77;;;4117:11:::0;;4102:27:::1;::::0;:10:::1;::::0;:14:::1;:27::i;:::-;4081:165;;;4179:58;4199:8;4208:1;4199:11;;;;;;;;:::i;:::-;;;;;;;:16;;;4217:8;4226:1;4217:11;;;;;;;;:::i;:::-;;;;;;;:19;;;4179:58;;;;;;10097:42:69::0;10085:55;;;;10067:74;;10184:14;10177:22;10172:2;10157:18;;10150:50;10055:2;10040:18;;9899:307;4179:58:38::1;;;;;;;;4081:165;-1:-1:-1::0;4021:3:38::1;::::0;::::1;:::i;:::-;;;3980:272;;;;3593:663:::0;;:::o;5059:135::-;1956:20:45;:18;:20::i;:::-;5146:43:38::1;:13;5182:6:::0;5146:35:::1;:43::i;:::-;5059:135:::0;:::o;826:98:45:-;1956:20;:18;:20::i;:::-;897:22:::1;916:2;897:18;:22::i;8294:159:68:-:0;8423:23;;;8374:4;4067:19;;;:12;;;:19;;;;;;:24;;8393:55;8386:62;8294:159;-1:-1:-1;;;8294:159:68:o;1730:111:45:-;1802:7;;;;1788:10;:21;1780:56;;;;;;;10613:2:69;1780:56:45;;;10595:21:69;10652:2;10632:18;;;10625:30;10691:24;10671:18;;;10664:52;10733:18;;1780:56:45;10411:346:69;2433:117:52;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;;::::1;::::0;;2521:22:::1;713:10:60::0;2530:12:52::1;2521:22;::::0;1127:42:69;1115:55;;;1097:74;;1085:2;1070:18;2521:22:52::1;;;;;;;2433:117::o:0;948:217:58:-;1091:68;;10974:42:69;11043:15;;;1091:68:58;;;11025:34:69;11095:15;;11075:18;;;11068:43;11127:18;;;11120:34;;;1064:96:58;;1084:5;;1114:27;;10937:18:69;;1091:68:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1064:19;:96::i;:::-;948:217;;;;:::o;3371:528:28:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3720:99:28;3737:6;:15;;;3720:99;;3754:6;:13;;;3720:99;;3787:6;:18;;;3769:36;;:15;:36;;;;:::i;:::-;3807:6;:11;;;3720:99;;:16;:99::i;:::-;3689:136;;;;-1:-1:-1;3831:44:28;3859:15;3831:44;:18;;;:44;3689:6;3371:528::o;2186:115:52:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:14:::0;;;::::1;::::0;::::1;::::0;;2274:20:::1;2281:12;713:10:60::0;;638:90;1767:106:52;1685:7;;;;;;;1836:9;1828:38;;;;;;;11367:2:69;1828:38:52;;;11349:21:69;11406:2;11386:18;;;11379:30;11445:18;11425;;;11418:46;11481:18;;1828:38:52;11165:340:69;4530:93:38;4588:30;:13;4611:6;4588:22;:30::i;759:185:58:-;880:58;;11714:42:69;11702:55;;880:58:58;;;11684:74:69;11774:18;;;11767:34;;;853:86:58;;873:5;;903:23;;11657:18:69;;880:58:58;11510:297:69;8071:150:68;8144:4;8163:53;8171:3;8191:23;;;8163:7;:53::i;7773:144::-;7843:4;7862:50;7867:3;7887:23;;;7862:4;:50::i;4021:700:28:-;4276:20;;4239:16;;4258:38;;4276:20;;;;;4258:15;:38;:::i;:::-;4239:57;-1:-1:-1;4306:13:28;;4302:193;;4372:17;;;;4391:15;;4355:77;;4372:17;;;;;4391:15;;;4408:8;;4418:13;;;;;4355:16;:77::i;:::-;4329:104;;;;;;;4442:46;;;;;;4472:15;4442:46;;;;;;4302:193;4532:15;;;;4549;;4527:38;;;;;;;4549:15;4527:4;:38::i;:::-;4501:65;;4593:16;;4572:37;;;;;;;;4501:65;;;;4572:37;;;;4635:15;;;;4672:11;;;;;4656:27;;;;4615:35;;;;4656:27;4501:65;4615:17;;4656:27;4695:21;;;;;4593:6;;12038:13:69;;12031:21;12024:29;12006:48;;12101:4;12089:17;;;12083:24;12126:34;12198:21;;;12176:20;;;12169:51;;;;12280:4;12268:17;;;12262:24;12258:33;12236:20;;;12229:63;;;;11994:2;11979:18;;11812:486;4695:21:28;;;;;;;;4113:608;4021:700;;:::o;1497:188:45:-;1565:10;1559:16;;;;1551:52;;;;;;;12505:2:69;1551:52:45;;;12487:21:69;12544:2;12524:18;;;12517:30;12583:25;12563:18;;;12556:53;12626:18;;1551:52:45;12303:347:69;1551:52:45;1610:14;:19;;;;;;;;;;;;;;-1:-1:-1;1668:7:45;;1641:39;;1610:19;;1668:7;;1641:39;;-1:-1:-1;1641:39:45;1497:188;:::o;1945:106:52:-;1685:7;;;;;;;2003:41;;;;;;;12857:2:69;2003:41:52;;;12839:21:69;12896:2;12876:18;;;12869:30;12935:22;12915:18;;;12908:50;12975:18;;2003:41:52;12655:344:69;3485:668:58;3888:23;3914:69;3942:4;3914:69;;;;;;;;;;;;;;;;;3922:5;3914:27;;;;:69;;;;;:::i;:::-;3993:17;;3888:95;;-1:-1:-1;3993:21:58;3989:160;;4076:10;4065:30;;;;;;;;;;;;:::i;:::-;4057:85;;;;;;;13456:2:69;4057:85:58;;;13438:21:69;13495:2;13475:18;;;13468:30;13534:34;13514:18;;;13507:62;13605:12;13585:18;;;13578:40;13635:19;;4057:85:58;13254:406:69;4991:201:28;5125:7;5147:40;5152:8;5171:15;5182:4;5171:8;:15;:::i;:::-;5162:24;;:6;:24;:::i;:::-;5147:4;:40::i;:::-;5140:47;;4991:201;;;;;;;:::o;2003:1245::-;2199:18;;;;;;;2198:19;;:41;;-1:-1:-1;2221:18:28;;2198:41;2194:68;;;2003:1245;;:::o;2194:68::-;2285:15;;;2325:17;;;2285:15;;;;;2325:17;;;2268:14;;2367:38;;2385:20;;;;;2367:15;:38;:::i;:::-;2348:57;-1:-1:-1;2416:13:28;;2412:271;;2452:8;2443:6;:17;2439:48;;;2469:18;;;;;;;;;;;;;;2439:48;2607:13;;;;2562:59;;2579:8;;2589:6;;2597:8;;2607:13;;;;;2562:16;:59::i;:::-;2630:46;;;;;2660:15;2630:46;;;;;;2553:68;-1:-1:-1;2412:271:28;2704:13;2693:8;:24;2689:90;;;2726:53;;;;;;;;14012:25:69;;;14053:18;;;14046:34;;;13985:18;;2726:53:28;13838:248:69;2689:90:28;2798:13;2789:6;:22;2785:282;;;2836:13;;;;;;;;;;;;;3042:8;;2836:13;3042:8;:::i;:::-;3015:22;3031:6;3015:13;:22;:::i;:::-;3014:37;;;;:::i;:::-;3013:46;;;;:::i;:::-;2996:64;;;;;;;;;2126:25:69;;2114:2;2099:18;;1980:177;2785:282:28;3072:23;3082:13;3072:23;;:::i;:::-;3170:33;;;;;;;;;;3214:29;;2126:25:69;;;3170:33:28;;-1:-1:-1;3214:29:28;;2114:2:69;2099:18;3214:29:28;;;;;;;2083:1165;;;2003:1245;;:::o;2660:1242:68:-;2726:4;2855:19;;;:12;;;:19;;;;;;2885:15;;2881:1017;;3224:21;3248:14;3261:1;3248:10;:14;:::i;:::-;3290:18;;3224:38;;-1:-1:-1;3270:17:68;;3290:22;;3311:1;;3290:22;:::i;:::-;3270:42;;3338:13;3325:9;:26;3321:352;;3363:17;3383:3;:11;;3395:9;3383:22;;;;;;;;:::i;:::-;;;;;;;;;3363:42;;3518:9;3489:3;:11;;3501:13;3489:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3585:23;;;:12;;;:23;;;;;:36;;;3321:352;3739:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3819:3;:12;;:19;3832:5;3819:19;;;;;;;;;;;3812:26;;;3854:4;3847:11;;;;;;;2881:1017;3886:5;3879:12;;;;;2152:354;2215:4;4067:19;;;:12;;;:19;;;;;;2227:275;;-1:-1:-1;2263:23:68;;;;;;;;:11;:23;;;;;;;;;;;;;2425:18;;2403:19;;;:12;;;:19;;;;;;:40;;;;2451:11;;2227:275;-1:-1:-1;2490:5:68;2483:12;;5320:99:28;5379:7;5405:1;5401;:5;:13;;5413:1;5401:13;;;-1:-1:-1;5409:1:28;;5320:99;-1:-1:-1;5320:99:28:o;3695:203:59:-;3814:12;3841:52;3863:6;3871:4;3877:1;3880:12;3814;4959;4973:23;5000:6;:11;;5019:5;5026:4;5000:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4958:73;;;;5044:69;5071:6;5079:7;5088:10;5100:12;5044:26;:69::i;:::-;5037:76;4704:414;-1:-1:-1;;;;;;;4704:414:59:o;7048:548::-;7210:12;7234:7;7230:362;;;7255:10;:17;7276:1;7255:22;7251:256;;1395:19;;;;7438:60;;;;;;;15715:2:69;7438:60:59;;;15697:21:69;15754:2;15734:18;;;15727:30;15793:31;15773:18;;;15766:59;15842:18;;7438:60:59;15513:353:69;7438:60:59;-1:-1:-1;7521:10:59;7514:17;;7230:362;7552:33;7560:10;7572:12;8213:17;;:21;8209:325;;8415:10;8409:17;8463:15;8450:10;8446:2;8442:19;8435:44;8209:325;8514:12;8507:20;;;;;;;;;;;:::i;14:332:69:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;543:196;611:20;;671:42;660:54;;650:65;;640:93;;729:1;726;719:12;640:93;543:196;;;:::o;744:186::-;803:6;856:2;844:9;835:7;831:23;827:32;824:52;;;872:1;869;862:12;824:52;895:29;914:9;895:29;:::i;1182:180::-;1241:6;1294:2;1282:9;1273:7;1269:23;1265:32;1262:52;;;1310:1;1307;1300:12;1262:52;-1:-1:-1;1333:23:69;;1182:180;-1:-1:-1;1182:180:69:o;2162:184::-;2214:77;2211:1;2204:88;2311:4;2308:1;2301:15;2335:4;2332:1;2325:15;2351:257;2423:4;2417:11;;;2455:17;;2502:18;2487:34;;2523:22;;;2484:62;2481:88;;;2549:18;;:::i;:::-;2585:4;2578:24;2351:257;:::o;2613:334::-;2684:2;2678:9;2740:2;2730:13;;2745:66;2726:86;2714:99;;2843:18;2828:34;;2864:22;;;2825:62;2822:88;;;2890:18;;:::i;:::-;2926:2;2919:22;2613:334;;-1:-1:-1;2613:334:69:o;2952:589::-;2994:5;3047:3;3040:4;3032:6;3028:17;3024:27;3014:55;;3065:1;3062;3055:12;3014:55;3101:6;3088:20;3127:18;3123:2;3120:26;3117:52;;;3149:18;;:::i;:::-;3193:114;3301:4;3232:66;3225:4;3221:2;3217:13;3213:86;3209:97;3193:114;:::i;:::-;3332:2;3323:7;3316:19;3378:3;3371:4;3366:2;3358:6;3354:15;3350:26;3347:35;3344:55;;;3395:1;3392;3385:12;3344:55;3460:2;3453:4;3445:6;3441:17;3434:4;3425:7;3421:18;3408:55;3508:1;3483:16;;;3501:4;3479:27;3472:38;;;;3487:7;2952:589;-1:-1:-1;;;2952:589:69:o;3546:171::-;3613:20;;3673:18;3662:30;;3652:41;;3642:69;;3707:1;3704;3697:12;3722:755;3834:6;3842;3850;3858;3866;3919:3;3907:9;3898:7;3894:23;3890:33;3887:53;;;3936:1;3933;3926:12;3887:53;3976:9;3963:23;4005:18;4046:2;4038:6;4035:14;4032:34;;;4062:1;4059;4052:12;4032:34;4085:49;4126:7;4117:6;4106:9;4102:22;4085:49;:::i;:::-;4075:59;;4153:38;4187:2;4176:9;4172:18;4153:38;:::i;:::-;4143:48;;4238:2;4227:9;4223:18;4210:32;4200:42;;4261:37;4294:2;4283:9;4279:18;4261:37;:::i;:::-;4251:47;;4351:3;4340:9;4336:19;4323:33;4307:49;;4381:2;4371:8;4368:16;4365:36;;;4397:1;4394;4387:12;4365:36;;4420:51;4463:7;4452:8;4441:9;4437:24;4420:51;:::i;:::-;4410:61;;;3722:755;;;;;;;;:::o;4713:347::-;4764:8;4774:6;4828:3;4821:4;4813:6;4809:17;4805:27;4795:55;;4846:1;4843;4836:12;4795:55;-1:-1:-1;4869:20:69;;4912:18;4901:30;;4898:50;;;4944:1;4941;4934:12;4898:50;4981:4;4973:6;4969:17;4957:29;;5033:3;5026:4;5017:6;5009;5005:19;5001:30;4998:39;4995:59;;;5050:1;5047;5040:12;4995:59;4713:347;;;;;:::o;5065:933::-;5181:6;5189;5197;5205;5213;5221;5229;5282:3;5270:9;5261:7;5257:23;5253:33;5250:53;;;5299:1;5296;5289:12;5250:53;5322:29;5341:9;5322:29;:::i;:::-;5312:39;;5402:2;5391:9;5387:18;5374:32;5425:18;5466:2;5458:6;5455:14;5452:34;;;5482:1;5479;5472:12;5452:34;5521:58;5571:7;5562:6;5551:9;5547:22;5521:58;:::i;:::-;5598:8;;-1:-1:-1;5495:84:69;-1:-1:-1;5680:2:69;5665:18;;5652:32;;-1:-1:-1;5495:84:69;;-1:-1:-1;5703:37:69;5736:2;5721:18;;5703:37;:::i;:::-;5693:47;;5793:3;5782:9;5778:19;5765:33;5749:49;;5823:2;5813:8;5810:16;5807:36;;;5839:1;5836;5829:12;5807:36;;5878:60;5930:7;5919:8;5908:9;5904:24;5878:60;:::i;:::-;5065:933;;;;-1:-1:-1;5065:933:69;;-1:-1:-1;5065:933:69;;;;5852:86;;-1:-1:-1;;;5065:933:69:o;6003:118::-;6089:5;6082:13;6075:21;6068:5;6065:32;6055:60;;6111:1;6108;6101:12;6126:1066;6190:5;6243:3;6236:4;6228:6;6224:17;6220:27;6210:55;;6261:1;6258;6251:12;6210:55;6297:6;6284:20;6323:4;6346:18;6342:2;6339:26;6336:52;;;6368:18;;:::i;:::-;6408:36;6440:2;6435;6432:1;6428:10;6424:19;6408:36;:::i;:::-;6478:15;;;6564:1;6560:10;;;;6548:23;;6544:32;;;6509:12;;;;6588:15;;;6585:35;;;6616:1;6613;6606:12;6585:35;6652:2;6644:6;6640:15;6664:499;6680:6;6675:3;6672:15;6664:499;;;6758:4;6752:3;6747;6743:13;6739:24;6736:114;;;6804:1;6833:2;6829;6822:14;6736:114;6876:22;;:::i;:::-;6925:23;6944:3;6925:23;:::i;:::-;6918:5;6911:38;6999:2;6994:3;6990:12;6977:26;7016:30;7038:7;7016:30;:::i;:::-;7066:14;;;7059:31;7103:18;;7141:12;;;;6706:4;6697:14;6664:499;;;-1:-1:-1;7181:5:69;6126:1066;-1:-1:-1;;;;;;6126:1066:69:o;7197:673::-;7373:6;7381;7434:2;7422:9;7413:7;7409:23;7405:32;7402:52;;;7450:1;7447;7440:12;7402:52;7490:9;7477:23;7519:18;7560:2;7552:6;7549:14;7546:34;;;7576:1;7573;7566:12;7546:34;7599:71;7662:7;7653:6;7642:9;7638:22;7599:71;:::i;:::-;7589:81;;7723:2;7712:9;7708:18;7695:32;7679:48;;7752:2;7742:8;7739:16;7736:36;;;7768:1;7765;7758:12;7736:36;;7791:73;7856:7;7845:8;7834:9;7830:24;7791:73;:::i;:::-;7781:83;;;7197:673;;;;;:::o;7875:188::-;7943:20;;8003:34;7992:46;;7982:57;;7972:85;;8053:1;8050;8043:12;8068:645;8151:6;8204:2;8192:9;8183:7;8179:23;8175:32;8172:52;;;8220:1;8217;8210:12;8172:52;8253:2;8247:9;8295:2;8287:6;8283:15;8364:6;8352:10;8349:22;8328:18;8316:10;8313:34;8310:62;8307:88;;;8375:18;;:::i;:::-;8411:2;8404:22;8448:23;;8480:28;8448:23;8480:28;:::i;:::-;8517:21;;8571:38;8605:2;8590:18;;8571:38;:::i;:::-;8566:2;8558:6;8554:15;8547:63;8643:38;8677:2;8666:9;8662:18;8643:38;:::i;:::-;8638:2;8626:15;;8619:63;8630:6;8068:645;-1:-1:-1;;;8068:645:69:o;8718:184::-;8770:77;8767:1;8760:88;8867:4;8864:1;8857:15;8891:4;8888:1;8881:15;8907:125;8972:9;;;8993:10;;;8990:36;;;9006:18;;:::i;9388:184::-;9458:6;9511:2;9499:9;9490:7;9486:23;9482:32;9479:52;;;9527:1;9524;9517:12;9479:52;-1:-1:-1;9550:16:69;;9388:184;-1:-1:-1;9388:184:69:o;9577:128::-;9644:9;;;9665:11;;;9662:37;;;9679:18;;:::i;9710:184::-;9762:77;9759:1;9752:88;9859:4;9856:1;9849:15;9883:4;9880:1;9873:15;10211:195;10250:3;10281:66;10274:5;10271:77;10268:103;;10351:18;;:::i;:::-;-1:-1:-1;10398:1:69;10387:13;;10211:195::o;13004:245::-;13071:6;13124:2;13112:9;13103:7;13099:23;13095:32;13092:52;;;13140:1;13137;13130:12;13092:52;13172:9;13166:16;13191:28;13213:5;13191:28;:::i;13665:168::-;13738:9;;;13769;;13786:15;;;13780:22;;13766:37;13756:71;;13807:18;;:::i;14091:274::-;14131:1;14157;14147:189;;14192:77;14189:1;14182:88;14293:4;14290:1;14283:15;14321:4;14318:1;14311:15;14147:189;-1:-1:-1;14350:9:69;;14091:274::o;14370:184::-;14422:77;14419:1;14412:88;14519:4;14516:1;14509:15;14543:4;14540:1;14533:15;14966:250;15051:1;15061:113;15075:6;15072:1;15069:13;15061:113;;;15151:11;;;15145:18;15132:11;;;15125:39;15097:2;15090:10;15061:113;;;-1:-1:-1;;15208:1:69;15190:16;;15183:27;14966:250::o;15221:287::-;15350:3;15388:6;15382:13;15404:66;15463:6;15458:3;15451:4;15443:6;15439:17;15404:66;:::i;:::-;15486:16;;;;;15221:287;-1:-1:-1;;15221:287:69:o;15871:455::-;16020:2;16009:9;16002:21;15983:4;16052:6;16046:13;16095:6;16090:2;16079:9;16075:18;16068:34;16111:79;16183:6;16178:2;16167:9;16163:18;16158:2;16150:6;16146:15;16111:79;:::i;:::-;16242:2;16230:15;16247:66;16226:88;16211:104;;;;16317:2;16207:113;;15871:455;-1:-1:-1;;15871:455:69:o",
    "linkReferences": {},
    "immutableReferences": {
      "12399": [
        {
          "start": 376,
          "length": 32
        },
        {
          "start": 1066,
          "length": 32
        },
        {
          "start": 1764,
          "length": 32
        },
        {
          "start": 2141,
          "length": 32
        },
        {
          "start": 2351,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "addLiquidity(uint256)": "51c6590a",
    "applyRampUpdates((address,bool)[],(address,bool)[])": "af519112",
    "currentRateLimiterState()": "546719cd",
    "getProvidedLiquidity(address)": "56dd1e81",
    "getToken()": "21df0da7",
    "isOffRamp(address)": "1d7a74a0",
    "isOnRamp(address)": "6f32b872",
    "lockOrBurn(address,bytes,uint256,uint64,bytes)": "96875445",
    "owner()": "8da5cb5b",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "releaseOrMint(bytes,address,uint256,uint64,bytes)": "8627fad6",
    "removeLiquidity(uint256)": "9c8f9f23",
    "setRateLimiterConfig((bool,uint128,uint128))": "c92b2832",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferOwnership(address)": "f2fde38b",
    "unpause()": "3f4ba83a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"internalType\":\"struct RateLimiter.Config\",\"name\":\"rateLimiterConfig\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BucketOverfilled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"capacity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"}],\"name\":\"ConsumingMoreThanMaxCapacity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NullAddressNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PermissionsError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"waitInSeconds\",\"type\":\"uint256\"}],\"name\":\"RateLimitReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawalTooHigh\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Locked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"onRamp\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"OffRampAllowanceSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"onRamp\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"OnRampAllowanceSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"ramp\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"internalType\":\"struct TokenPool.RampUpdate[]\",\"name\":\"onRamps\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"ramp\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"internalType\":\"struct TokenPool.RampUpdate[]\",\"name\":\"offRamps\",\"type\":\"tuple[]\"}],\"name\":\"applyRampUpdates\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRateLimiterState\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"tokens\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"lastUpdated\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"internalType\":\"struct RateLimiter.TokenBucket\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"getProvidedLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"offRamp\",\"type\":\"address\"}],\"name\":\"isOffRamp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"onRamp\",\"type\":\"address\"}],\"name\":\"isOnRamp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"lockOrBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"releaseOrMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"capacity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"}],\"internalType\":\"struct RateLimiter.Config\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"setRateLimiterConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"One token per LockReleaseTokenPool.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"addLiquidity(uint256)\":{\"params\":{\"amount\":\"The amount of liquidity to provide.\"}},\"applyRampUpdates((address,bool)[],(address,bool)[])\":{\"details\":\"Only callable by the owner\",\"params\":{\"offRamps\":\"A list of offRamps and their new permission status\",\"onRamps\":\"A list of onRamps and their new permission status\"}},\"currentRateLimiterState()\":{\"returns\":{\"_0\":\"The token bucket.\"}},\"getProvidedLiquidity(address)\":{\"params\":{\"provider\":\"The address for which to get the balance.\"},\"returns\":{\"_0\":\"The current provided liquidity.\"}},\"getToken()\":{\"returns\":{\"token\":\"The IERC20 token representation.\"}},\"isOffRamp(address)\":{\"returns\":{\"_0\":\"true is the given address is a permissioned offRamp.\"}},\"isOnRamp(address)\":{\"returns\":{\"_0\":\"true if the given address is a permissioned onRamp.\"}},\"lockOrBurn(address,bytes,uint256,uint64,bytes)\":{\"details\":\"Locks are not rate limited at per-pool level. Each pool is shared across lanes, rate limiting locks does not meaningfully mitigate honeypot risk. Benefits of rate limiting here does not justify the extra gas cost.\",\"params\":{\"amount\":\"Amount to lock\"}},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"releaseOrMint(bytes,address,uint256,uint64,bytes)\":{\"params\":{\"amount\":\"Amount to release\",\"receiver\":\"Recipient address\"}},\"removeLiquidity(uint256)\":{\"params\":{\"amount\":\"The amount of liquidity to remove.\"}},\"setRateLimiterConfig((bool,uint128,uint128))\":{\"details\":\"should only be callable by the owner or token limit admin.\",\"params\":{\"config\":\"The new rate limiter config.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"addLiquidity(uint256)\":{\"notice\":\"Adds liquidity to the pool. The tokens should be approved first.\"},\"applyRampUpdates((address,bool)[],(address,bool)[])\":{\"notice\":\"Sets permissions for all on and offRamps.\"},\"currentRateLimiterState()\":{\"notice\":\"Gets the token bucket with its values for the block it was requested at.\"},\"getProvidedLiquidity(address)\":{\"notice\":\"Gets the amount of provided liquidity for a given address.\"},\"getToken()\":{\"notice\":\"Gets the IERC20 token that this pool can lock or burn.\"},\"isOffRamp(address)\":{\"notice\":\"Checks whether something is a permissioned offRamp on this contract.\"},\"isOnRamp(address)\":{\"notice\":\"Checks whether something is a permissioned onRamp on this contract.\"},\"lockOrBurn(address,bytes,uint256,uint64,bytes)\":{\"notice\":\"Locks the token in the pool\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"pause()\":{\"notice\":\"Pauses the token pool.\"},\"releaseOrMint(bytes,address,uint256,uint64,bytes)\":{\"notice\":\"Release tokens from the pool to the recipient\"},\"removeLiquidity(uint256)\":{\"notice\":\"Removed liquidity to the pool. The tokens will be sent to msg.sender.\"},\"setRateLimiterConfig((bool,uint128,uint128))\":{\"notice\":\"Sets the rate limited config.\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"},\"unpause()\":{\"notice\":\"Unpauses the token pool.\"}},\"notice\":\"Token pool used for tokens on their native chain. This uses a lock and release mechanism. Because of lock/unlock requiring liquidity, this pool contract also has function to add and remove liquidity. This allows for proper bookkeeping for both user and liquidity provider balances.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/pools/LockReleaseTokenPool.sol\":\"LockReleaseTokenPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":30000},\"remappings\":[]},\"sources\":{\"contracts/OwnerIsCreator.sol\":{\"keccak256\":\"0xb9a890795a532c39766da1c6e8ef202e7bfc39e1a5deef36503be4fcdd360e2f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2112758933edb2f9dc368a4d426f5db9d3556d9592d68fa37f83c5946f985fe9\",\"dweb:/ipfs/QmV36JwTwSSrAgt5zvPiuo1NhVWacokJKrtHqVVBePUNFo\"]},\"contracts/interfaces/pools/IPool.sol\":{\"keccak256\":\"0x8e3209bf472b101ee7876ae53cc31bf348c4792e11380b79a53a6b596a1008d1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://36cd8e5d36825dbd2cf0683510a4e45cb857a8b7b447bad217a9f0d5cc738d4b\",\"dweb:/ipfs/QmRDV3VgmdHmo9Bnyri8ePwN2zDNapgpDbhNKNHPiEVpFK\"]},\"contracts/libraries/Client.sol\":{\"keccak256\":\"0xf2616f59db15ba0493e4ce3514ea0655cbc9b65ee754e7fc012fe19752659574\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3ebc41940d13751005c195f743f5f22cc1e7b98f6d72cc10116b4853b5ac9837\",\"dweb:/ipfs/QmNweYHQHsTLWFa9cy8XJgxFRgH97XLAGxPw3k8diwrTj6\"]},\"contracts/libraries/RateLimiter.sol\":{\"keccak256\":\"0xbd8f971d35bc5ad464b48277220c3ab0f57198fb3bf27959d1d8b8c6fc187aad\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9f1b60b876887943f880d033341b70f513f3e77bfd68c875920df8f57a84e1e0\",\"dweb:/ipfs/QmYVt4qGACebfu4BMNpwhcerWbiLmw6jFTddwYYqfoMDCa\"]},\"contracts/pools/LockReleaseTokenPool.sol\":{\"keccak256\":\"0xd8269f3848d3e3a0d9525f6a23bec4383247d14db9069cd23311a86bfe43de63\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://568cc93057cb0ff87fd1a2636567667bd5101d17dd80aecf03e026330a5fc343\",\"dweb:/ipfs/QmcX4PFCUUdpdo8Dr1taKabgGBkE2wUfD6ZjanM3wU818X\"]},\"contracts/pools/TokenPool.sol\":{\"keccak256\":\"0x294306cef2b7f179e75d12345248e7f7c45809780a9ef2c61348e961d1ea756e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4cffc3ac92379d95324538fa494cf4224b407afdea9d5f63a0e98d2d468b4c70\",\"dweb:/ipfs/QmakbAigzsqs24JDydh9XpRyGGrSVnCwtFjUh4URa47CgZ\"]},\"libraries/internal/ConfirmedOwner.sol\":{\"keccak256\":\"0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0371c1af45db651823b9a3d5af761b08243c78f105166342eee28de356c8dd\",\"dweb:/ipfs/QmPnC9qNDKwJFd5unwLb9pxjrutoe8MWjm5EXHTxq2kJ4x\"]},\"libraries/internal/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0xa2f137a1d066795aeac76226e58f33c982278cdd34b4f09e5a2243d5a0924654\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a73f185d79d82e6d9baa531d55ffb88c80def1f6187dff93d3df6b2cb5ab7187\",\"dweb:/ipfs/QmVZEePJvcN1KxSTaD5rhKhaMBWHqs6ZeZ5s17Ft6mR5hJ\"]},\"libraries/internal/interfaces/OwnableInterface.sol\":{\"keccak256\":\"0xb8b3a97783dddc198b790c4cec1eda7fb47aa38cbaea6555220d0ed8c735c086\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acf7ed6aff47fbddeff1b85e1225a717dfa8bfb3ab89db0e6564346afcf03693\",\"dweb:/ipfs/QmQQn5sKn1ARbt1WhYoHwfTJhK8fbQi8MbDQeHxGXTPbPE\"]},\"vendor/openzeppelin-solidity/v4.8.0/security/Pausable.sol\":{\"keccak256\":\"0x5978f41f111faebf93f1662d7b9ecea6f3f301ac1f6e51dd30a54c8754ecddba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a18930b6432dc69f5ea681452293746262f00432d13e93d763b8729b8a00539\",\"dweb:/ipfs/QmTQsVgdBtuLYC4fSSRNWHCbpGkMiSeETbMfRvxAzGoczb\"]},\"vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf7a52b7d3a7b79117544d6bbeb8564bd22c760c4937d69914b99641a957a8f2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b5afd167693d0e80d30d0f50b718b5df237c97d721383b97154049cabab1128\",\"dweb:/ipfs/QmZpVB96pJpaJmmnqB1RC3qSZk8upgLL22YZtq97JzpK5H\"]},\"vendor/openzeppelin-solidity/v4.8.0/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xca8a1e219f7a427d02b93efd7a4f9ecd76a2e6776b5e196df0a5e4ccc175187b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53eb5ae6a9225130a6b4efc4cad8cc9fff2992e3a95bc1ed518dcb9db965e969\",\"dweb:/ipfs/QmSkLFh7WUYVr8VLkth7RaRQ5siQSw6P45Dc3KT2hFhNnX\"]},\"vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xd1668d9229b21a4630535ca2100c61e4a2905ea7e4e6077c27dfd1caa7d467ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6558c79b0459e0d8f98954af7f1fadf1c5c7809a873742e05ea3f88a5edcc20\",\"dweb:/ipfs/QmaY29cBPKADz8PqyR2M72QLqUgY7o3EYCwQknzpj9u6Da\"]},\"vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":{\"keccak256\":\"0xf77cae3ecd8776056d3d2ceb7b6958d757c6a9825b58665f82d38dbec2f695e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://489b9773cb0ef1d391727d0fea532c94228d0a55051d212c434df404a26a849b\",\"dweb:/ipfs/QmQnapN26it7QbPUrjwbMEeEP8QBtppZwfMkjbHBesKAbF\"]},\"vendor/openzeppelin-solidity/v4.8.0/utils/Context.sol\":{\"keccak256\":\"0xd79a77ff36548f48763b53648e02b983e8297f5d93102b026154a23667c28931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c8bc3433c54bbb9d7cd61f7958e3cd8004383e242285471c23475ddb751196d\",\"dweb:/ipfs/QmSf1dt6GThXUNfEcUvnwHoAoJQZWMQBbqCSg7D6UL2aHa\"]},\"vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xac7a4bfe791ee9fe125cac5cd25795b326433e5cf2bdd6b02ad6ad42c2d126a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e49bdba6c6013040eb546db3bbceca7d2c8ac86a2c15ff2c85eacd0ed8541271\",\"dweb:/ipfs/QmYa5en1yth7SdJfq9M7mcwDJJvy3996PSEjiwzgH1HvJW\"]},\"vendor/openzeppelin-solidity/v4.8.0/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xa7a4cdd312769aad895841037e16a97caccb0eb0125b4543bec4d2f5f23ade25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://072861cb9eedb2eb05863773c9b7501bd5999a165ffef701244441a793a6a929\",\"dweb:/ipfs/QmVxj7PTnAz6gRa6pB8ozxexhR8F7tMvF5V9mYMa24T7LZ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "struct RateLimiter.Config",
              "name": "rateLimiterConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BucketOverfilled"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "capacity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "requested",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ConsumingMoreThanMaxCapacity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientLiquidity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NullAddressNotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PermissionsError"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "waitInSeconds",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "RateLimitReached"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WithdrawalTooHigh"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Burned",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "provider",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "LiquidityAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "provider",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "LiquidityRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Locked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Minted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "onRamp",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "allowed",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OffRampAllowanceSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "onRamp",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "allowed",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OnRampAllowanceSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferRequested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Released",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addLiquidity"
        },
        {
          "inputs": [
            {
              "internalType": "struct TokenPool.RampUpdate[]",
              "name": "onRamps",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "ramp",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "allowed",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "struct TokenPool.RampUpdate[]",
              "name": "offRamps",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "ramp",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "allowed",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "applyRampUpdates"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currentRateLimiterState",
          "outputs": [
            {
              "internalType": "struct RateLimiter.TokenBucket",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "tokens",
                  "type": "uint128"
                },
                {
                  "internalType": "uint32",
                  "name": "lastUpdated",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "provider",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProvidedLiquidity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "offRamp",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOffRamp",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "onRamp",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOnRamp",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lockOrBurn"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "releaseOrMint"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLiquidity"
        },
        {
          "inputs": [
            {
              "internalType": "struct RateLimiter.Config",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "isEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "uint128",
                  "name": "capacity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "rate",
                  "type": "uint128"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRateLimiterConfig"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addLiquidity(uint256)": {
            "params": {
              "amount": "The amount of liquidity to provide."
            }
          },
          "applyRampUpdates((address,bool)[],(address,bool)[])": {
            "details": "Only callable by the owner",
            "params": {
              "offRamps": "A list of offRamps and their new permission status",
              "onRamps": "A list of onRamps and their new permission status"
            }
          },
          "currentRateLimiterState()": {
            "returns": {
              "_0": "The token bucket."
            }
          },
          "getProvidedLiquidity(address)": {
            "params": {
              "provider": "The address for which to get the balance."
            },
            "returns": {
              "_0": "The current provided liquidity."
            }
          },
          "getToken()": {
            "returns": {
              "token": "The IERC20 token representation."
            }
          },
          "isOffRamp(address)": {
            "returns": {
              "_0": "true is the given address is a permissioned offRamp."
            }
          },
          "isOnRamp(address)": {
            "returns": {
              "_0": "true if the given address is a permissioned onRamp."
            }
          },
          "lockOrBurn(address,bytes,uint256,uint64,bytes)": {
            "details": "Locks are not rate limited at per-pool level. Each pool is shared across lanes, rate limiting locks does not meaningfully mitigate honeypot risk. Benefits of rate limiting here does not justify the extra gas cost.",
            "params": {
              "amount": "Amount to lock"
            }
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "releaseOrMint(bytes,address,uint256,uint64,bytes)": {
            "params": {
              "amount": "Amount to release",
              "receiver": "Recipient address"
            }
          },
          "removeLiquidity(uint256)": {
            "params": {
              "amount": "The amount of liquidity to remove."
            }
          },
          "setRateLimiterConfig((bool,uint128,uint128))": {
            "details": "should only be callable by the owner or token limit admin.",
            "params": {
              "config": "The new rate limiter config."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "acceptOwnership()": {
            "notice": "Allows an ownership transfer to be completed by the recipient."
          },
          "addLiquidity(uint256)": {
            "notice": "Adds liquidity to the pool. The tokens should be approved first."
          },
          "applyRampUpdates((address,bool)[],(address,bool)[])": {
            "notice": "Sets permissions for all on and offRamps."
          },
          "currentRateLimiterState()": {
            "notice": "Gets the token bucket with its values for the block it was requested at."
          },
          "getProvidedLiquidity(address)": {
            "notice": "Gets the amount of provided liquidity for a given address."
          },
          "getToken()": {
            "notice": "Gets the IERC20 token that this pool can lock or burn."
          },
          "isOffRamp(address)": {
            "notice": "Checks whether something is a permissioned offRamp on this contract."
          },
          "isOnRamp(address)": {
            "notice": "Checks whether something is a permissioned onRamp on this contract."
          },
          "lockOrBurn(address,bytes,uint256,uint64,bytes)": {
            "notice": "Locks the token in the pool"
          },
          "owner()": {
            "notice": "Get the current owner"
          },
          "pause()": {
            "notice": "Pauses the token pool."
          },
          "releaseOrMint(bytes,address,uint256,uint64,bytes)": {
            "notice": "Release tokens from the pool to the recipient"
          },
          "removeLiquidity(uint256)": {
            "notice": "Removed liquidity to the pool. The tokens will be sent to msg.sender."
          },
          "setRateLimiterConfig((bool,uint128,uint128))": {
            "notice": "Sets the rate limited config."
          },
          "transferOwnership(address)": {
            "notice": "Allows an owner to begin transferring ownership to a new address, pending."
          },
          "unpause()": {
            "notice": "Unpauses the token pool."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [],
      "optimizer": {
        "enabled": true,
        "runs": 30000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/pools/LockReleaseTokenPool.sol": "LockReleaseTokenPool"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/OwnerIsCreator.sol": {
        "keccak256": "0xb9a890795a532c39766da1c6e8ef202e7bfc39e1a5deef36503be4fcdd360e2f",
        "urls": [
          "bzz-raw://2112758933edb2f9dc368a4d426f5db9d3556d9592d68fa37f83c5946f985fe9",
          "dweb:/ipfs/QmV36JwTwSSrAgt5zvPiuo1NhVWacokJKrtHqVVBePUNFo"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/interfaces/pools/IPool.sol": {
        "keccak256": "0x8e3209bf472b101ee7876ae53cc31bf348c4792e11380b79a53a6b596a1008d1",
        "urls": [
          "bzz-raw://36cd8e5d36825dbd2cf0683510a4e45cb857a8b7b447bad217a9f0d5cc738d4b",
          "dweb:/ipfs/QmRDV3VgmdHmo9Bnyri8ePwN2zDNapgpDbhNKNHPiEVpFK"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/libraries/Client.sol": {
        "keccak256": "0xf2616f59db15ba0493e4ce3514ea0655cbc9b65ee754e7fc012fe19752659574",
        "urls": [
          "bzz-raw://3ebc41940d13751005c195f743f5f22cc1e7b98f6d72cc10116b4853b5ac9837",
          "dweb:/ipfs/QmNweYHQHsTLWFa9cy8XJgxFRgH97XLAGxPw3k8diwrTj6"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/libraries/RateLimiter.sol": {
        "keccak256": "0xbd8f971d35bc5ad464b48277220c3ab0f57198fb3bf27959d1d8b8c6fc187aad",
        "urls": [
          "bzz-raw://9f1b60b876887943f880d033341b70f513f3e77bfd68c875920df8f57a84e1e0",
          "dweb:/ipfs/QmYVt4qGACebfu4BMNpwhcerWbiLmw6jFTddwYYqfoMDCa"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/pools/LockReleaseTokenPool.sol": {
        "keccak256": "0xd8269f3848d3e3a0d9525f6a23bec4383247d14db9069cd23311a86bfe43de63",
        "urls": [
          "bzz-raw://568cc93057cb0ff87fd1a2636567667bd5101d17dd80aecf03e026330a5fc343",
          "dweb:/ipfs/QmcX4PFCUUdpdo8Dr1taKabgGBkE2wUfD6ZjanM3wU818X"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/pools/TokenPool.sol": {
        "keccak256": "0x294306cef2b7f179e75d12345248e7f7c45809780a9ef2c61348e961d1ea756e",
        "urls": [
          "bzz-raw://4cffc3ac92379d95324538fa494cf4224b407afdea9d5f63a0e98d2d468b4c70",
          "dweb:/ipfs/QmakbAigzsqs24JDydh9XpRyGGrSVnCwtFjUh4URa47CgZ"
        ],
        "license": "BUSL-1.1"
      },
      "libraries/internal/ConfirmedOwner.sol": {
        "keccak256": "0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72",
        "urls": [
          "bzz-raw://af0371c1af45db651823b9a3d5af761b08243c78f105166342eee28de356c8dd",
          "dweb:/ipfs/QmPnC9qNDKwJFd5unwLb9pxjrutoe8MWjm5EXHTxq2kJ4x"
        ],
        "license": "MIT"
      },
      "libraries/internal/ConfirmedOwnerWithProposal.sol": {
        "keccak256": "0xa2f137a1d066795aeac76226e58f33c982278cdd34b4f09e5a2243d5a0924654",
        "urls": [
          "bzz-raw://a73f185d79d82e6d9baa531d55ffb88c80def1f6187dff93d3df6b2cb5ab7187",
          "dweb:/ipfs/QmVZEePJvcN1KxSTaD5rhKhaMBWHqs6ZeZ5s17Ft6mR5hJ"
        ],
        "license": "MIT"
      },
      "libraries/internal/interfaces/OwnableInterface.sol": {
        "keccak256": "0xb8b3a97783dddc198b790c4cec1eda7fb47aa38cbaea6555220d0ed8c735c086",
        "urls": [
          "bzz-raw://acf7ed6aff47fbddeff1b85e1225a717dfa8bfb3ab89db0e6564346afcf03693",
          "dweb:/ipfs/QmQQn5sKn1ARbt1WhYoHwfTJhK8fbQi8MbDQeHxGXTPbPE"
        ],
        "license": "MIT"
      },
      "vendor/openzeppelin-solidity/v4.8.0/security/Pausable.sol": {
        "keccak256": "0x5978f41f111faebf93f1662d7b9ecea6f3f301ac1f6e51dd30a54c8754ecddba",
        "urls": [
          "bzz-raw://7a18930b6432dc69f5ea681452293746262f00432d13e93d763b8729b8a00539",
          "dweb:/ipfs/QmTQsVgdBtuLYC4fSSRNWHCbpGkMiSeETbMfRvxAzGoczb"
        ],
        "license": "MIT"
      },
      "vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol": {
        "keccak256": "0xf7a52b7d3a7b79117544d6bbeb8564bd22c760c4937d69914b99641a957a8f2a",
        "urls": [
          "bzz-raw://2b5afd167693d0e80d30d0f50b718b5df237c97d721383b97154049cabab1128",
          "dweb:/ipfs/QmZpVB96pJpaJmmnqB1RC3qSZk8upgLL22YZtq97JzpK5H"
        ],
        "license": "MIT"
      },
      "vendor/openzeppelin-solidity/v4.8.0/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xca8a1e219f7a427d02b93efd7a4f9ecd76a2e6776b5e196df0a5e4ccc175187b",
        "urls": [
          "bzz-raw://53eb5ae6a9225130a6b4efc4cad8cc9fff2992e3a95bc1ed518dcb9db965e969",
          "dweb:/ipfs/QmSkLFh7WUYVr8VLkth7RaRQ5siQSw6P45Dc3KT2hFhNnX"
        ],
        "license": "MIT"
      },
      "vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xd1668d9229b21a4630535ca2100c61e4a2905ea7e4e6077c27dfd1caa7d467ef",
        "urls": [
          "bzz-raw://b6558c79b0459e0d8f98954af7f1fadf1c5c7809a873742e05ea3f88a5edcc20",
          "dweb:/ipfs/QmaY29cBPKADz8PqyR2M72QLqUgY7o3EYCwQknzpj9u6Da"
        ],
        "license": "MIT"
      },
      "vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol": {
        "keccak256": "0xf77cae3ecd8776056d3d2ceb7b6958d757c6a9825b58665f82d38dbec2f695e5",
        "urls": [
          "bzz-raw://489b9773cb0ef1d391727d0fea532c94228d0a55051d212c434df404a26a849b",
          "dweb:/ipfs/QmQnapN26it7QbPUrjwbMEeEP8QBtppZwfMkjbHBesKAbF"
        ],
        "license": "MIT"
      },
      "vendor/openzeppelin-solidity/v4.8.0/utils/Context.sol": {
        "keccak256": "0xd79a77ff36548f48763b53648e02b983e8297f5d93102b026154a23667c28931",
        "urls": [
          "bzz-raw://1c8bc3433c54bbb9d7cd61f7958e3cd8004383e242285471c23475ddb751196d",
          "dweb:/ipfs/QmSf1dt6GThXUNfEcUvnwHoAoJQZWMQBbqCSg7D6UL2aHa"
        ],
        "license": "MIT"
      },
      "vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol": {
        "keccak256": "0xac7a4bfe791ee9fe125cac5cd25795b326433e5cf2bdd6b02ad6ad42c2d126a5",
        "urls": [
          "bzz-raw://e49bdba6c6013040eb546db3bbceca7d2c8ac86a2c15ff2c85eacd0ed8541271",
          "dweb:/ipfs/QmYa5en1yth7SdJfq9M7mcwDJJvy3996PSEjiwzgH1HvJW"
        ],
        "license": "MIT"
      },
      "vendor/openzeppelin-solidity/v4.8.0/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xa7a4cdd312769aad895841037e16a97caccb0eb0125b4543bec4d2f5f23ade25",
        "urls": [
          "bzz-raw://072861cb9eedb2eb05863773c9b7501bd5999a165ffef701244441a793a6a929",
          "dweb:/ipfs/QmVxj7PTnAz6gRa6pB8ozxexhR8F7tMvF5V9mYMa24T7LZ"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/pools/LockReleaseTokenPool.sol",
    "id": 12123,
    "exportedSymbols": {
      "IERC20": [
        15121
      ],
      "LockReleaseTokenPool": [
        12122
      ],
      "RateLimiter": [
        6367
      ],
      "SafeERC20": [
        15507
      ],
      "TokenPool": [
        12714
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:3278:36",
    "nodes": [
      {
        "id": 11912,
        "nodeType": "PragmaDirective",
        "src": "37:23:36",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 11914,
        "nodeType": "ImportDirective",
        "src": "62:42:36",
        "nodes": [],
        "absolutePath": "contracts/pools/TokenPool.sol",
        "file": "./TokenPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12123,
        "sourceUnit": 12715,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11913,
              "name": "TokenPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12714,
              "src": "70:9:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11916,
        "nodeType": "ImportDirective",
        "src": "105:57:36",
        "nodes": [],
        "absolutePath": "contracts/libraries/RateLimiter.sol",
        "file": "../libraries/RateLimiter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12123,
        "sourceUnit": 6368,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11915,
              "name": "RateLimiter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6367,
              "src": "113:11:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11918,
        "nodeType": "ImportDirective",
        "src": "164:88:36",
        "nodes": [],
        "absolutePath": "vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol",
        "file": "../../vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12123,
        "sourceUnit": 15122,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11917,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 15121,
              "src": "172:6:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11920,
        "nodeType": "ImportDirective",
        "src": "253:100:36",
        "nodes": [],
        "absolutePath": "vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol",
        "file": "../../vendor/openzeppelin-solidity/v4.8.0/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12123,
        "sourceUnit": 15508,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11919,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 15507,
              "src": "261:9:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12122,
        "nodeType": "ContractDefinition",
        "src": "702:2612:36",
        "nodes": [
          {
            "id": 11927,
            "nodeType": "UsingForDirective",
            "src": "749:27:36",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 11924,
              "name": "SafeERC20",
              "nameLocations": [
                "755:9:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15507,
              "src": "755:9:36"
            },
            "typeName": {
              "id": 11926,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11925,
                "name": "IERC20",
                "nameLocations": [
                  "769:6:36"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 15121,
                "src": "769:6:36"
              },
              "referencedDeclaration": 15121,
              "src": "769:6:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$15121",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 11933,
            "nodeType": "EventDefinition",
            "src": "780:71:36",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "c17cea59c2955cb181b03393209566960365771dbba9dc3d510180e7cb312088",
            "name": "LiquidityAdded",
            "nameLocation": "786:14:36",
            "parameters": {
              "id": 11932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11929,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "817:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11933,
                  "src": "801:24:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11928,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "801:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11931,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "843:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11933,
                  "src": "827:22:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11930,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "827:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "800:50:36"
            }
          },
          {
            "id": 11939,
            "nodeType": "EventDefinition",
            "src": "854:73:36",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "c2c3f06e49b9f15e7b4af9055e183b0d73362e033ad82a07dec9bf9840171719",
            "name": "LiquidityRemoved",
            "nameLocation": "860:16:36",
            "parameters": {
              "id": 11938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11935,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "893:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11939,
                  "src": "877:24:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11934,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "877:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11937,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "919:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11939,
                  "src": "903:22:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11936,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "903:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "876:50:36"
            }
          },
          {
            "id": 11941,
            "nodeType": "ErrorDefinition",
            "src": "931:30:36",
            "nodes": [],
            "errorSelector": "bb55fd27",
            "name": "InsufficientLiquidity",
            "nameLocation": "937:21:36",
            "parameters": {
              "id": 11940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "958:2:36"
            }
          },
          {
            "id": 11943,
            "nodeType": "ErrorDefinition",
            "src": "964:26:36",
            "nodes": [],
            "errorSelector": "69820120",
            "name": "WithdrawalTooHigh",
            "nameLocation": "970:17:36",
            "parameters": {
              "id": 11942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "987:2:36"
            }
          },
          {
            "id": 11947,
            "nodeType": "VariableDeclaration",
            "src": "994:64:36",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_liquidityProviderBalances",
            "nameLocation": "1031:27:36",
            "scope": 12122,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 11946,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 11944,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1002:7:36",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "994:27:36",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 11945,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1013:7:36",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 11961,
            "nodeType": "FunctionDefinition",
            "src": "1063:109:36",
            "nodes": [],
            "body": {
              "id": 11960,
              "nodeType": "Block",
              "src": "1170:2:36",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 11956,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11950,
                    "src": "1144:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$15121",
                      "typeString": "contract IERC20"
                    }
                  },
                  {
                    "id": 11957,
                    "name": "rateLimiterConfig",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11953,
                    "src": "1151:17:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Config_$6069_memory_ptr",
                      "typeString": "struct RateLimiter.Config memory"
                    }
                  }
                ],
                "id": 11958,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 11955,
                  "name": "TokenPool",
                  "nameLocations": [
                    "1134:9:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12714,
                  "src": "1134:9:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "1134:35:36"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 11954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11950,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1082:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11961,
                  "src": "1075:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$15121",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11949,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11948,
                      "name": "IERC20",
                      "nameLocations": [
                        "1075:6:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 15121,
                      "src": "1075:6:36"
                    },
                    "referencedDeclaration": 15121,
                    "src": "1075:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$15121",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11953,
                  "mutability": "mutable",
                  "name": "rateLimiterConfig",
                  "nameLocation": "1115:17:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11961,
                  "src": "1089:43:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Config_$6069_memory_ptr",
                    "typeString": "struct RateLimiter.Config"
                  },
                  "typeName": {
                    "id": 11952,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11951,
                      "name": "RateLimiter.Config",
                      "nameLocations": [
                        "1089:11:36",
                        "1101:6:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6069,
                      "src": "1089:18:36"
                    },
                    "referencedDeclaration": 6069,
                    "src": "1089:18:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Config_$6069_storage_ptr",
                      "typeString": "struct RateLimiter.Config"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1074:59:36"
            },
            "returnParameters": {
              "id": 11959,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1170:0:36"
            },
            "scope": 12122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 11987,
            "nodeType": "FunctionDefinition",
            "src": "1490:194:36",
            "nodes": [],
            "body": {
              "id": 11986,
              "nodeType": "Block",
              "src": "1642:42:36",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11981,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1660:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1664:6:36",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1660:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11983,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11968,
                        "src": "1672:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11980,
                      "name": "Locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12357,
                      "src": "1653:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 11984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1653:26:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11985,
                  "nodeType": "EmitStatement",
                  "src": "1648:31:36"
                }
              ]
            },
            "baseFunctions": [
              5589
            ],
            "documentation": {
              "id": 11962,
              "nodeType": "StructuredDocumentation",
              "src": "1176:311:36",
              "text": "@notice Locks the token in the pool\n @dev Locks are not rate limited at per-pool level. Each pool is shared across lanes,\n rate limiting locks does not meaningfully mitigate honeypot risk.\n Benefits of rate limiting here does not justify the extra gas cost.\n @param amount Amount to lock"
            },
            "functionSelector": "96875445",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11976,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11975,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "1617:13:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14383,
                  "src": "1617:13:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "1617:13:36"
              },
              {
                "id": 11978,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11977,
                  "name": "onlyOnRamp",
                  "nameLocations": [
                    "1631:10:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12679,
                  "src": "1631:10:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "1631:10:36"
              }
            ],
            "name": "lockOrBurn",
            "nameLocation": "1499:10:36",
            "overrides": {
              "id": 11974,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1608:8:36"
            },
            "parameters": {
              "id": 11973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11964,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11987,
                  "src": "1515:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1515:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11966,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11987,
                  "src": "1528:14:36",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11965,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1528:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11968,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1556:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11987,
                  "src": "1548:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1548:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11970,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11987,
                  "src": "1568:6:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 11969,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1568:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11972,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11987,
                  "src": "1580:14:36",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11971,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1580:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1509:89:36"
            },
            "returnParameters": {
              "id": 11979,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1642:0:36"
            },
            "scope": 12122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12025,
            "nodeType": "FunctionDefinition",
            "src": "1826:293:36",
            "nodes": [],
            "body": {
              "id": 12024,
              "nodeType": "Block",
              "src": "1987:132:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12007,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11994,
                        "src": "2011:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12006,
                      "name": "_consumeRateLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12637,
                      "src": "1993:17:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 12008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1993:25:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12009,
                  "nodeType": "ExpressionStatement",
                  "src": "1993:25:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12013,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11992,
                        "src": "2048:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12014,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11994,
                        "src": "2058:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 12010,
                          "name": "getToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12465,
                          "src": "2024:8:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$15121_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 12011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2024:10:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$15121",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 12012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2035:12:36",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15258,
                      "src": "2024:23:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$15121_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$15121_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 12015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2024:41:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12016,
                  "nodeType": "ExpressionStatement",
                  "src": "2024:41:36"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12018,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2085:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2089:6:36",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2085:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12020,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11992,
                        "src": "2097:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12021,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11994,
                        "src": "2107:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12017,
                      "name": "Released",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12371,
                      "src": "2076:8:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 12022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2076:38:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12023,
                  "nodeType": "EmitStatement",
                  "src": "2071:43:36"
                }
              ]
            },
            "baseFunctions": [
              5603
            ],
            "documentation": {
              "id": 11988,
              "nodeType": "StructuredDocumentation",
              "src": "1688:135:36",
              "text": "@notice Release tokens from the pool to the recipient\n @param receiver Recipient address\n @param amount Amount to release"
            },
            "functionSelector": "8627fad6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12002,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12001,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "1961:13:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14383,
                  "src": "1961:13:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "1961:13:36"
              },
              {
                "id": 12004,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12003,
                  "name": "onlyOffRamp",
                  "nameLocations": [
                    "1975:11:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12693,
                  "src": "1975:11:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "1975:11:36"
              }
            ],
            "name": "releaseOrMint",
            "nameLocation": "1835:13:36",
            "overrides": {
              "id": 12000,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1952:8:36"
            },
            "parameters": {
              "id": 11999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11990,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12025,
                  "src": "1854:12:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11989,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1854:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11992,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1880:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 12025,
                  "src": "1872:16:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11991,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1872:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11994,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1902:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 12025,
                  "src": "1894:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11993,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1894:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11996,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12025,
                  "src": "1914:6:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 11995,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1914:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11998,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12025,
                  "src": "1926:12:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11997,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1926:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1848:94:36"
            },
            "returnParameters": {
              "id": 12005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1987:0:36"
            },
            "scope": 12122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12038,
            "nodeType": "FunctionDefinition",
            "src": "2306:135:36",
            "nodes": [],
            "body": {
              "id": 12037,
              "nodeType": "Block",
              "src": "2386:55:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 12033,
                      "name": "s_liquidityProviderBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11947,
                      "src": "2399:27:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 12035,
                    "indexExpression": {
                      "id": 12034,
                      "name": "provider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12028,
                      "src": "2427:8:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2399:37:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12032,
                  "id": 12036,
                  "nodeType": "Return",
                  "src": "2392:44:36"
                }
              ]
            },
            "documentation": {
              "id": 12026,
              "nodeType": "StructuredDocumentation",
              "src": "2123:180:36",
              "text": "@notice Gets the amount of provided liquidity for a given address.\n @param provider The address for which to get the balance.\n @return The current provided liquidity."
            },
            "functionSelector": "56dd1e81",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProvidedLiquidity",
            "nameLocation": "2315:20:36",
            "parameters": {
              "id": 12029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12028,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "2344:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 12038,
                  "src": "2336:16:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12027,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2336:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2335:18:36"
            },
            "returnParameters": {
              "id": 12032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12031,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12038,
                  "src": "2377:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2377:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2376:9:36"
            },
            "scope": 12122,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12070,
            "nodeType": "FunctionDefinition",
            "src": "2580:217:36",
            "nodes": [],
            "body": {
              "id": 12069,
              "nodeType": "Block",
              "src": "2627:170:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12047,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2658:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2662:6:36",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2658:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 12051,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2678:4:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LockReleaseTokenPool_$12122",
                              "typeString": "contract LockReleaseTokenPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LockReleaseTokenPool_$12122",
                              "typeString": "contract LockReleaseTokenPool"
                            }
                          ],
                          "id": 12050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2670:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12049,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2670:7:36",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2670:13:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12053,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12041,
                        "src": "2685:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12044,
                        "name": "i_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12399,
                        "src": "2633:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$15121",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 12046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2641:16:36",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15284,
                      "src": "2633:24:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$15121_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$15121_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 12054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2633:59:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12055,
                  "nodeType": "ExpressionStatement",
                  "src": "2633:59:36"
                },
                {
                  "expression": {
                    "id": 12061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 12056,
                        "name": "s_liquidityProviderBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11947,
                        "src": "2698:27:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 12059,
                      "indexExpression": {
                        "expression": {
                          "id": 12057,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2726:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2730:6:36",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2726:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2698:39:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 12060,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12041,
                      "src": "2741:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2698:49:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12062,
                  "nodeType": "ExpressionStatement",
                  "src": "2698:49:36"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12064,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2773:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2777:6:36",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2773:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12066,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12041,
                        "src": "2785:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12063,
                      "name": "LiquidityAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11933,
                      "src": "2758:14:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2758:34:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12068,
                  "nodeType": "EmitStatement",
                  "src": "2753:39:36"
                }
              ]
            },
            "documentation": {
              "id": 12039,
              "nodeType": "StructuredDocumentation",
              "src": "2445:132:36",
              "text": "@notice Adds liquidity to the pool. The tokens should be approved first.\n @param amount The amount of liquidity to provide."
            },
            "functionSelector": "51c6590a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidity",
            "nameLocation": "2589:12:36",
            "parameters": {
              "id": 12042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12041,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2610:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 12070,
                  "src": "2602:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2602:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2601:16:36"
            },
            "returnParameters": {
              "id": 12043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2627:0:36"
            },
            "scope": 12122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 12121,
            "nodeType": "FunctionDefinition",
            "src": "2940:372:36",
            "nodes": [],
            "body": {
              "id": 12120,
              "nodeType": "Block",
              "src": "2990:322:36",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 12076,
                        "name": "s_liquidityProviderBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11947,
                        "src": "3000:27:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 12079,
                      "indexExpression": {
                        "expression": {
                          "id": 12077,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3028:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3032:6:36",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3028:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3000:39:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 12080,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12073,
                      "src": "3042:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3000:48:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12085,
                  "nodeType": "IfStatement",
                  "src": "2996:80:36",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 12082,
                        "name": "WithdrawalTooHigh",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11943,
                        "src": "3057:17:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 12083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3057:19:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 12084,
                    "nodeType": "RevertStatement",
                    "src": "3050:26:36"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 12090,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3112:4:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LockReleaseTokenPool_$12122",
                                "typeString": "contract LockReleaseTokenPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LockReleaseTokenPool_$12122",
                                "typeString": "contract LockReleaseTokenPool"
                              }
                            ],
                            "id": 12089,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3104:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 12088,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3104:7:36",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 12091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3104:13:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 12086,
                          "name": "i_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12399,
                          "src": "3086:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$15121",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 12087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3094:9:36",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15078,
                        "src": "3086:17:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 12092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3086:32:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 12093,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12073,
                      "src": "3121:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3086:41:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12098,
                  "nodeType": "IfStatement",
                  "src": "3082:77:36",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 12095,
                        "name": "InsufficientLiquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11941,
                        "src": "3136:21:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 12096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3136:23:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 12097,
                    "nodeType": "RevertStatement",
                    "src": "3129:30:36"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12102,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3186:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3190:6:36",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3186:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12104,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12073,
                        "src": "3198:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12099,
                        "name": "i_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12399,
                        "src": "3165:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$15121",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 12101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3173:12:36",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15258,
                      "src": "3165:20:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$15121_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$15121_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 12105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3165:40:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12106,
                  "nodeType": "ExpressionStatement",
                  "src": "3165:40:36"
                },
                {
                  "expression": {
                    "id": 12112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 12107,
                        "name": "s_liquidityProviderBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11947,
                        "src": "3211:27:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 12110,
                      "indexExpression": {
                        "expression": {
                          "id": 12108,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3239:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3243:6:36",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3239:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3211:39:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 12111,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12073,
                      "src": "3254:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3211:49:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12113,
                  "nodeType": "ExpressionStatement",
                  "src": "3211:49:36"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12115,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3288:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3292:6:36",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3288:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12117,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12073,
                        "src": "3300:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12114,
                      "name": "LiquidityRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11939,
                      "src": "3271:16:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 12118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3271:36:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12119,
                  "nodeType": "EmitStatement",
                  "src": "3266:41:36"
                }
              ]
            },
            "documentation": {
              "id": 12071,
              "nodeType": "StructuredDocumentation",
              "src": "2801:136:36",
              "text": "@notice Removed liquidity to the pool. The tokens will be sent to msg.sender.\n @param amount The amount of liquidity to remove."
            },
            "functionSelector": "9c8f9f23",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeLiquidity",
            "nameLocation": "2949:15:36",
            "parameters": {
              "id": 12074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12073,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2973:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 12121,
                  "src": "2965:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12072,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2965:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2964:16:36"
            },
            "returnParameters": {
              "id": 12075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2990:0:36"
            },
            "scope": 12122,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11922,
              "name": "TokenPool",
              "nameLocations": [
                "735:9:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12714,
              "src": "735:9:36"
            },
            "id": 11923,
            "nodeType": "InheritanceSpecifier",
            "src": "735:9:36"
          }
        ],
        "canonicalName": "LockReleaseTokenPool",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11921,
          "nodeType": "StructuredDocumentation",
          "src": "355:347:36",
          "text": "@notice Token pool used for tokens on their native chain. This uses a lock and release mechanism.\n Because of lock/unlock requiring liquidity, this pool contract also has function to add and remove\n liquidity. This allows for proper bookkeeping for both user and liquidity provider balances.\n @dev One token per LockReleaseTokenPool."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          12122,
          12714,
          16318,
          14456,
          15859,
          2639,
          13425,
          13587,
          13809,
          5611
        ],
        "name": "LockReleaseTokenPool",
        "nameLocation": "711:20:36",
        "scope": 12123,
        "usedErrors": [
          6030,
          6036,
          6040,
          11941,
          11943,
          12349,
          12351
        ]
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 36
}