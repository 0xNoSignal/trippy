{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "pool",
              "type": "address"
            }
          ],
          "internalType": "struct Internal.PoolUpdate[]",
          "name": "adds",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "pool",
              "type": "address"
            }
          ],
          "internalType": "struct Internal.PoolUpdate[]",
          "name": "removes",
          "type": "tuple[]"
        }
      ],
      "name": "applyPoolUpdates",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "receiver",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "tokenAmounts",
              "type": "tuple[]"
            },
            {
              "internalType": "address",
              "name": "feeToken",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "extraArgs",
              "type": "bytes"
            }
          ],
          "internalType": "struct Client.EVM2AnyMessage",
          "name": "message",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "feeTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "originalSender",
          "type": "address"
        }
      ],
      "name": "forwardFromRouter",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExpectedNextSequenceNumber",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "receiver",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "tokenAmounts",
              "type": "tuple[]"
            },
            {
              "internalType": "address",
              "name": "feeToken",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "extraArgs",
              "type": "bytes"
            }
          ],
          "internalType": "struct Client.EVM2AnyMessage",
          "name": "message",
          "type": "tuple"
        }
      ],
      "name": "getFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "sourceToken",
          "type": "address"
        }
      ],
      "name": "getPoolBySourceToken",
      "outputs": [
        {
          "internalType": "contract IPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "getSenderNonce",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSupportedTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "applyPoolUpdates((address,address)[],(address,address)[])": "3a87ac53",
    "forwardFromRouter((bytes,bytes,(address,uint256)[],address,bytes),uint256,address)": "a7d3e02f",
    "getExpectedNextSequenceNumber()": "4120fccd",
    "getFee((bytes,bytes,(address,uint256)[],address,bytes))": "38724a95",
    "getPoolBySourceToken(address)": "5d86f141",
    "getSenderNonce(address)": "856c8247",
    "getSupportedTokens()": "d3c7c2c7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"internalType\":\"struct Internal.PoolUpdate[]\",\"name\":\"adds\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"internalType\":\"struct Internal.PoolUpdate[]\",\"name\":\"removes\",\"type\":\"tuple[]\"}],\"name\":\"applyPoolUpdates\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"receiver\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"tokenAmounts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"internalType\":\"struct Client.EVM2AnyMessage\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"feeTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"originalSender\",\"type\":\"address\"}],\"name\":\"forwardFromRouter\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExpectedNextSequenceNumber\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"receiver\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"tokenAmounts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"internalType\":\"struct Client.EVM2AnyMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"sourceToken\",\"type\":\"address\"}],\"name\":\"getPoolBySourceToken\",\"outputs\":[{\"internalType\":\"contract IPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"getSenderNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"applyPoolUpdates((address,address)[],(address,address)[])\":{\"params\":{\"adds\":\"The tokens and pools to be added.\",\"removes\":\"The tokens and pools to be removed\"}},\"forwardFromRouter((bytes,bytes,(address,uint256)[],address,bytes),uint256,address)\":{\"details\":\"only callable by the Routerapprove() must have already been called on the token using the this ramp address as the spender.if the contract is paused, this function will revert.\",\"params\":{\"message\":\"Message struct to send\",\"originalSender\":\"The original initiator of the CCIP request\"}},\"getExpectedNextSequenceNumber()\":{\"returns\":{\"_0\":\"the next sequence number to be used\"}},\"getFee((bytes,bytes,(address,uint256)[],address,bytes))\":{\"params\":{\"message\":\"The message to calculate the cost for\"},\"returns\":{\"fee\":\"The calculated fee\"}},\"getPoolBySourceToken(address)\":{\"params\":{\"sourceToken\":\"The source chain token to get the pool for\"},\"returns\":{\"_0\":\"pool Token pool\"}},\"getSenderNonce(address)\":{\"params\":{\"sender\":\"The sender to get the nonce for\"},\"returns\":{\"nonce\":\"The next nonce for the sender\"}},\"getSupportedTokens()\":{\"returns\":{\"tokens\":\"The addresses of all tokens that this onRamp supports for sending.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"applyPoolUpdates((address,address)[],(address,address)[])\":{\"notice\":\"Adds and removed token pools.\"},\"forwardFromRouter((bytes,bytes,(address,uint256)[],address,bytes),uint256,address)\":{\"notice\":\"Send a message to the remote chain\"},\"getExpectedNextSequenceNumber()\":{\"notice\":\"Gets the next sequence number to be used in the onRamp\"},\"getFee((bytes,bytes,(address,uint256)[],address,bytes))\":{\"notice\":\"Get the fee for a given ccip message\"},\"getPoolBySourceToken(address)\":{\"notice\":\"Get the pool for a specific token\"},\"getSenderNonce(address)\":{\"notice\":\"Get the next nonce for a given sender\"},\"getSupportedTokens()\":{\"notice\":\"Gets a list of all supported source chain tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IEVM2AnyOnRamp.sol\":\"IEVM2AnyOnRamp\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":30000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IEVM2AnyOnRamp.sol\":{\"keccak256\":\"0x855c4ff608c47bf9aedd4f10b7b66b7770dd2e2d1c32721d5358af3e1240a7e9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6b37b65d38e2884c885d8a514ba0e6fe64e07cf9407c278e73e9d0f321e903d2\",\"dweb:/ipfs/QmQcBtmgUdc2gYzokEuFPsURSSTvVjEvxmY9zgvrMHEbH2\"]},\"contracts/interfaces/pools/IPool.sol\":{\"keccak256\":\"0x8e3209bf472b101ee7876ae53cc31bf348c4792e11380b79a53a6b596a1008d1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://36cd8e5d36825dbd2cf0683510a4e45cb857a8b7b447bad217a9f0d5cc738d4b\",\"dweb:/ipfs/QmRDV3VgmdHmo9Bnyri8ePwN2zDNapgpDbhNKNHPiEVpFK\"]},\"contracts/libraries/Client.sol\":{\"keccak256\":\"0xf2616f59db15ba0493e4ce3514ea0655cbc9b65ee754e7fc012fe19752659574\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3ebc41940d13751005c195f743f5f22cc1e7b98f6d72cc10116b4853b5ac9837\",\"dweb:/ipfs/QmNweYHQHsTLWFa9cy8XJgxFRgH97XLAGxPw3k8diwrTj6\"]},\"contracts/libraries/Internal.sol\":{\"keccak256\":\"0xc407f1489512ef93343ac01ed4b722f443b831abb94774f22f80d624a1c00866\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://acc89e538dac709aa4c168a787d497490b4639f8902d34a64ce69291d8dd2b1b\",\"dweb:/ipfs/QmTDSbiYUf9cs6yD5jMHmiFSSQSyzwH4yMsZ8v2PhSruU7\"]},\"contracts/libraries/MerkleMultiProof.sol\":{\"keccak256\":\"0xf790a5d6474b97967073c3594c91f32f39df3329922241a1a6c16d40ca1c56c7\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2648b6c6419109e99d3978632b6a534ec238f380284d4fb7da896f9b6c97add5\",\"dweb:/ipfs/QmS5MCzK8iuCNEZJeRXWdtjxMmNqtG6Yz873QtQt4EhWAP\"]},\"vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf7a52b7d3a7b79117544d6bbeb8564bd22c760c4937d69914b99641a957a8f2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b5afd167693d0e80d30d0f50b718b5df237c97d721383b97154049cabab1128\",\"dweb:/ipfs/QmZpVB96pJpaJmmnqB1RC3qSZk8upgLL22YZtq97JzpK5H\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct Internal.PoolUpdate[]",
              "name": "adds",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct Internal.PoolUpdate[]",
              "name": "removes",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "applyPoolUpdates"
        },
        {
          "inputs": [
            {
              "internalType": "struct Client.EVM2AnyMessage",
              "name": "message",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "receiver",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "struct Client.EVMTokenAmount[]",
                  "name": "tokenAmounts",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "feeToken",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "extraArgs",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "feeTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "originalSender",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "forwardFromRouter",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getExpectedNextSequenceNumber",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Client.EVM2AnyMessage",
              "name": "message",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "receiver",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "struct Client.EVMTokenAmount[]",
                  "name": "tokenAmounts",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "feeToken",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "extraArgs",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "sourceToken",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPoolBySourceToken",
          "outputs": [
            {
              "internalType": "contract IPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSenderNonce",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupportedTokens",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "applyPoolUpdates((address,address)[],(address,address)[])": {
            "params": {
              "adds": "The tokens and pools to be added.",
              "removes": "The tokens and pools to be removed"
            }
          },
          "forwardFromRouter((bytes,bytes,(address,uint256)[],address,bytes),uint256,address)": {
            "details": "only callable by the Routerapprove() must have already been called on the token using the this ramp address as the spender.if the contract is paused, this function will revert.",
            "params": {
              "message": "Message struct to send",
              "originalSender": "The original initiator of the CCIP request"
            }
          },
          "getExpectedNextSequenceNumber()": {
            "returns": {
              "_0": "the next sequence number to be used"
            }
          },
          "getFee((bytes,bytes,(address,uint256)[],address,bytes))": {
            "params": {
              "message": "The message to calculate the cost for"
            },
            "returns": {
              "fee": "The calculated fee"
            }
          },
          "getPoolBySourceToken(address)": {
            "params": {
              "sourceToken": "The source chain token to get the pool for"
            },
            "returns": {
              "_0": "pool Token pool"
            }
          },
          "getSenderNonce(address)": {
            "params": {
              "sender": "The sender to get the nonce for"
            },
            "returns": {
              "nonce": "The next nonce for the sender"
            }
          },
          "getSupportedTokens()": {
            "returns": {
              "tokens": "The addresses of all tokens that this onRamp supports for sending."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "applyPoolUpdates((address,address)[],(address,address)[])": {
            "notice": "Adds and removed token pools."
          },
          "forwardFromRouter((bytes,bytes,(address,uint256)[],address,bytes),uint256,address)": {
            "notice": "Send a message to the remote chain"
          },
          "getExpectedNextSequenceNumber()": {
            "notice": "Gets the next sequence number to be used in the onRamp"
          },
          "getFee((bytes,bytes,(address,uint256)[],address,bytes))": {
            "notice": "Get the fee for a given ccip message"
          },
          "getPoolBySourceToken(address)": {
            "notice": "Get the pool for a specific token"
          },
          "getSenderNonce(address)": {
            "notice": "Get the next nonce for a given sender"
          },
          "getSupportedTokens()": {
            "notice": "Gets a list of all supported source chain tokens."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [],
      "optimizer": {
        "enabled": true,
        "runs": 30000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/interfaces/IEVM2AnyOnRamp.sol": "IEVM2AnyOnRamp"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/IEVM2AnyOnRamp.sol": {
        "keccak256": "0x855c4ff608c47bf9aedd4f10b7b66b7770dd2e2d1c32721d5358af3e1240a7e9",
        "urls": [
          "bzz-raw://6b37b65d38e2884c885d8a514ba0e6fe64e07cf9407c278e73e9d0f321e903d2",
          "dweb:/ipfs/QmQcBtmgUdc2gYzokEuFPsURSSTvVjEvxmY9zgvrMHEbH2"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/interfaces/pools/IPool.sol": {
        "keccak256": "0x8e3209bf472b101ee7876ae53cc31bf348c4792e11380b79a53a6b596a1008d1",
        "urls": [
          "bzz-raw://36cd8e5d36825dbd2cf0683510a4e45cb857a8b7b447bad217a9f0d5cc738d4b",
          "dweb:/ipfs/QmRDV3VgmdHmo9Bnyri8ePwN2zDNapgpDbhNKNHPiEVpFK"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/libraries/Client.sol": {
        "keccak256": "0xf2616f59db15ba0493e4ce3514ea0655cbc9b65ee754e7fc012fe19752659574",
        "urls": [
          "bzz-raw://3ebc41940d13751005c195f743f5f22cc1e7b98f6d72cc10116b4853b5ac9837",
          "dweb:/ipfs/QmNweYHQHsTLWFa9cy8XJgxFRgH97XLAGxPw3k8diwrTj6"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/libraries/Internal.sol": {
        "keccak256": "0xc407f1489512ef93343ac01ed4b722f443b831abb94774f22f80d624a1c00866",
        "urls": [
          "bzz-raw://acc89e538dac709aa4c168a787d497490b4639f8902d34a64ce69291d8dd2b1b",
          "dweb:/ipfs/QmTDSbiYUf9cs6yD5jMHmiFSSQSyzwH4yMsZ8v2PhSruU7"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/libraries/MerkleMultiProof.sol": {
        "keccak256": "0xf790a5d6474b97967073c3594c91f32f39df3329922241a1a6c16d40ca1c56c7",
        "urls": [
          "bzz-raw://2648b6c6419109e99d3978632b6a534ec238f380284d4fb7da896f9b6c97add5",
          "dweb:/ipfs/QmS5MCzK8iuCNEZJeRXWdtjxMmNqtG6Yz873QtQt4EhWAP"
        ],
        "license": "BUSL-1.1"
      },
      "vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol": {
        "keccak256": "0xf7a52b7d3a7b79117544d6bbeb8564bd22c760c4937d69914b99641a957a8f2a",
        "urls": [
          "bzz-raw://2b5afd167693d0e80d30d0f50b718b5df237c97d721383b97154049cabab1128",
          "dweb:/ipfs/QmZpVB96pJpaJmmnqB1RC3qSZk8upgLL22YZtq97JzpK5H"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/interfaces/IEVM2AnyOnRamp.sol",
    "id": 5369,
    "exportedSymbols": {
      "Client": [
        5668
      ],
      "IERC20": [
        15121
      ],
      "IEVM2AnyOnRamp": [
        5368
      ],
      "IPool": [
        5611
      ],
      "Internal": [
        5831
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:2223:16",
    "nodes": [
      {
        "id": 5294,
        "nodeType": "PragmaDirective",
        "src": "37:23:16",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 5296,
        "nodeType": "ImportDirective",
        "src": "62:40:16",
        "nodes": [],
        "absolutePath": "contracts/interfaces/pools/IPool.sol",
        "file": "./pools/IPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5369,
        "sourceUnit": 5612,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5295,
              "name": "IPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5611,
              "src": "70:5:16",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5298,
        "nodeType": "ImportDirective",
        "src": "104:47:16",
        "nodes": [],
        "absolutePath": "contracts/libraries/Client.sol",
        "file": "../libraries/Client.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5369,
        "sourceUnit": 5669,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5297,
              "name": "Client",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5668,
              "src": "112:6:16",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5300,
        "nodeType": "ImportDirective",
        "src": "152:51:16",
        "nodes": [],
        "absolutePath": "contracts/libraries/Internal.sol",
        "file": "../libraries/Internal.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5369,
        "sourceUnit": 5832,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5299,
              "name": "Internal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5831,
              "src": "160:8:16",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5302,
        "nodeType": "ImportDirective",
        "src": "205:88:16",
        "nodes": [],
        "absolutePath": "vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol",
        "file": "../../vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5369,
        "sourceUnit": 15122,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5301,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 15121,
              "src": "213:6:16",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5368,
        "nodeType": "ContractDefinition",
        "src": "295:1964:16",
        "nodes": [
          {
            "id": 5311,
            "nodeType": "FunctionDefinition",
            "src": "471:92:16",
            "nodes": [],
            "documentation": {
              "id": 5303,
              "nodeType": "StructuredDocumentation",
              "src": "324:144:16",
              "text": "@notice Get the fee for a given ccip message\n @param message The message to calculate the cost for\n @return fee The calculated fee"
            },
            "functionSelector": "38724a95",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getFee",
            "nameLocation": "480:6:16",
            "parameters": {
              "id": 5307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5306,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "518:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5311,
                  "src": "487:38:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EVM2AnyMessage_$5644_calldata_ptr",
                    "typeString": "struct Client.EVM2AnyMessage"
                  },
                  "typeName": {
                    "id": 5305,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5304,
                      "name": "Client.EVM2AnyMessage",
                      "nameLocations": [
                        "487:6:16",
                        "494:14:16"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5644,
                      "src": "487:21:16"
                    },
                    "referencedDeclaration": 5644,
                    "src": "487:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EVM2AnyMessage_$5644_storage_ptr",
                      "typeString": "struct Client.EVM2AnyMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "486:40:16"
            },
            "returnParameters": {
              "id": 5310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5309,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "558:3:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5311,
                  "src": "550:11:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "549:13:16"
            },
            "scope": 5368,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5321,
            "nodeType": "FunctionDefinition",
            "src": "713:80:16",
            "nodes": [],
            "documentation": {
              "id": 5312,
              "nodeType": "StructuredDocumentation",
              "src": "567:143:16",
              "text": "@notice Get the pool for a specific token\n @param sourceToken The source chain token to get the pool for\n @return pool Token pool"
            },
            "functionSelector": "5d86f141",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPoolBySourceToken",
            "nameLocation": "722:20:16",
            "parameters": {
              "id": 5316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5315,
                  "mutability": "mutable",
                  "name": "sourceToken",
                  "nameLocation": "750:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5321,
                  "src": "743:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$15121",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 5314,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5313,
                      "name": "IERC20",
                      "nameLocations": [
                        "743:6:16"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 15121,
                      "src": "743:6:16"
                    },
                    "referencedDeclaration": 15121,
                    "src": "743:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$15121",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "742:20:16"
            },
            "returnParameters": {
              "id": 5320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5319,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5321,
                  "src": "786:5:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPool_$5611",
                    "typeString": "contract IPool"
                  },
                  "typeName": {
                    "id": 5318,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5317,
                      "name": "IPool",
                      "nameLocations": [
                        "786:5:16"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5611,
                      "src": "786:5:16"
                    },
                    "referencedDeclaration": 5611,
                    "src": "786:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPool_$5611",
                      "typeString": "contract IPool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "785:7:16"
            },
            "scope": 5368,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5328,
            "nodeType": "FunctionDefinition",
            "src": "949:78:16",
            "nodes": [],
            "documentation": {
              "id": 5322,
              "nodeType": "StructuredDocumentation",
              "src": "797:149:16",
              "text": "@notice Gets a list of all supported source chain tokens.\n @return tokens The addresses of all tokens that this onRamp supports for sending."
            },
            "functionSelector": "d3c7c2c7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getSupportedTokens",
            "nameLocation": "958:18:16",
            "parameters": {
              "id": 5323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "976:2:16"
            },
            "returnParameters": {
              "id": 5327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5326,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "1019:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5328,
                  "src": "1002:23:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5324,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1002:7:16",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5325,
                    "nodeType": "ArrayTypeName",
                    "src": "1002:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1001:25:16"
            },
            "scope": 5368,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5334,
            "nodeType": "FunctionDefinition",
            "src": "1150:72:16",
            "nodes": [],
            "documentation": {
              "id": 5329,
              "nodeType": "StructuredDocumentation",
              "src": "1031:116:16",
              "text": "@notice Gets the next sequence number to be used in the onRamp\n @return the next sequence number to be used"
            },
            "functionSelector": "4120fccd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getExpectedNextSequenceNumber",
            "nameLocation": "1159:29:16",
            "parameters": {
              "id": 5330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1188:2:16"
            },
            "returnParameters": {
              "id": 5333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5332,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5334,
                  "src": "1214:6:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 5331,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1214:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1213:8:16"
            },
            "scope": 5368,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5342,
            "nodeType": "FunctionDefinition",
            "src": "1380:77:16",
            "nodes": [],
            "documentation": {
              "id": 5335,
              "nodeType": "StructuredDocumentation",
              "src": "1226:151:16",
              "text": "@notice Get the next nonce for a given sender\n @param sender The sender to get the nonce for\n @return nonce The next nonce for the sender"
            },
            "functionSelector": "856c8247",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getSenderNonce",
            "nameLocation": "1389:14:16",
            "parameters": {
              "id": 5338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5337,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1412:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5342,
                  "src": "1404:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5336,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1404:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1403:16:16"
            },
            "returnParameters": {
              "id": 5341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5340,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "1450:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5342,
                  "src": "1443:12:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 5339,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1443:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1442:14:16"
            },
            "scope": 5368,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5354,
            "nodeType": "FunctionDefinition",
            "src": "1613:108:16",
            "nodes": [],
            "documentation": {
              "id": 5343,
              "nodeType": "StructuredDocumentation",
              "src": "1461:149:16",
              "text": "@notice Adds and removed token pools.\n @param adds The tokens and pools to be added.\n @param removes The tokens and pools to be removed"
            },
            "functionSelector": "3a87ac53",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "applyPoolUpdates",
            "nameLocation": "1622:16:16",
            "parameters": {
              "id": 5352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5347,
                  "mutability": "mutable",
                  "name": "adds",
                  "nameLocation": "1668:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5354,
                  "src": "1639:33:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_PoolUpdate_$5698_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Internal.PoolUpdate[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5345,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5344,
                        "name": "Internal.PoolUpdate",
                        "nameLocations": [
                          "1639:8:16",
                          "1648:10:16"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5698,
                        "src": "1639:19:16"
                      },
                      "referencedDeclaration": 5698,
                      "src": "1639:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolUpdate_$5698_storage_ptr",
                        "typeString": "struct Internal.PoolUpdate"
                      }
                    },
                    "id": 5346,
                    "nodeType": "ArrayTypeName",
                    "src": "1639:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PoolUpdate_$5698_storage_$dyn_storage_ptr",
                      "typeString": "struct Internal.PoolUpdate[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5351,
                  "mutability": "mutable",
                  "name": "removes",
                  "nameLocation": "1703:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5354,
                  "src": "1674:36:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_PoolUpdate_$5698_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Internal.PoolUpdate[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5349,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5348,
                        "name": "Internal.PoolUpdate",
                        "nameLocations": [
                          "1674:8:16",
                          "1683:10:16"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5698,
                        "src": "1674:19:16"
                      },
                      "referencedDeclaration": 5698,
                      "src": "1674:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolUpdate_$5698_storage_ptr",
                        "typeString": "struct Internal.PoolUpdate"
                      }
                    },
                    "id": 5350,
                    "nodeType": "ArrayTypeName",
                    "src": "1674:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PoolUpdate_$5698_storage_$dyn_storage_ptr",
                      "typeString": "struct Internal.PoolUpdate[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1638:73:16"
            },
            "returnParameters": {
              "id": 5353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1720:0:16"
            },
            "scope": 5368,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5367,
            "nodeType": "FunctionDefinition",
            "src": "2101:156:16",
            "nodes": [],
            "documentation": {
              "id": 5355,
              "nodeType": "StructuredDocumentation",
              "src": "1725:373:16",
              "text": "@notice Send a message to the remote chain\n @dev only callable by the Router\n @dev approve() must have already been called on the token using the this ramp address as the spender.\n @dev if the contract is paused, this function will revert.\n @param message Message struct to send\n @param originalSender The original initiator of the CCIP request"
            },
            "functionSelector": "a7d3e02f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "forwardFromRouter",
            "nameLocation": "2110:17:16",
            "parameters": {
              "id": 5363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5358,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "2162:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5367,
                  "src": "2133:36:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EVM2AnyMessage_$5644_memory_ptr",
                    "typeString": "struct Client.EVM2AnyMessage"
                  },
                  "typeName": {
                    "id": 5357,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5356,
                      "name": "Client.EVM2AnyMessage",
                      "nameLocations": [
                        "2133:6:16",
                        "2140:14:16"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5644,
                      "src": "2133:21:16"
                    },
                    "referencedDeclaration": 5644,
                    "src": "2133:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EVM2AnyMessage_$5644_storage_ptr",
                      "typeString": "struct Client.EVM2AnyMessage"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5360,
                  "mutability": "mutable",
                  "name": "feeTokenAmount",
                  "nameLocation": "2183:14:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5367,
                  "src": "2175:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2175:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5362,
                  "mutability": "mutable",
                  "name": "originalSender",
                  "nameLocation": "2211:14:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5367,
                  "src": "2203:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2203:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2127:102:16"
            },
            "returnParameters": {
              "id": 5366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5365,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5367,
                  "src": "2248:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5364,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2248:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2247:9:16"
            },
            "scope": 5368,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IEVM2AnyOnRamp",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          5368
        ],
        "name": "IEVM2AnyOnRamp",
        "nameLocation": "305:14:16",
        "scope": 5369,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 16
}