{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "368:636:43:-:0;;;436:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;496:4;502:6;2008:5:53;:13;496:4:43;2008:5:53;:13;:::i;:::-;-1:-1:-1;2027:7:53;:17;2037:7;2027;:17;:::i;:::-;;1946:103;;436:76:43;;368:636;;14:127:69;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:69;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:69;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:69:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:69;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:69;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:69;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:69;;;3992:26;3943:89;-1:-1:-1;;2747:1:69;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:69;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:69;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:69;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:69:o;:::-;368:636:43;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100df5760003560e01c8063395093511161008c57806395d89b411161006657806395d89b41146101c8578063a457c2d7146101d0578063a9059cbb146101e3578063dd62ed3e146101f657600080fd5b8063395093511461016c5780634000aea01461017f57806370a082311461019257600080fd5b806318160ddd116100bd57806318160ddd1461013857806323b872dd1461014a578063313ce5671461015d57600080fd5b806306fdde03146100e4578063095ea7b3146101025780631296ee6214610125575b600080fd5b6100ec61023c565b6040516100f99190610aef565b60405180910390f35b610115610110366004610b2b565b6102ce565b60405190151581526020016100f9565b610115610133366004610b2b565b6102e8565b6002545b6040519081526020016100f9565b610115610158366004610b55565b61030b565b604051601281526020016100f9565b61011561017a366004610b2b565b61032f565b61011561018d366004610bc0565b61037b565b61013c6101a0366004610ca9565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100ec61049f565b6101156101de366004610b2b565b6104ae565b6101156101f1366004610b2b565b610584565b61013c610204366004610cc4565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461024b90610cf7565b80601f016020809104026020016040519081016040528092919081815260200182805461027790610cf7565b80156102c45780601f10610299576101008083540402835291602001916102c4565b820191906000526020600020905b8154815290600101906020018083116102a757829003601f168201915b5050505050905090565b6000336102dc818585610592565b60019150505b92915050565b600061030483836040518060200160405280600081525061037b565b9392505050565b600033610319858285610745565b61032485858561081c565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906102dc9082908690610376908790610d4a565b610592565b60006103878484610584565b508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c1685856040516103e7929190610d84565b60405180910390a373ffffffffffffffffffffffffffffffffffffffff84163b15610495576040517fa4c0ed3600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063a4c0ed369061046290339087908790600401610da5565b600060405180830381600087803b15801561047c57600080fd5b505af1158015610490573d6000803e3d6000fd5b505050505b5060019392505050565b60606004805461024b90610cf7565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015610577576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6103248286868403610592565b6000336102dc81858561081c565b73ffffffffffffffffffffffffffffffffffffffff8316610634576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161056e565b73ffffffffffffffffffffffffffffffffffffffff82166106d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161056e565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108165781811015610809576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161056e565b6108168484848403610592565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166108bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161056e565b73ffffffffffffffffffffffffffffffffffffffff8216610962576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161056e565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610a18576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161056e565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610816565b6000815180845260005b81811015610ab157602081850181015186830182015201610a95565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006103046020830184610a8b565b803573ffffffffffffffffffffffffffffffffffffffff81168114610b2657600080fd5b919050565b60008060408385031215610b3e57600080fd5b610b4783610b02565b946020939093013593505050565b600080600060608486031215610b6a57600080fd5b610b7384610b02565b9250610b8160208501610b02565b9150604084013590509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080600060608486031215610bd557600080fd5b610bde84610b02565b925060208401359150604084013567ffffffffffffffff80821115610c0257600080fd5b818601915086601f830112610c1657600080fd5b813581811115610c2857610c28610b91565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610c6e57610c6e610b91565b81604052828152896020848701011115610c8757600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b600060208284031215610cbb57600080fd5b61030482610b02565b60008060408385031215610cd757600080fd5b610ce083610b02565b9150610cee60208401610b02565b90509250929050565b600181811c90821680610d0b57607f821691505b602082108103610d44577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b808201808211156102e2577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b828152604060208201526000610d9d6040830184610a8b565b949350505050565b73ffffffffffffffffffffffffffffffffffffffff84168152826020820152606060408201526000610dda6060830184610a8b565b9594505050505056fea164736f6c6343000813000a",
    "sourceMap": "368:636:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2106:92:53;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4231:183;;;;;;:::i;:::-;;:::i;:::-;;;1351:14:69;;1344:22;1326:41;;1314:2;1299:18;4231:183:53;1186:187:69;876:126:43;;;;;;:::i;:::-;;:::i;3130:100:53:-;3213:12;;3130:100;;;1524:25:69;;;1512:2;1497:18;3130:100:53;1378:177:69;4942:254:53;;;;;;:::i;:::-;;:::i;2993:85::-;;;3071:2;2035:36:69;;2023:2;2008:18;2993:85:53;1893:184:69;5565:220:53;;;;;;:::i;:::-;;:::i;542:304:43:-;;;;;;:::i;:::-;;:::i;3280:119:53:-;;;;;;:::i;:::-;3376:18;;3354:7;3376:18;;;;;;;;;;;;3280:119;2301:96;;;:::i;6242:395::-;;;;;;:::i;:::-;;:::i;3577:175::-;;;;;;:::i;:::-;;:::i;3802:143::-;;;;;;:::i;:::-;3913:18;;;;3891:7;3913:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3802:143;2106:92;2160:13;2188:5;2181:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2106:92;:::o;4231:183::-;4314:4;713:10:60;4360:32:53;713:10:60;4376:7:53;4385:6;4360:8;:32::i;:::-;4405:4;4398:11;;;4231:183;;;;;:::o;876:126:43:-;947:4;966:31;982:2;986:6;966:31;;;;;;;;;;;;:15;:31::i;:::-;959:38;876:126;-1:-1:-1;;;876:126:43:o;4942:254:53:-;5055:4;713:10:60;5103:38:53;5119:4;713:10:60;5134:6:53;5103:15;:38::i;:::-;5147:27;5157:4;5163:2;5167:6;5147:9;:27::i;:::-;-1:-1:-1;5187:4:53;;4942:254;-1:-1:-1;;;;4942:254:53:o;5565:220::-;713:10:60;5653:4:53;3913:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;5653:4;;713:10:60;5699:64:53;;713:10:60;;3913:27:53;;5724:38;;5752:10;;5724:38;:::i;:::-;5699:8;:64::i;542:304:43:-;627:12;647:26;662:2;666:6;647:14;:26::i;:::-;;705:2;684:38;;693:10;684:38;;;709:6;717:4;684:38;;;;;;;:::i;:::-;;;;;;;;732:13;;;1395:19:59;:23;728:97:43;;757:61;;;;;:35;;;;;;:61;;793:10;;805:6;;813:4;;757:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;728:97;-1:-1:-1;837:4:43;542:304;;;;;:::o;2301:96:53:-;2357:13;2385:7;2378:14;;;;;:::i;6242:395::-;713:10:60;6335:4:53;3913:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;6335:4;;713:10:60;6467:15:53;6447:16;:35;;6439:85;;;;;;;5490:2:69;6439:85:53;;;5472:21:69;5529:2;5509:18;;;5502:30;5568:34;5548:18;;;5541:62;5639:7;5619:18;;;5612:35;5664:19;;6439:85:53;;;;;;;;;6548:60;6557:5;6564:7;6592:15;6573:16;:34;6548:8;:60::i;3577:175::-;3656:4;713:10:60;3702:28:53;713:10:60;3719:2:53;3723:6;3702:9;:28::i;9842:338::-;9955:19;;;9947:68;;;;;;;5896:2:69;9947:68:53;;;5878:21:69;5935:2;5915:18;;;5908:30;5974:34;5954:18;;;5947:62;6045:6;6025:18;;;6018:34;6069:19;;9947:68:53;5694:400:69;9947:68:53;10029:21;;;10021:68;;;;;;;6301:2:69;10021:68:53;;;6283:21:69;6340:2;6320:18;;;6313:30;6379:34;6359:18;;;6352:62;6450:4;6430:18;;;6423:32;6472:19;;10021:68:53;6099:398:69;10021:68:53;10096:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10143:32;;1524:25:69;;;10143:32:53;;1497:18:69;10143:32:53;;;;;;;9842:338;;;:::o;10443:387::-;3913:18;;;;10555:24;3913:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;10637:17;10617:37;;10613:213;;10692:6;10672:16;:26;;10664:68;;;;;;;6704:2:69;10664:68:53;;;6686:21:69;6743:2;6723:18;;;6716:30;6782:31;6762:18;;;6755:59;6831:18;;10664:68:53;6502:353:69;10664:68:53;10760:51;10769:5;10776:7;10804:6;10785:16;:25;10760:8;:51::i;:::-;10549:281;10443:387;;;:::o;7061:738::-;7169:18;;;7161:68;;;;;;;7062:2:69;7161:68:53;;;7044:21:69;7101:2;7081:18;;;7074:30;7140:34;7120:18;;;7113:62;7211:7;7191:18;;;7184:35;7236:19;;7161:68:53;6860:401:69;7161:68:53;7243:16;;;7235:64;;;;;;;7468:2:69;7235:64:53;;;7450:21:69;7507:2;7487:18;;;7480:30;7546:34;7526:18;;;7519:62;7617:5;7597:18;;;7590:33;7640:19;;7235:64:53;7266:399:69;7235:64:53;7373:15;;;7351:19;7373:15;;;;;;;;;;;7402:21;;;;7394:72;;;;;;;7872:2:69;7394:72:53;;;7854:21:69;7911:2;7891:18;;;7884:30;7950:34;7930:18;;;7923:62;8021:8;8001:18;;;7994:36;8047:19;;7394:72:53;7670:402:69;7394:72:53;7490:15;;;;:9;:15;;;;;;;;;;;7508:20;;;7490:38;;7683:13;;;;;;;;;;:23;;;;;;7724:26;;1524:25:69;;;7683:13:53;;7724:26;;1497:18:69;7724:26:53;;;;;;;7757:37;11384:107;14:482:69;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;485:4;415:66;410:2;402:6;398:15;394:88;389:3;385:98;381:109;374:116;;;14:482;;;;:::o;501:220::-;650:2;639:9;632:21;613:4;670:45;711:2;700:9;696:18;688:6;670:45;:::i;726:196::-;794:20;;854:42;843:54;;833:65;;823:93;;912:1;909;902:12;823:93;726:196;;;:::o;927:254::-;995:6;1003;1056:2;1044:9;1035:7;1031:23;1027:32;1024:52;;;1072:1;1069;1062:12;1024:52;1095:29;1114:9;1095:29;:::i;:::-;1085:39;1171:2;1156:18;;;;1143:32;;-1:-1:-1;;;927:254:69:o;1560:328::-;1637:6;1645;1653;1706:2;1694:9;1685:7;1681:23;1677:32;1674:52;;;1722:1;1719;1712:12;1674:52;1745:29;1764:9;1745:29;:::i;:::-;1735:39;;1793:38;1827:2;1816:9;1812:18;1793:38;:::i;:::-;1783:48;;1878:2;1867:9;1863:18;1850:32;1840:42;;1560:328;;;;;:::o;2082:184::-;2134:77;2131:1;2124:88;2231:4;2228:1;2221:15;2255:4;2252:1;2245:15;2271:1122;2357:6;2365;2373;2426:2;2414:9;2405:7;2401:23;2397:32;2394:52;;;2442:1;2439;2432:12;2394:52;2465:29;2484:9;2465:29;:::i;:::-;2455:39;;2541:2;2530:9;2526:18;2513:32;2503:42;;2596:2;2585:9;2581:18;2568:32;2619:18;2660:2;2652:6;2649:14;2646:34;;;2676:1;2673;2666:12;2646:34;2714:6;2703:9;2699:22;2689:32;;2759:7;2752:4;2748:2;2744:13;2740:27;2730:55;;2781:1;2778;2771:12;2730:55;2817:2;2804:16;2839:2;2835;2832:10;2829:36;;;2845:18;;:::i;:::-;2979:2;2973:9;3041:4;3033:13;;2884:66;3029:22;;;3053:2;3025:31;3021:40;3009:53;;;3077:18;;;3097:22;;;3074:46;3071:72;;;3123:18;;:::i;:::-;3163:10;3159:2;3152:22;3198:2;3190:6;3183:18;3238:7;3233:2;3228;3224;3220:11;3216:20;3213:33;3210:53;;;3259:1;3256;3249:12;3210:53;3315:2;3310;3306;3302:11;3297:2;3289:6;3285:15;3272:46;3360:1;3355:2;3350;3342:6;3338:15;3334:24;3327:35;3381:6;3371:16;;;;;;;2271:1122;;;;;:::o;3398:186::-;3457:6;3510:2;3498:9;3489:7;3485:23;3481:32;3478:52;;;3526:1;3523;3516:12;3478:52;3549:29;3568:9;3549:29;:::i;3589:260::-;3657:6;3665;3718:2;3706:9;3697:7;3693:23;3689:32;3686:52;;;3734:1;3731;3724:12;3686:52;3757:29;3776:9;3757:29;:::i;:::-;3747:39;;3805:38;3839:2;3828:9;3824:18;3805:38;:::i;:::-;3795:48;;3589:260;;;;;:::o;3854:437::-;3933:1;3929:12;;;;3976;;;3997:61;;4051:4;4043:6;4039:17;4029:27;;3997:61;4104:2;4096:6;4093:14;4073:18;4070:38;4067:218;;4141:77;4138:1;4131:88;4242:4;4239:1;4232:15;4270:4;4267:1;4260:15;4067:218;;3854:437;;;:::o;4296:279::-;4361:9;;;4382:10;;;4379:190;;;4425:77;4422:1;4415:88;4526:4;4523:1;4516:15;4554:4;4551:1;4544:15;4580:289;4755:6;4744:9;4737:25;4798:2;4793;4782:9;4778:18;4771:30;4718:4;4818:45;4859:2;4848:9;4844:18;4836:6;4818:45;:::i;:::-;4810:53;4580:289;-1:-1:-1;;;;4580:289:69:o;4874:409::-;5089:42;5081:6;5077:55;5066:9;5059:74;5169:6;5164:2;5153:9;5149:18;5142:34;5212:2;5207;5196:9;5192:18;5185:30;5040:4;5232:45;5273:2;5262:9;5258:18;5250:6;5232:45;:::i;:::-;5224:53;4874:409;-1:-1:-1;;;;;4874:409:69:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferAndCall(address,uint256)": "1296ee62",
    "transferAndCall(address,uint256,bytes)": "4000aea0",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferAndCall(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to be transferred\",\"to\":\"The address which you want to transfer to\"},\"returns\":{\"_0\":\"true unless throwing\"}},\"transferAndCall(address,uint256,bytes)\":{\"params\":{\"amount\":\"The amount of tokens to be transferred\",\"data\":\"bytes Additional data with no specified format, sent in call to `to`\",\"to\":\"The address which you want to transfer to\"},\"returns\":{\"success\":\"true unless throwing\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"transferAndCall(address,uint256)\":{\"notice\":\"Transfer tokens from `msg.sender` to another address and then call `onTransferReceived` on receiver\"},\"transferAndCall(address,uint256,bytes)\":{\"notice\":\"Transfer tokens from `msg.sender` to another address and then call `onTransferReceived` on receiver\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/pools/tokens/ERC677.sol\":\"ERC677\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":30000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC677.sol\":{\"keccak256\":\"0x8542b1882f2e3ab83451cd1a7c751fd4a0edcbe8d47e52b49c841506c9d8836d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://33dbac36098ba34c5aecab9f0cf1ff5431ff51116771cde1e480c0d71c0db146\",\"dweb:/ipfs/QmTZq4Sw6a4dsLeJEoqJtPbuHTuaMiPoExGY8BiXFrHMi8\"]},\"contracts/interfaces/IERC677Receiver.sol\":{\"keccak256\":\"0x3fd7cf3bc195c3e046ece62f1654d906d8f653edc705db18dcc409703d21dd91\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f10cac0c126d2cd3950c9b7cbb352d4878816df8448c261c04615b5a99ea8f76\",\"dweb:/ipfs/QmRYxa6RRG4Rfa2pCeSKK9o8j5htJxLbL4xwTrN9t8mCNs\"]},\"contracts/pools/tokens/ERC677.sol\":{\"keccak256\":\"0xc93e9c9e8e97678c371a1a898fe4d122d7a7814d5d48ed20dad0c54e48ad9e00\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6d7d385861c26f1fed86637f6bdcdc9db234e698355a1c339026e34a14ba537b\",\"dweb:/ipfs/QmeH1AfU7gQsQvB5VuphSYFXr8pUxxk2wgDzTySR31nLqt\"]},\"vendor/openzeppelin-solidity/v4.8.0/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x67ef1854b98398751c6310d7cc73fe5480ec332e21620f66b294ce0b0aa12486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9254af5d452233d76be93fb3a84d32f5b0d56e600cef7100fc77eacbb296c19\",\"dweb:/ipfs/QmSSFa966t6vApgqrRWxSbveTiXBzmLhQLeG2ekkSYHGVj\"]},\"vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf7a52b7d3a7b79117544d6bbeb8564bd22c760c4937d69914b99641a957a8f2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b5afd167693d0e80d30d0f50b718b5df237c97d721383b97154049cabab1128\",\"dweb:/ipfs/QmZpVB96pJpaJmmnqB1RC3qSZk8upgLL22YZtq97JzpK5H\"]},\"vendor/openzeppelin-solidity/v4.8.0/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xad7b0bededb17dc44bfd093e441700a847acb6084b0b085e3b4ed25db0ac50ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca1fcde61bbac647e6a8ebd10b19b8d118b7ba6c41cf4b7890ee6847f435dcf1\",\"dweb:/ipfs/QmNq1P2UsQRxyEok7BKrVdC32QhrYTtU3RFLJbq3DzkpVX\"]},\"vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol\":{\"keccak256\":\"0xf77cae3ecd8776056d3d2ceb7b6958d757c6a9825b58665f82d38dbec2f695e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://489b9773cb0ef1d391727d0fea532c94228d0a55051d212c434df404a26a849b\",\"dweb:/ipfs/QmQnapN26it7QbPUrjwbMEeEP8QBtppZwfMkjbHBesKAbF\"]},\"vendor/openzeppelin-solidity/v4.8.0/utils/Context.sol\":{\"keccak256\":\"0xd79a77ff36548f48763b53648e02b983e8297f5d93102b026154a23667c28931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c8bc3433c54bbb9d7cd61f7958e3cd8004383e242285471c23475ddb751196d\",\"dweb:/ipfs/QmSf1dt6GThXUNfEcUvnwHoAoJQZWMQBbqCSg7D6UL2aHa\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAndCall",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAndCall",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferAndCall(address,uint256)": {
            "params": {
              "amount": "The amount of tokens to be transferred",
              "to": "The address which you want to transfer to"
            },
            "returns": {
              "_0": "true unless throwing"
            }
          },
          "transferAndCall(address,uint256,bytes)": {
            "params": {
              "amount": "The amount of tokens to be transferred",
              "data": "bytes Additional data with no specified format, sent in call to `to`",
              "to": "The address which you want to transfer to"
            },
            "returns": {
              "success": "true unless throwing"
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "transferAndCall(address,uint256)": {
            "notice": "Transfer tokens from `msg.sender` to another address and then call `onTransferReceived` on receiver"
          },
          "transferAndCall(address,uint256,bytes)": {
            "notice": "Transfer tokens from `msg.sender` to another address and then call `onTransferReceived` on receiver"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [],
      "optimizer": {
        "enabled": true,
        "runs": 30000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/pools/tokens/ERC677.sol": "ERC677"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/IERC677.sol": {
        "keccak256": "0x8542b1882f2e3ab83451cd1a7c751fd4a0edcbe8d47e52b49c841506c9d8836d",
        "urls": [
          "bzz-raw://33dbac36098ba34c5aecab9f0cf1ff5431ff51116771cde1e480c0d71c0db146",
          "dweb:/ipfs/QmTZq4Sw6a4dsLeJEoqJtPbuHTuaMiPoExGY8BiXFrHMi8"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/interfaces/IERC677Receiver.sol": {
        "keccak256": "0x3fd7cf3bc195c3e046ece62f1654d906d8f653edc705db18dcc409703d21dd91",
        "urls": [
          "bzz-raw://f10cac0c126d2cd3950c9b7cbb352d4878816df8448c261c04615b5a99ea8f76",
          "dweb:/ipfs/QmRYxa6RRG4Rfa2pCeSKK9o8j5htJxLbL4xwTrN9t8mCNs"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/pools/tokens/ERC677.sol": {
        "keccak256": "0xc93e9c9e8e97678c371a1a898fe4d122d7a7814d5d48ed20dad0c54e48ad9e00",
        "urls": [
          "bzz-raw://6d7d385861c26f1fed86637f6bdcdc9db234e698355a1c339026e34a14ba537b",
          "dweb:/ipfs/QmeH1AfU7gQsQvB5VuphSYFXr8pUxxk2wgDzTySR31nLqt"
        ],
        "license": "UNLICENSED"
      },
      "vendor/openzeppelin-solidity/v4.8.0/token/ERC20/ERC20.sol": {
        "keccak256": "0x67ef1854b98398751c6310d7cc73fe5480ec332e21620f66b294ce0b0aa12486",
        "urls": [
          "bzz-raw://a9254af5d452233d76be93fb3a84d32f5b0d56e600cef7100fc77eacbb296c19",
          "dweb:/ipfs/QmSSFa966t6vApgqrRWxSbveTiXBzmLhQLeG2ekkSYHGVj"
        ],
        "license": "MIT"
      },
      "vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol": {
        "keccak256": "0xf7a52b7d3a7b79117544d6bbeb8564bd22c760c4937d69914b99641a957a8f2a",
        "urls": [
          "bzz-raw://2b5afd167693d0e80d30d0f50b718b5df237c97d721383b97154049cabab1128",
          "dweb:/ipfs/QmZpVB96pJpaJmmnqB1RC3qSZk8upgLL22YZtq97JzpK5H"
        ],
        "license": "MIT"
      },
      "vendor/openzeppelin-solidity/v4.8.0/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xad7b0bededb17dc44bfd093e441700a847acb6084b0b085e3b4ed25db0ac50ec",
        "urls": [
          "bzz-raw://ca1fcde61bbac647e6a8ebd10b19b8d118b7ba6c41cf4b7890ee6847f435dcf1",
          "dweb:/ipfs/QmNq1P2UsQRxyEok7BKrVdC32QhrYTtU3RFLJbq3DzkpVX"
        ],
        "license": "MIT"
      },
      "vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol": {
        "keccak256": "0xf77cae3ecd8776056d3d2ceb7b6958d757c6a9825b58665f82d38dbec2f695e5",
        "urls": [
          "bzz-raw://489b9773cb0ef1d391727d0fea532c94228d0a55051d212c434df404a26a849b",
          "dweb:/ipfs/QmQnapN26it7QbPUrjwbMEeEP8QBtppZwfMkjbHBesKAbF"
        ],
        "license": "MIT"
      },
      "vendor/openzeppelin-solidity/v4.8.0/utils/Context.sol": {
        "keccak256": "0xd79a77ff36548f48763b53648e02b983e8297f5d93102b026154a23667c28931",
        "urls": [
          "bzz-raw://1c8bc3433c54bbb9d7cd61f7958e3cd8004383e242285471c23475ddb751196d",
          "dweb:/ipfs/QmSf1dt6GThXUNfEcUvnwHoAoJQZWMQBbqCSg7D6UL2aHa"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/pools/tokens/ERC677.sol",
    "id": 13406,
    "exportedSymbols": {
      "Address": [
        15837
      ],
      "ERC20": [
        15043
      ],
      "ERC677": [
        13405
      ],
      "IERC677": [
        5280
      ],
      "IERC677Receiver": [
        5292
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:966:43",
    "nodes": [
      {
        "id": 13315,
        "nodeType": "PragmaDirective",
        "src": "39:23:43",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 13317,
        "nodeType": "ImportDirective",
        "src": "64:53:43",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IERC677.sol",
        "file": "../../interfaces/IERC677.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13406,
        "sourceUnit": 5281,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13316,
              "name": "IERC677",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5280,
              "src": "72:7:43",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13319,
        "nodeType": "ImportDirective",
        "src": "118:69:43",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IERC677Receiver.sol",
        "file": "../../interfaces/IERC677Receiver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13406,
        "sourceUnit": 5293,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13318,
              "name": "IERC677Receiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5292,
              "src": "126:15:43",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13321,
        "nodeType": "ImportDirective",
        "src": "189:87:43",
        "nodes": [],
        "absolutePath": "vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol",
        "file": "../../../vendor/openzeppelin-solidity/v4.8.0/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13406,
        "sourceUnit": 15838,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13320,
              "name": "Address",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 15837,
              "src": "197:7:43",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13323,
        "nodeType": "ImportDirective",
        "src": "277:89:43",
        "nodes": [],
        "absolutePath": "vendor/openzeppelin-solidity/v4.8.0/token/ERC20/ERC20.sol",
        "file": "../../../vendor/openzeppelin-solidity/v4.8.0/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 13406,
        "sourceUnit": 15044,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13322,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 15043,
              "src": "285:5:43",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13405,
        "nodeType": "ContractDefinition",
        "src": "368:636:43",
        "nodes": [
          {
            "id": 13330,
            "nodeType": "UsingForDirective",
            "src": "406:26:43",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 13328,
              "name": "Address",
              "nameLocations": [
                "412:7:43"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15837,
              "src": "412:7:43"
            },
            "typeName": {
              "id": 13329,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "424:7:43",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 13342,
            "nodeType": "FunctionDefinition",
            "src": "436:76:43",
            "nodes": [],
            "body": {
              "id": 13341,
              "nodeType": "Block",
              "src": "510:2:43",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 13337,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13332,
                    "src": "496:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 13338,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13334,
                    "src": "502:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 13339,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 13336,
                  "name": "ERC20",
                  "nameLocations": [
                    "490:5:43"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15043,
                  "src": "490:5:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "490:19:43"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 13335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13332,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "462:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 13342,
                  "src": "448:18:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13331,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "448:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13334,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "482:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 13342,
                  "src": "468:20:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13333,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "468:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "447:42:43"
            },
            "returnParameters": {
              "id": 13340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "510:0:43"
            },
            "scope": 13405,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13387,
            "nodeType": "FunctionDefinition",
            "src": "542:304:43",
            "nodes": [],
            "body": {
              "id": 13386,
              "nodeType": "Block",
              "src": "641:205:43",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13357,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13345,
                        "src": "662:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13358,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13347,
                        "src": "666:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13354,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "647:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC677_$13405_$",
                          "typeString": "type(contract super ERC677)"
                        }
                      },
                      "id": 13356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "653:8:43",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14580,
                      "src": "647:14:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 13359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "647:26:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13360,
                  "nodeType": "ExpressionStatement",
                  "src": "647:26:43"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 13362,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "693:3:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "697:6:43",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "693:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13364,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13345,
                        "src": "705:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13365,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13347,
                        "src": "709:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 13366,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13349,
                        "src": "717:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 13361,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15055,
                        5257
                      ],
                      "referencedDeclaration": 5257,
                      "src": "684:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 13367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "684:38:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13368,
                  "nodeType": "EmitStatement",
                  "src": "679:43:43"
                },
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13369,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13345,
                        "src": "732:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 13370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "735:10:43",
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15525,
                      "src": "732:13:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 13371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "732:15:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13383,
                  "nodeType": "IfStatement",
                  "src": "728:97:43",
                  "trueBody": {
                    "id": 13382,
                    "nodeType": "Block",
                    "src": "749:76:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 13376,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "793:3:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 13377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "797:6:43",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "793:10:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 13378,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13347,
                              "src": "805:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 13379,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13349,
                              "src": "813:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 13373,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13345,
                                  "src": "773:2:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 13372,
                                "name": "IERC677Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5292,
                                "src": "757:15:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC677Receiver_$5292_$",
                                  "typeString": "type(contract IERC677Receiver)"
                                }
                              },
                              "id": 13374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "757:19:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC677Receiver_$5292",
                                "typeString": "contract IERC677Receiver"
                              }
                            },
                            "id": 13375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "777:15:43",
                            "memberName": "onTokenTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5291,
                            "src": "757:35:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,bytes memory) external"
                            }
                          },
                          "id": 13380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "757:61:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 13381,
                        "nodeType": "ExpressionStatement",
                        "src": "757:61:43"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 13384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "837:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 13353,
                  "id": 13385,
                  "nodeType": "Return",
                  "src": "830:11:43"
                }
              ]
            },
            "baseFunctions": [
              5279
            ],
            "documentation": {
              "id": 13343,
              "nodeType": "StructuredDocumentation",
              "src": "516:23:43",
              "text": "@inheritdoc IERC677"
            },
            "functionSelector": "4000aea0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferAndCall",
            "nameLocation": "551:15:43",
            "parameters": {
              "id": 13350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13345,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "575:2:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 13387,
                  "src": "567:10:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13344,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "567:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13347,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "584:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 13387,
                  "src": "579:11:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13346,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "579:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13349,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "605:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 13387,
                  "src": "592:17:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 13348,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "592:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "566:44:43"
            },
            "returnParameters": {
              "id": 13353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13352,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "632:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 13387,
                  "src": "627:12:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13351,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "627:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "626:14:43"
            },
            "scope": 13405,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 13404,
            "nodeType": "FunctionDefinition",
            "src": "876:126:43",
            "nodes": [],
            "body": {
              "id": 13403,
              "nodeType": "Block",
              "src": "953:49:43",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13398,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13390,
                        "src": "982:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13399,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13392,
                        "src": "986:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 13400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "994:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 13397,
                      "name": "transferAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13387,
                      "src": "966:15:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,bytes memory) returns (bool)"
                      }
                    },
                    "id": 13401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "966:31:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 13396,
                  "id": 13402,
                  "nodeType": "Return",
                  "src": "959:38:43"
                }
              ]
            },
            "baseFunctions": [
              5267
            ],
            "documentation": {
              "id": 13388,
              "nodeType": "StructuredDocumentation",
              "src": "850:23:43",
              "text": "@inheritdoc IERC677"
            },
            "functionSelector": "1296ee62",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferAndCall",
            "nameLocation": "885:15:43",
            "parameters": {
              "id": 13393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13390,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "909:2:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 13404,
                  "src": "901:10:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13389,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "901:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13392,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "921:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 13404,
                  "src": "913:14:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13391,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "913:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "900:28:43"
            },
            "returnParameters": {
              "id": 13396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13395,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13404,
                  "src": "947:4:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13394,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "946:6:43"
            },
            "scope": 13405,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13324,
              "name": "IERC677",
              "nameLocations": [
                "387:7:43"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5280,
              "src": "387:7:43"
            },
            "id": 13325,
            "nodeType": "InheritanceSpecifier",
            "src": "387:7:43"
          },
          {
            "baseName": {
              "id": 13326,
              "name": "ERC20",
              "nameLocations": [
                "396:5:43"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15043,
              "src": "396:5:43"
            },
            "id": 13327,
            "nodeType": "InheritanceSpecifier",
            "src": "396:5:43"
          }
        ],
        "canonicalName": "ERC677",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          13405,
          15043,
          15190,
          15121,
          15859,
          5280
        ],
        "name": "ERC677",
        "nameLocation": "377:6:43",
        "scope": 13406,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 43
}