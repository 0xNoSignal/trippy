{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "chainSelector",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "onRamp",
              "type": "address"
            }
          ],
          "internalType": "struct CommitStore.StaticConfig",
          "name": "staticConfig",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BadARMSignal",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "expected",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "actual",
          "type": "bytes32"
        }
      ],
      "name": "ConfigDigestMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidCommitStoreConfig",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "InvalidConfig",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "min",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "max",
              "type": "uint64"
            }
          ],
          "internalType": "struct CommitStore.Interval",
          "name": "interval",
          "type": "tuple"
        }
      ],
      "name": "InvalidInterval",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidProof",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidRoot",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonUniqueSignatures",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PausedError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SignaturesOutOfRegistration",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnauthorizedSigner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnauthorizedTransmitter",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "actual",
          "type": "uint256"
        }
      ],
      "name": "WrongMessageLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WrongNumberOfSignatures",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "chainSelector",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "onRamp",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct CommitStore.StaticConfig",
          "name": "staticConfig",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "priceRegistry",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "ARM",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct CommitStore.DynamicConfig",
          "name": "dynamicConfig",
          "type": "tuple"
        }
      ],
      "name": "ConfigSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "previousConfigBlockNumber",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "configDigest",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "configCount",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "signers",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "transmitters",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "f",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "onchainConfig",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "offchainConfigVersion",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "offchainConfig",
          "type": "bytes"
        }
      ],
      "name": "ConfigSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "sourceToken",
                      "type": "address"
                    },
                    {
                      "internalType": "uint192",
                      "name": "usdPerToken",
                      "type": "uint192"
                    }
                  ],
                  "internalType": "struct Internal.TokenPriceUpdate[]",
                  "name": "tokenPriceUpdates",
                  "type": "tuple[]"
                },
                {
                  "internalType": "uint64",
                  "name": "destChainSelector",
                  "type": "uint64"
                },
                {
                  "internalType": "uint192",
                  "name": "usdPerUnitGas",
                  "type": "uint192"
                }
              ],
              "internalType": "struct Internal.PriceUpdates",
              "name": "priceUpdates",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint64",
                  "name": "min",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "max",
                  "type": "uint64"
                }
              ],
              "internalType": "struct CommitStore.Interval",
              "name": "interval",
              "type": "tuple"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            }
          ],
          "indexed": false,
          "internalType": "struct CommitStore.CommitReport",
          "name": "report",
          "type": "tuple"
        }
      ],
      "name": "ReportAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        }
      ],
      "name": "RootRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "configDigest",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "epoch",
          "type": "uint32"
        }
      ],
      "name": "Transmitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDynamicConfig",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "priceRegistry",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "ARM",
              "type": "address"
            }
          ],
          "internalType": "struct CommitStore.DynamicConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExpectedNextSequenceNumber",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        }
      ],
      "name": "getMerkleRoot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStaticConfig",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "chainSelector",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "onRamp",
              "type": "address"
            }
          ],
          "internalType": "struct CommitStore.StaticConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTransmitters",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isARMHealthy",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        }
      ],
      "name": "isBlessed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestConfigDetails",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "configCount",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "configDigest",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestConfigDigestAndEpoch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "scanLogs",
          "type": "bool"
        },
        {
          "internalType": "bytes32",
          "name": "configDigest",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "epoch",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "rootToReset",
          "type": "bytes32[]"
        }
      ],
      "name": "resetUnblessedRoots",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "minSeqNr",
          "type": "uint64"
        }
      ],
      "name": "setMinSeqNr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "signers",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "transmitters",
          "type": "address[]"
        },
        {
          "internalType": "uint8",
          "name": "f",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "onchainConfig",
          "type": "bytes"
        },
        {
          "internalType": "uint64",
          "name": "offchainConfigVersion",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "offchainConfig",
          "type": "bytes"
        }
      ],
      "name": "setOCR2Config",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[3]",
          "name": "reportContext",
          "type": "bytes32[3]"
        },
        {
          "internalType": "bytes",
          "name": "report",
          "type": "bytes"
        },
        {
          "internalType": "bytes32[]",
          "name": "rs",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "ss",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes32",
          "name": "rawVs",
          "type": "bytes32"
        }
      ],
      "name": "transmit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "typeAndVersion",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "hashedLeaves",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "proofs",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "proofFlagBits",
          "type": "uint256"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e0604052600a80546001600160481b03191660011790553480156200002457600080fd5b50604051620031c3380380620031c3833981016040819052620000479162000224565b33806000816200009e5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0384811691909117909155811615620000d157620000d1816200015c565b50505060408101516001600160a01b03161580620000f7575080516001600160401b0316155b806200010e575060208101516001600160401b0316155b156200012d57604051631fc5f15f60e11b815260040160405180910390fd5b80516001600160401b0390811660805260208201511660a052604001516001600160a01b031660c052620002b2565b336001600160a01b03821603620001b65760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640162000095565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b80516001600160401b03811681146200021f57600080fd5b919050565b6000606082840312156200023757600080fd5b604051606081016001600160401b03811182821017156200026857634e487b7160e01b600052604160045260246000fd5b604052620002768362000207565b8152620002866020840162000207565b602082015260408301516001600160a01b0381168114620002a657600080fd5b60408201529392505050565b60805160a05160c051612ecc620002f76000396000818161020901526119050152600081816101d901526118dc0152600081816101a901526118b70152612ecc6000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c806379ba5097116100d8578063ad7a22f81161008c578063f2fde38b11610066578063f2fde38b1461045f578063f47a869014610472578063ff888fb11461048557600080fd5b8063ad7a22f814610419578063afcb95d71461042c578063b1dc65a41461044c57600080fd5b80638456cb59116100bd5780638456cb59146103c95780638da5cb5b146103d1578063a7206cd6146103f957600080fd5b806379ba50971461039157806381ff70481461039957600080fd5b80633f4ba83a1161012f5780635c975abb116101145780635c975abb14610317578063666cab8d1461032e5780637437ff9f1461034357600080fd5b80633f4ba83a146102f35780634120fccd146102fb57600080fd5b8063181f5a7711610160578063181f5a77146102745780631ef38174146102bd57806332048875146102d257600080fd5b806306285c691461017c5780630a6cd30d1461025c575b600080fd5b610246604080516060810182526000808252602082018190529181019190915260405180606001604052807f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16815250905090565b604051610253919061213f565b60405180910390f35b610264610498565b6040519015158152602001610253565b6102b06040518060400160405280601181526020017f436f6d6d697453746f726520312e302e3000000000000000000000000000000081525081565b60405161025391906121e9565b6102d06102cb366004612445565b610532565b005b6102e56102e036600461255e565b610cb9565b604051908152602001610253565b6102d0610dc4565b600a5460405167ffffffffffffffff9091168152602001610253565b600a5468010000000000000000900460ff16610264565b610336610e2a565b6040516102539190612623565b6040805180820182526000808252602091820152815180830190925260085473ffffffffffffffffffffffffffffffffffffffff908116835260095416908201526040516102539190612636565b6102d0610e99565b6004546002546040805163ffffffff80851682526401000000009094049093166020840152820152606001610253565b6102d0610f96565b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610253565b6102e5610407366004612667565b6000908152600b602052604090205490565b6102d0610427366004612680565b611001565b604080516001815260006020820181905291810191909152606001610253565b6102d061045a36600461269d565b611044565b6102d061046d366004612782565b6115cc565b6102d061048036600461279f565b6115e0565b610264610493366004612667565b61167f565b600954604080517f397796f7000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163397796f79160048083019260209291908290030181865afa158015610508573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052c91906127e1565b15905090565b855185518560ff16601f8311156105aa576040517f89a6198900000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f746f6f206d616e79207369676e6572730000000000000000000000000000000060448201526064015b60405180910390fd5b80600003610614576040517f89a6198900000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f66206d75737420626520706f736974697665000000000000000000000000000060448201526064016105a1565b8183146106a2576040517f89a61989000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f6f7261636c6520616464726573736573206f7574206f6620726567697374726160448201527f74696f6e0000000000000000000000000000000000000000000000000000000060648201526084016105a1565b6106ad816003612832565b8311610715576040517f89a6198900000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6661756c74792d6f7261636c65206620746f6f2068696768000000000000000060448201526064016105a1565b61071d611738565b610726866117bb565b60065460005b8181101561082257600560006006838154811061074b5761074b612849565b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff168352820192909252604001812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000169055600780546005929190849081106107bb576107bb612849565b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff168352820192909252604001902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016905561081b81612878565b905061072c565b50895160005b81811015610b615760008c828151811061084457610844612849565b6020026020010151905060006002811115610861576108616128b0565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260056020526040902054610100900460ff1660028111156108a0576108a06128b0565b14610907576040517f89a6198900000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f7265706561746564207369676e6572206164647265737300000000000000000060448201526064016105a1565b6040805180820190915260ff83168152602081016001905273ffffffffffffffffffffffffffffffffffffffff821660009081526005602090815260409091208251815460ff9091167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082168117835592840151919283917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016176101008360028111156109b7576109b76128b0565b021790555090505060008c83815181106109d3576109d3612849565b60200260200101519050600060028111156109f0576109f06128b0565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260056020526040902054610100900460ff166002811115610a2f57610a2f6128b0565b14610a96576040517f89a6198900000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f7265706561746564207472616e736d697474657220616464726573730000000060448201526064016105a1565b6040805180820190915260ff84168152602081016002905273ffffffffffffffffffffffffffffffffffffffff821660009081526005602090815260409091208251815460ff9091167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082168117835592840151919283917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001617610100836002811115610b4657610b466128b0565b0217905550905050505080610b5a90612878565b9050610828565b508a51610b759060069060208e0190612081565b508951610b899060079060208d0190612081565b506003805460ff838116610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000909216908c161717905560048054610c0f914691309190600090610be19063ffffffff166128df565b91906101000a81548163ffffffff021916908363ffffffff160217905563ffffffff168e8e8e8e8e8e611966565b600260000181905550600060048054906101000a900463ffffffff169050436004806101000a81548163ffffffff021916908363ffffffff1602179055507f1591690b8638f5fb2dbec82ac741805ac5da8b45dc5263f4875b0496fdce4e0581600260000154600460009054906101000a900463ffffffff168f8f8f8f8f8f604051610ca399989796959493929190612902565b60405180910390a1505050505050505050505050565b600a5460009068010000000000000000900460ff1615610d05576040517feced32bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610d7687878080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808b0282810182019093528a82529093508a925089918291850190849080828437600092019190915250889250611a11915050565b6000818152600b60205260409020549091501580610d9a5750610d988161167f565b155b15610da9576000915050610dbb565b6000908152600b602052604090205490505b95945050505050565b610dcc611738565b600a80547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff1690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a1565b60606007805480602002602001604051908101604052809291908181526020018280548015610e8f57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610e64575b5050505050905090565b60015473ffffffffffffffffffffffffffffffffffffffff163314610f1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e65720000000000000000000060448201526064016105a1565b60008054337fffffffffffffffffffffffff00000000000000000000000000000000000000008083168217845560018054909116905560405173ffffffffffffffffffffffffffffffffffffffff90921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b610f9e611738565b600a80547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16680100000000000000001790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602001610e20565b611009611738565b600a80547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff92909216919091179055565b61108387878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611be892505050565b6040805160608101825260025480825260035460ff8082166020850152610100909104169282019290925289359182146110f65780516040517f93df584c0000000000000000000000000000000000000000000000000000000081526004810191909152602481018390526044016105a1565b6040805183815260208c81013560081c63ffffffff16908201527fb04e63db38c49950639fa09d29872f21f5d49d614f3a969d8adf3d4b52e41a62910160405180910390a16002816020015182604001516111519190612998565b61115b91906129b1565b611166906001612998565b60ff1686146111a1576040517f71253a2500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8584146111da576040517fa75d88af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526005602090815260408083208151808301909252805460ff8082168452929391929184019161010090910416600281111561121d5761121d6128b0565b600281111561122e5761122e6128b0565b905250905060028160200151600281111561124b5761124b6128b0565b14801561129257506007816000015160ff168154811061126d5761126d612849565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff1633145b6112c8576040517fda0f08e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060006112d6856020612832565b6112e1886020612832565b6112ed8b6101446129fa565b6112f791906129fa565b61130191906129fa565b9050368114611345576040517f8e1192e1000000000000000000000000000000000000000000000000000000008152600481018290523660248201526044016105a1565b5060008989604051611358929190612a0d565b60405190819003812061136f918d90602001612a1d565b60405160208183030381529060405280519060200120905061138f61210b565b8760005b818110156115bc5760006001858984602081106113b2576113b2612849565b6113bf91901a601b612998565b8e8e868181106113d1576113d1612849565b905060200201358d8d878181106113ea576113ea612849565b9050602002013560405160008152602001604052604051611427949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015611449573d6000803e3d6000fd5b5050604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081015173ffffffffffffffffffffffffffffffffffffffff8116600090815260056020908152848220848601909552845460ff80821686529397509195509293928401916101009091041660028111156114cc576114cc6128b0565b60028111156114dd576114dd6128b0565b90525090506001816020015160028111156114fa576114fa6128b0565b14611531576040517fca31867a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8051859060ff16601f811061154857611548612849565b602002015115611584576040517ff67bc7c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600185826000015160ff16601f811061159f5761159f612849565b91151560209092020152506115b5905081612878565b9050611393565b5050505050505050505050505050565b6115d4611738565b6115dd81611f11565b50565b6115e8611738565b60005b8181101561167a57600083838381811061160757611607612849565b9050602002013590506116198161167f565b611669576000818152600b602052604080822091909155517f202f1139a3e334b6056064c0e9b19fd07e44a88d8f6e5ded571b24cf8c371f12906116609083815260200190565b60405180910390a15b5061167381612878565b90506115eb565b505050565b6009546040805180820182523081526020810184815291517f4d616771000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff9081166004830152915160248201526000929190911690634d61677190604401602060405180830381865afa15801561170e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173291906127e1565b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146117b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000060448201526064016105a1565b565b6000818060200190518101906117d19190612a31565b602081015190915073ffffffffffffffffffffffffffffffffffffffff1615806118105750805173ffffffffffffffffffffffffffffffffffffffff16155b15611847576040517f3f8be2be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80516008805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556020808401516009805491851691909316179091556040805160608101825267ffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811682527f000000000000000000000000000000000000000000000000000000000000000016928101929092527f00000000000000000000000000000000000000000000000000000000000000009092168183015290517f4b4b9b37763b78c5a0701b5980dbb19a9104b78dfd1fcaa85c6260f01244bd429161195a918490612a72565b60405180910390a15050565b6000808a8a8a8a8a8a8a8a8a60405160200161198a99989796959493929190612ae2565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101207dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e01000000000000000000000000000000000000000000000000000000000000179150509998505050505050505050565b60008084519050600060018551830103905080600003611a4f5785600081518110611a3e57611a3e612849565b602002602001015192505050611be1565b610100811115611a8b576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008167ffffffffffffffff811115611aa657611aa66121fc565b604051908082528060200260200182016040528015611acf578160200160208202803683370190505b50905060008080805b85811015611bba57611b956001828b901c16600114611b15578a5160018401938c918110611b0857611b08612849565b6020026020010151611b53565b878510611b33578551600185019487918110611b0857611b08612849565b8b5160018601958d918110611b4a57611b4a612849565b60200260200101515b888610611b7e578651600186019588918110611b7157611b71612849565b6020026020010151612006565b8c5160018701968e918110611b7157611b71612849565b858281518110611ba757611ba7612849565b6020908102919091010152600101611ad8565b50836001860381518110611bd057611bd0612849565b602002602001015196505050505050505b9392505050565b600a5468010000000000000000900460ff1615611c31576040517feced32bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600954604080517f397796f7000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff9092169163397796f7916004808201926020929091908290030181865afa158015611ca1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cc591906127e1565b15611cfc576040517fc148371500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081806020019051810190611d129190612bec565b80515151909150151580611d34575080516020015167ffffffffffffffff1615155b15611dce5760085481516040517f866548c900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163866548c991611d8f91600401612e03565b600060405180830381600087803b158015611da957600080fd5b505af1158015611dbd573d6000803e3d6000fd5b505050506040810151611dce575050565b602081015151600a5467ffffffffffffffff9081169116141580611e09575060208082015190810151905167ffffffffffffffff9182169116115b15611e465780602001516040517fbb1ae18d0000000000000000000000000000000000000000000000000000000081526004016105a19190612e16565b6040810151611e81576040517f504570e300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6020808201510151611e94906001612e3b565b600a80547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff929092169190911790556040818101516000908152600b602052819020429055517fe81b49e583122eb290c46fc255c962b9a2dec468816c00fb7a2e6ebc42dc92d49061195a908390612e63565b3373ffffffffffffffffffffffffffffffffffffffff821603611f90576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016105a1565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60008183106120485760408051600160208083019190915281830185905260608083018790528351808403909101815260809092019092528051910120611be1565b60408051600160208083019190915281830186905260608083018690528351808403909101815260809092019092528051910120611be1565b8280548282559060005260206000209081019282156120fb579160200282015b828111156120fb57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906120a1565b5061210792915061212a565b5090565b604051806103e00160405280601f906020820280368337509192915050565b5b80821115612107576000815560010161212b565b815167ffffffffffffffff90811682526020808401519091169082015260408083015173ffffffffffffffffffffffffffffffffffffffff169082015260608101611732565b6000815180845260005b818110156121ab5760208185018101518683018201520161218f565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081526000611be16020830184612185565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561224e5761224e6121fc565b60405290565b6040516060810167ffffffffffffffff8111828210171561224e5761224e6121fc565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156122be576122be6121fc565b604052919050565b600067ffffffffffffffff8211156122e0576122e06121fc565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff811681146115dd57600080fd5b600082601f83011261231d57600080fd5b8135602061233261232d836122c6565b612277565b82815260059290921b8401810191818101908684111561235157600080fd5b8286015b84811015612375578035612368816122ea565b8352918301918301612355565b509695505050505050565b803560ff8116811461239157600080fd5b919050565b600082601f8301126123a757600080fd5b813567ffffffffffffffff8111156123c1576123c16121fc565b6123f260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612277565b81815284602083860101111561240757600080fd5b816020850160208301376000918101602001919091529392505050565b67ffffffffffffffff811681146115dd57600080fd5b803561239181612424565b60008060008060008060c0878903121561245e57600080fd5b863567ffffffffffffffff8082111561247657600080fd5b6124828a838b0161230c565b9750602089013591508082111561249857600080fd5b6124a48a838b0161230c565b96506124b260408a01612380565b955060608901359150808211156124c857600080fd5b6124d48a838b01612396565b94506124e260808a0161243a565b935060a08901359150808211156124f857600080fd5b5061250589828a01612396565b9150509295509295509295565b60008083601f84011261252457600080fd5b50813567ffffffffffffffff81111561253c57600080fd5b6020830191508360208260051b850101111561255757600080fd5b9250929050565b60008060008060006060868803121561257657600080fd5b853567ffffffffffffffff8082111561258e57600080fd5b61259a89838a01612512565b909750955060208801359150808211156125b357600080fd5b506125c088828901612512565b96999598509660400135949350505050565b600081518084526020808501945080840160005b8381101561261857815173ffffffffffffffffffffffffffffffffffffffff16875295820195908201906001016125e6565b509495945050505050565b602081526000611be160208301846125d2565b604081016117328284805173ffffffffffffffffffffffffffffffffffffffff908116835260209182015116910152565b60006020828403121561267957600080fd5b5035919050565b60006020828403121561269257600080fd5b8135611be181612424565b60008060008060008060008060e0898b0312156126b957600080fd5b606089018a8111156126ca57600080fd5b8998503567ffffffffffffffff808211156126e457600080fd5b818b0191508b601f8301126126f857600080fd5b81358181111561270757600080fd5b8c602082850101111561271957600080fd5b6020830199508098505060808b013591508082111561273757600080fd5b6127438c838d01612512565b909750955060a08b013591508082111561275c57600080fd5b506127698b828c01612512565b999c989b50969995989497949560c00135949350505050565b60006020828403121561279457600080fd5b8135611be1816122ea565b600080602083850312156127b257600080fd5b823567ffffffffffffffff8111156127c957600080fd5b6127d585828601612512565b90969095509350505050565b6000602082840312156127f357600080fd5b81518015158114611be157600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808202811582820484141761173257611732612803565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036128a9576128a9612803565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600063ffffffff8083168181036128f8576128f8612803565b6001019392505050565b600061012063ffffffff808d1684528b6020850152808b166040850152508060608401526129328184018a6125d2565b9050828103608084015261294681896125d2565b905060ff871660a084015282810360c08401526129638187612185565b905067ffffffffffffffff851660e08401528281036101008401526129888185612185565b9c9b505050505050505050505050565b60ff818116838216019081111561173257611732612803565b600060ff8316806129eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b8060ff84160491505092915050565b8082018082111561173257611732612803565b8183823760009101908152919050565b828152606082602083013760800192915050565b600060408284031215612a4357600080fd5b612a4b61222b565b8251612a56816122ea565b81526020830151612a66816122ea565b60208201529392505050565b825167ffffffffffffffff90811682526020808501519091169082015260408084015173ffffffffffffffffffffffffffffffffffffffff169082015260a08101825173ffffffffffffffffffffffffffffffffffffffff90811660608401526020840151166080830152611be1565b60006101208b835273ffffffffffffffffffffffffffffffffffffffff8b16602084015267ffffffffffffffff808b166040850152816060850152612b298285018b6125d2565b91508382036080850152612b3d828a6125d2565b915060ff881660a085015283820360c0850152612b5a8288612185565b90861660e085015283810361010085015290506129888185612185565b805177ffffffffffffffffffffffffffffffffffffffffffffffff8116811461239157600080fd5b805161239181612424565b600060408284031215612bbc57600080fd5b612bc461222b565b90508151612bd181612424565b81526020820151612be181612424565b602082015292915050565b60006020808385031215612bff57600080fd5b825167ffffffffffffffff80821115612c1757600080fd5b9084019060808287031215612c2b57600080fd5b612c33612254565b825182811115612c4257600080fd5b830160608189031215612c5457600080fd5b612c5c612254565b815184811115612c6b57600080fd5b82019350601f84018913612c7e57600080fd5b8351612c8c61232d826122c6565b81815260069190911b8501870190878101908b831115612cab57600080fd5b958801955b82871015612cff576040878d031215612cc95760008081fd5b612cd161222b565b8751612cdc816122ea565b8152612ce9888b01612b77565b818b015282526040969096019590880190612cb0565b835250612d0f9050828701612b9f565b86820152612d1f60408301612b77565b6040820152825250612d3387848601612baa565b93810193909352506060015160408201529392505050565b805160608084528151908401819052600091602091908201906080860190845b81811015612dc2578351805173ffffffffffffffffffffffffffffffffffffffff16845285015177ffffffffffffffffffffffffffffffffffffffffffffffff168584015292840192604090920191600101612d6b565b505067ffffffffffffffff83860151168387015260408501519250610dbb604087018477ffffffffffffffffffffffffffffffffffffffffffffffff169052565b602081526000611be16020830184612d4b565b604081016117328284805167ffffffffffffffff908116835260209182015116910152565b67ffffffffffffffff818116838216019080821115612e5c57612e5c612803565b5092915050565b602081526000825160806020840152612e7f60a0840182612d4b565b90506020840151612eaa6040850182805167ffffffffffffffff908116835260209182015116910152565b5060408401516080840152809150509291505056fea164736f6c6343000813000a",
    "sourceMap": "461:8448:2:-:0;;;2309:29;;;-1:-1:-1;;;;;;2390:29:2;2337:1;2390:29;;;2593:371;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;316:10:3;;345:1:44;316:10:3;544:59:45;;;;-1:-1:-1;;;544:59:45;;1215:2:69;544:59:45;;;1197:21:69;1254:2;1234:18;;;1227:30;1293:26;1273:18;;;1266:54;1337:18;;544:59:45;;;;;;;;;610:7;:18;;-1:-1:-1;;;;;;610:18:45;-1:-1:-1;;;;;610:18:45;;;;;;;;;;638:26;;;634:79;;674:32;693:12;674:18;:32::i;:::-;-1:-1:-1;;;2660:19:2::1;::::0;::::1;::::0;-1:-1:-1;;;;;2660:33:2::1;::::0;;:68:::1;;-1:-1:-1::0;2697:26:2;;-1:-1:-1;;;;;2697:31:2::1;::::0;2660:68:::1;:109;;;-1:-1:-1::0;2732:32:2::1;::::0;::::1;::::0;-1:-1:-1;;;;;2732:37:2::1;::::0;2660:109:::1;2656:154;;;2784:26;;-1:-1:-1::0;;;2784:26:2::1;;;;;;;;;;;2656:154;2835:26:::0;;-1:-1:-1;;;;;2817:44:2;;::::1;;::::0;2891:32:::1;::::0;::::1;::::0;2867:56:::1;;::::0;2940:19:::1;;::::0;-1:-1:-1;;;;;2929:30:2::1;;::::0;461:8448;;1497:188:45;1565:10;-1:-1:-1;;;;;1559:16:45;;;1551:52;;;;-1:-1:-1;;;1551:52:45;;1568:2:69;1551:52:45;;;1550:21:69;1607:2;1587:18;;;1580:30;1646:25;1626:18;;;1619:53;1689:18;;1551:52:45;1366:347:69;1551:52:45;1610:14;:19;;-1:-1:-1;;;;;;1610:19:45;-1:-1:-1;;;;;1610:19:45;;;;;;;;;-1:-1:-1;1668:7:45;;1641:39;;1610:19;;1668:7;;1641:39;;-1:-1:-1;1641:39:45;1497:188;:::o;14:175:69:-;92:13;;-1:-1:-1;;;;;134:30:69;;124:41;;114:69;;179:1;176;169:12;114:69;14:175;;;:::o;194:814::-;294:6;347:2;335:9;326:7;322:23;318:32;315:52;;;363:1;360;353:12;315:52;396:2;390:9;438:2;426:15;;-1:-1:-1;;;;;456:34:69;;492:22;;;453:62;450:185;;;557:10;552:3;548:20;545:1;538:31;592:4;589:1;582:15;620:4;617:1;610:15;450:185;651:2;644:22;690:39;719:9;690:39;:::i;:::-;682:6;675:55;763:48;807:2;796:9;792:18;763:48;:::i;:::-;758:2;746:15;;739:73;855:2;840:18;;834:25;-1:-1:-1;;;;;888:31:69;;878:42;;868:70;;934:1;931;924:12;868:70;966:2;954:15;;947:30;958:6;194:814;-1:-1:-1;;;194:814:69:o;1366:347::-;461:8448:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101775760003560e01c806379ba5097116100d8578063ad7a22f81161008c578063f2fde38b11610066578063f2fde38b1461045f578063f47a869014610472578063ff888fb11461048557600080fd5b8063ad7a22f814610419578063afcb95d71461042c578063b1dc65a41461044c57600080fd5b80638456cb59116100bd5780638456cb59146103c95780638da5cb5b146103d1578063a7206cd6146103f957600080fd5b806379ba50971461039157806381ff70481461039957600080fd5b80633f4ba83a1161012f5780635c975abb116101145780635c975abb14610317578063666cab8d1461032e5780637437ff9f1461034357600080fd5b80633f4ba83a146102f35780634120fccd146102fb57600080fd5b8063181f5a7711610160578063181f5a77146102745780631ef38174146102bd57806332048875146102d257600080fd5b806306285c691461017c5780630a6cd30d1461025c575b600080fd5b610246604080516060810182526000808252602082018190529181019190915260405180606001604052807f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16815250905090565b604051610253919061213f565b60405180910390f35b610264610498565b6040519015158152602001610253565b6102b06040518060400160405280601181526020017f436f6d6d697453746f726520312e302e3000000000000000000000000000000081525081565b60405161025391906121e9565b6102d06102cb366004612445565b610532565b005b6102e56102e036600461255e565b610cb9565b604051908152602001610253565b6102d0610dc4565b600a5460405167ffffffffffffffff9091168152602001610253565b600a5468010000000000000000900460ff16610264565b610336610e2a565b6040516102539190612623565b6040805180820182526000808252602091820152815180830190925260085473ffffffffffffffffffffffffffffffffffffffff908116835260095416908201526040516102539190612636565b6102d0610e99565b6004546002546040805163ffffffff80851682526401000000009094049093166020840152820152606001610253565b6102d0610f96565b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610253565b6102e5610407366004612667565b6000908152600b602052604090205490565b6102d0610427366004612680565b611001565b604080516001815260006020820181905291810191909152606001610253565b6102d061045a36600461269d565b611044565b6102d061046d366004612782565b6115cc565b6102d061048036600461279f565b6115e0565b610264610493366004612667565b61167f565b600954604080517f397796f7000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163397796f79160048083019260209291908290030181865afa158015610508573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052c91906127e1565b15905090565b855185518560ff16601f8311156105aa576040517f89a6198900000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f746f6f206d616e79207369676e6572730000000000000000000000000000000060448201526064015b60405180910390fd5b80600003610614576040517f89a6198900000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f66206d75737420626520706f736974697665000000000000000000000000000060448201526064016105a1565b8183146106a2576040517f89a61989000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f6f7261636c6520616464726573736573206f7574206f6620726567697374726160448201527f74696f6e0000000000000000000000000000000000000000000000000000000060648201526084016105a1565b6106ad816003612832565b8311610715576040517f89a6198900000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6661756c74792d6f7261636c65206620746f6f2068696768000000000000000060448201526064016105a1565b61071d611738565b610726866117bb565b60065460005b8181101561082257600560006006838154811061074b5761074b612849565b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff168352820192909252604001812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000169055600780546005929190849081106107bb576107bb612849565b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff168352820192909252604001902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016905561081b81612878565b905061072c565b50895160005b81811015610b615760008c828151811061084457610844612849565b6020026020010151905060006002811115610861576108616128b0565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260056020526040902054610100900460ff1660028111156108a0576108a06128b0565b14610907576040517f89a6198900000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f7265706561746564207369676e6572206164647265737300000000000000000060448201526064016105a1565b6040805180820190915260ff83168152602081016001905273ffffffffffffffffffffffffffffffffffffffff821660009081526005602090815260409091208251815460ff9091167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082168117835592840151919283917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000016176101008360028111156109b7576109b76128b0565b021790555090505060008c83815181106109d3576109d3612849565b60200260200101519050600060028111156109f0576109f06128b0565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260056020526040902054610100900460ff166002811115610a2f57610a2f6128b0565b14610a96576040517f89a6198900000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f7265706561746564207472616e736d697474657220616464726573730000000060448201526064016105a1565b6040805180820190915260ff84168152602081016002905273ffffffffffffffffffffffffffffffffffffffff821660009081526005602090815260409091208251815460ff9091167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082168117835592840151919283917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001617610100836002811115610b4657610b466128b0565b0217905550905050505080610b5a90612878565b9050610828565b508a51610b759060069060208e0190612081565b508951610b899060079060208d0190612081565b506003805460ff838116610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000909216908c161717905560048054610c0f914691309190600090610be19063ffffffff166128df565b91906101000a81548163ffffffff021916908363ffffffff160217905563ffffffff168e8e8e8e8e8e611966565b600260000181905550600060048054906101000a900463ffffffff169050436004806101000a81548163ffffffff021916908363ffffffff1602179055507f1591690b8638f5fb2dbec82ac741805ac5da8b45dc5263f4875b0496fdce4e0581600260000154600460009054906101000a900463ffffffff168f8f8f8f8f8f604051610ca399989796959493929190612902565b60405180910390a1505050505050505050505050565b600a5460009068010000000000000000900460ff1615610d05576040517feced32bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610d7687878080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808b0282810182019093528a82529093508a925089918291850190849080828437600092019190915250889250611a11915050565b6000818152600b60205260409020549091501580610d9a5750610d988161167f565b155b15610da9576000915050610dbb565b6000908152600b602052604090205490505b95945050505050565b610dcc611738565b600a80547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff1690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a1565b60606007805480602002602001604051908101604052809291908181526020018280548015610e8f57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610e64575b5050505050905090565b60015473ffffffffffffffffffffffffffffffffffffffff163314610f1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e65720000000000000000000060448201526064016105a1565b60008054337fffffffffffffffffffffffff00000000000000000000000000000000000000008083168217845560018054909116905560405173ffffffffffffffffffffffffffffffffffffffff90921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b610f9e611738565b600a80547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16680100000000000000001790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602001610e20565b611009611738565b600a80547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff92909216919091179055565b61108387878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611be892505050565b6040805160608101825260025480825260035460ff8082166020850152610100909104169282019290925289359182146110f65780516040517f93df584c0000000000000000000000000000000000000000000000000000000081526004810191909152602481018390526044016105a1565b6040805183815260208c81013560081c63ffffffff16908201527fb04e63db38c49950639fa09d29872f21f5d49d614f3a969d8adf3d4b52e41a62910160405180910390a16002816020015182604001516111519190612998565b61115b91906129b1565b611166906001612998565b60ff1686146111a1576040517f71253a2500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8584146111da576040517fa75d88af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360009081526005602090815260408083208151808301909252805460ff8082168452929391929184019161010090910416600281111561121d5761121d6128b0565b600281111561122e5761122e6128b0565b905250905060028160200151600281111561124b5761124b6128b0565b14801561129257506007816000015160ff168154811061126d5761126d612849565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff1633145b6112c8576040517fda0f08e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060006112d6856020612832565b6112e1886020612832565b6112ed8b6101446129fa565b6112f791906129fa565b61130191906129fa565b9050368114611345576040517f8e1192e1000000000000000000000000000000000000000000000000000000008152600481018290523660248201526044016105a1565b5060008989604051611358929190612a0d565b60405190819003812061136f918d90602001612a1d565b60405160208183030381529060405280519060200120905061138f61210b565b8760005b818110156115bc5760006001858984602081106113b2576113b2612849565b6113bf91901a601b612998565b8e8e868181106113d1576113d1612849565b905060200201358d8d878181106113ea576113ea612849565b9050602002013560405160008152602001604052604051611427949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015611449573d6000803e3d6000fd5b5050604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081015173ffffffffffffffffffffffffffffffffffffffff8116600090815260056020908152848220848601909552845460ff80821686529397509195509293928401916101009091041660028111156114cc576114cc6128b0565b60028111156114dd576114dd6128b0565b90525090506001816020015160028111156114fa576114fa6128b0565b14611531576040517fca31867a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8051859060ff16601f811061154857611548612849565b602002015115611584576040517ff67bc7c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600185826000015160ff16601f811061159f5761159f612849565b91151560209092020152506115b5905081612878565b9050611393565b5050505050505050505050505050565b6115d4611738565b6115dd81611f11565b50565b6115e8611738565b60005b8181101561167a57600083838381811061160757611607612849565b9050602002013590506116198161167f565b611669576000818152600b602052604080822091909155517f202f1139a3e334b6056064c0e9b19fd07e44a88d8f6e5ded571b24cf8c371f12906116609083815260200190565b60405180910390a15b5061167381612878565b90506115eb565b505050565b6009546040805180820182523081526020810184815291517f4d616771000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff9081166004830152915160248201526000929190911690634d61677190604401602060405180830381865afa15801561170e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173291906127e1565b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146117b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000060448201526064016105a1565b565b6000818060200190518101906117d19190612a31565b602081015190915073ffffffffffffffffffffffffffffffffffffffff1615806118105750805173ffffffffffffffffffffffffffffffffffffffff16155b15611847576040517f3f8be2be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80516008805473ffffffffffffffffffffffffffffffffffffffff9283167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556020808401516009805491851691909316179091556040805160608101825267ffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811682527f000000000000000000000000000000000000000000000000000000000000000016928101929092527f00000000000000000000000000000000000000000000000000000000000000009092168183015290517f4b4b9b37763b78c5a0701b5980dbb19a9104b78dfd1fcaa85c6260f01244bd429161195a918490612a72565b60405180910390a15050565b6000808a8a8a8a8a8a8a8a8a60405160200161198a99989796959493929190612ae2565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101207dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e01000000000000000000000000000000000000000000000000000000000000179150509998505050505050505050565b60008084519050600060018551830103905080600003611a4f5785600081518110611a3e57611a3e612849565b602002602001015192505050611be1565b610100811115611a8b576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008167ffffffffffffffff811115611aa657611aa66121fc565b604051908082528060200260200182016040528015611acf578160200160208202803683370190505b50905060008080805b85811015611bba57611b956001828b901c16600114611b15578a5160018401938c918110611b0857611b08612849565b6020026020010151611b53565b878510611b33578551600185019487918110611b0857611b08612849565b8b5160018601958d918110611b4a57611b4a612849565b60200260200101515b888610611b7e578651600186019588918110611b7157611b71612849565b6020026020010151612006565b8c5160018701968e918110611b7157611b71612849565b858281518110611ba757611ba7612849565b6020908102919091010152600101611ad8565b50836001860381518110611bd057611bd0612849565b602002602001015196505050505050505b9392505050565b600a5468010000000000000000900460ff1615611c31576040517feced32bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600954604080517f397796f7000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff9092169163397796f7916004808201926020929091908290030181865afa158015611ca1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cc591906127e1565b15611cfc576040517fc148371500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081806020019051810190611d129190612bec565b80515151909150151580611d34575080516020015167ffffffffffffffff1615155b15611dce5760085481516040517f866548c900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9092169163866548c991611d8f91600401612e03565b600060405180830381600087803b158015611da957600080fd5b505af1158015611dbd573d6000803e3d6000fd5b505050506040810151611dce575050565b602081015151600a5467ffffffffffffffff9081169116141580611e09575060208082015190810151905167ffffffffffffffff9182169116115b15611e465780602001516040517fbb1ae18d0000000000000000000000000000000000000000000000000000000081526004016105a19190612e16565b6040810151611e81576040517f504570e300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6020808201510151611e94906001612e3b565b600a80547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff929092169190911790556040818101516000908152600b602052819020429055517fe81b49e583122eb290c46fc255c962b9a2dec468816c00fb7a2e6ebc42dc92d49061195a908390612e63565b3373ffffffffffffffffffffffffffffffffffffffff821603611f90576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016105a1565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60008183106120485760408051600160208083019190915281830185905260608083018790528351808403909101815260809092019092528051910120611be1565b60408051600160208083019190915281830186905260608083018690528351808403909101815260809092019092528051910120611be1565b8280548282559060005260206000209081019282156120fb579160200282015b828111156120fb57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906120a1565b5061210792915061212a565b5090565b604051806103e00160405280601f906020820280368337509192915050565b5b80821115612107576000815560010161212b565b815167ffffffffffffffff90811682526020808401519091169082015260408083015173ffffffffffffffffffffffffffffffffffffffff169082015260608101611732565b6000815180845260005b818110156121ab5760208185018101518683018201520161218f565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081526000611be16020830184612185565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561224e5761224e6121fc565b60405290565b6040516060810167ffffffffffffffff8111828210171561224e5761224e6121fc565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156122be576122be6121fc565b604052919050565b600067ffffffffffffffff8211156122e0576122e06121fc565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff811681146115dd57600080fd5b600082601f83011261231d57600080fd5b8135602061233261232d836122c6565b612277565b82815260059290921b8401810191818101908684111561235157600080fd5b8286015b84811015612375578035612368816122ea565b8352918301918301612355565b509695505050505050565b803560ff8116811461239157600080fd5b919050565b600082601f8301126123a757600080fd5b813567ffffffffffffffff8111156123c1576123c16121fc565b6123f260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612277565b81815284602083860101111561240757600080fd5b816020850160208301376000918101602001919091529392505050565b67ffffffffffffffff811681146115dd57600080fd5b803561239181612424565b60008060008060008060c0878903121561245e57600080fd5b863567ffffffffffffffff8082111561247657600080fd5b6124828a838b0161230c565b9750602089013591508082111561249857600080fd5b6124a48a838b0161230c565b96506124b260408a01612380565b955060608901359150808211156124c857600080fd5b6124d48a838b01612396565b94506124e260808a0161243a565b935060a08901359150808211156124f857600080fd5b5061250589828a01612396565b9150509295509295509295565b60008083601f84011261252457600080fd5b50813567ffffffffffffffff81111561253c57600080fd5b6020830191508360208260051b850101111561255757600080fd5b9250929050565b60008060008060006060868803121561257657600080fd5b853567ffffffffffffffff8082111561258e57600080fd5b61259a89838a01612512565b909750955060208801359150808211156125b357600080fd5b506125c088828901612512565b96999598509660400135949350505050565b600081518084526020808501945080840160005b8381101561261857815173ffffffffffffffffffffffffffffffffffffffff16875295820195908201906001016125e6565b509495945050505050565b602081526000611be160208301846125d2565b604081016117328284805173ffffffffffffffffffffffffffffffffffffffff908116835260209182015116910152565b60006020828403121561267957600080fd5b5035919050565b60006020828403121561269257600080fd5b8135611be181612424565b60008060008060008060008060e0898b0312156126b957600080fd5b606089018a8111156126ca57600080fd5b8998503567ffffffffffffffff808211156126e457600080fd5b818b0191508b601f8301126126f857600080fd5b81358181111561270757600080fd5b8c602082850101111561271957600080fd5b6020830199508098505060808b013591508082111561273757600080fd5b6127438c838d01612512565b909750955060a08b013591508082111561275c57600080fd5b506127698b828c01612512565b999c989b50969995989497949560c00135949350505050565b60006020828403121561279457600080fd5b8135611be1816122ea565b600080602083850312156127b257600080fd5b823567ffffffffffffffff8111156127c957600080fd5b6127d585828601612512565b90969095509350505050565b6000602082840312156127f357600080fd5b81518015158114611be157600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808202811582820484141761173257611732612803565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036128a9576128a9612803565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600063ffffffff8083168181036128f8576128f8612803565b6001019392505050565b600061012063ffffffff808d1684528b6020850152808b166040850152508060608401526129328184018a6125d2565b9050828103608084015261294681896125d2565b905060ff871660a084015282810360c08401526129638187612185565b905067ffffffffffffffff851660e08401528281036101008401526129888185612185565b9c9b505050505050505050505050565b60ff818116838216019081111561173257611732612803565b600060ff8316806129eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b8060ff84160491505092915050565b8082018082111561173257611732612803565b8183823760009101908152919050565b828152606082602083013760800192915050565b600060408284031215612a4357600080fd5b612a4b61222b565b8251612a56816122ea565b81526020830151612a66816122ea565b60208201529392505050565b825167ffffffffffffffff90811682526020808501519091169082015260408084015173ffffffffffffffffffffffffffffffffffffffff169082015260a08101825173ffffffffffffffffffffffffffffffffffffffff90811660608401526020840151166080830152611be1565b60006101208b835273ffffffffffffffffffffffffffffffffffffffff8b16602084015267ffffffffffffffff808b166040850152816060850152612b298285018b6125d2565b91508382036080850152612b3d828a6125d2565b915060ff881660a085015283820360c0850152612b5a8288612185565b90861660e085015283810361010085015290506129888185612185565b805177ffffffffffffffffffffffffffffffffffffffffffffffff8116811461239157600080fd5b805161239181612424565b600060408284031215612bbc57600080fd5b612bc461222b565b90508151612bd181612424565b81526020820151612be181612424565b602082015292915050565b60006020808385031215612bff57600080fd5b825167ffffffffffffffff80821115612c1757600080fd5b9084019060808287031215612c2b57600080fd5b612c33612254565b825182811115612c4257600080fd5b830160608189031215612c5457600080fd5b612c5c612254565b815184811115612c6b57600080fd5b82019350601f84018913612c7e57600080fd5b8351612c8c61232d826122c6565b81815260069190911b8501870190878101908b831115612cab57600080fd5b958801955b82871015612cff576040878d031215612cc95760008081fd5b612cd161222b565b8751612cdc816122ea565b8152612ce9888b01612b77565b818b015282526040969096019590880190612cb0565b835250612d0f9050828701612b9f565b86820152612d1f60408301612b77565b6040820152825250612d3387848601612baa565b93810193909352506060015160408201529392505050565b805160608084528151908401819052600091602091908201906080860190845b81811015612dc2578351805173ffffffffffffffffffffffffffffffffffffffff16845285015177ffffffffffffffffffffffffffffffffffffffffffffffff168584015292840192604090920191600101612d6b565b505067ffffffffffffffff83860151168387015260408501519250610dbb604087018477ffffffffffffffffffffffffffffffffffffffffffffffff169052565b602081526000611be16020830184612d4b565b604081016117328284805167ffffffffffffffff908116835260209182015116910152565b67ffffffffffffffff818116838216019080821115612e5c57612e5c612803565b5092915050565b602081526000825160806020840152612e7f60a0840182612d4b565b90506020840151612eaa6040850182805167ffffffffffffffff908116835260209182015116910152565b5060408401516080840152809150509291505056fea164736f6c6343000813000a",
    "sourceMap": "461:8448:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6667:197;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;6751:108:2;;;;;;;;6780:15;6751:108;;;;;;6818:21;6751:108;;;;;;6849:8;6751:108;;;;;6744:115;;6667:197;;;;;;;;;:::i;:::-;;;;;;;;7924:108;;;:::i;:::-;;;763:14:69;;756:22;738:41;;726:2;711:18;7924:108:2;598:187:69;1827:68:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4305:1823:31:-;;;;;;:::i;:::-;;:::i;:::-;;4938:420:2;;;;;;:::i;:::-;;:::i;:::-;;;7164:25:69;;;7152:2;7137:18;4938:420:2;7018:177:69;8811:96:2;;;:::i;3284:98::-;3367:10;;3284:98;;3367:10;;;;7344:50:69;;7332:2;7317:18;3284:98:2;7200:200:69;8497:71:2;8555:8;;;;;;;8497:71;;6591:100:31;;;:::i;:::-;;;;;;;:::i;6956:106:2:-;-1:-1:-1;;;;;;;;;;;;;;;;;7035:22:2;;;;;;;;7042:15;7035:22;;;;;;;;;;;;;;6956:106;;;;;;:::i;1016:265:45:-;;;:::i;9875:236:31:-;10032:13;;10074:12;:31;9875:236;;;10032:13;;;;8894:34:69;;10047:25:31;;;;;;;8959:2:69;8944:18;;8937:43;8996:18;;8989:34;8853:2;8838:18;9875:236:31;8667:362:69;8643:91:2;;;:::i;1332:81:45:-;1379:7;1401;1332:81;;1401:7;;;;9180:74:69;;9168:2;9153:18;1332:81:45;9034:226:69;3897:100:2;;;;;;:::i;:::-;3957:7;3979:13;;;:7;:13;;;;;;;3897:100;3488:89;;;;;;:::i;:::-;;:::i;10146:198:31:-;;;;10311:4;9894:41:69;;10244:13:31;9966:2:69;9951:18;;9944:34;;;9994:18;;;9987:51;;;;9882:2;9867:18;10146:198:31;9700:344:69;7157:2358:31;;;;;;:::i;:::-;;:::i;826:98:45:-;;;;;;:::i;:::-;;:::i;4620:283:2:-;;;;;;:::i;:::-;;:::i;4170:172::-;;;;;;:::i;:::-;;:::i;7924:108::-;7996:19;;7991:36;;;;;;;;7971:4;;7996:19;;;7991:34;;:36;;;;;;;;;;;;;;7996:19;7991:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7990:37;7983:44;;7924:108;:::o;4305:1823:31:-;4544:7;:14;4560:12;:19;4581:1;3367:430;;307:2:30;3475:10:31;:28;3471:74;;;3512:33;;;;;12673:2:69;3512:33:31;;;12655:21:69;12712:2;12692:18;;;12685:30;12751:18;12731;;;12724:46;12787:18;;3512:33:31;;;;;;;;3471:74;3555:1;3560;3555:6;3551:54;;3570:35;;;;;13018:2:69;3570:35:31;;;13000:21:69;13057:2;13037:18;;;13030:30;13096:20;13076:18;;;13069:48;13134:18;;3570:35:31;12816:342:69;3551:54:31;3629:15;3615:10;:29;3611:95;;3653:53;;;;;13365:2:69;3653:53:31;;;13347:21:69;13404:2;13384:18;;;13377:30;13443:34;13423:18;;;13416:62;13514:6;13494:18;;;13487:34;13538:19;;3653:53:31;13163:400:69;3611:95:31;3730:5;3734:1;3730;:5;:::i;:::-;3716:10;:19;3712:73;;3744:41;;;;;14132:2:69;3744:41:31;;;14114:21:69;14171:2;14151:18;;;14144:30;14210:26;14190:18;;;14183:54;14254:18;;3744:41:31;13930:348:69;3712:73:31;1956:20:45::1;:18;:20::i;:::-;4600:31:31::2;4617:13;4600:16;:31::i;:::-;4663:9;:16:::0;4637:23:::2;4685:134;4709:15;4705:1;:19;4685:134;;;4746:9;:23;4756:9;4766:1;4756:12;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;;;::::2;::::0;::::2;;4746:23:::0;;;::::2;::::0;;;;;;;;4739:30;;;;;;4794:14:::2;:17:::0;;4784:9:::2;::::0;4756:12;4794:14;4809:1;;4794:17;::::2;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;;;::::2;::::0;::::2;;4784:28:::0;;;::::2;::::0;;;;;;;;4777:35;;;;;;4726:3:::2;::::0;::::2;:::i;:::-;;;4685:134;;;-1:-1:-1::0;4852:14:31;;4825:24:::2;4872:509;4896:16;4892:1;:20;4872:509;;;4973:14;4990:7;4998:1;4990:10;;;;;;;;:::i;:::-;;;;;;;4973:27;;5038:10;5012:36;;;;;;;;:::i;:::-;:17;::::0;::::2;;::::0;;;:9:::2;:17;::::0;;;;:22;::::2;::::0;::::2;;;:36;::::0;::::2;;;;;;:::i;:::-;;5008:89;;5057:40;::::0;::::2;::::0;;15063:2:69;5057:40:31::2;::::0;::::2;15045:21:69::0;15102:2;15082:18;;;15075:30;15141:25;15121:18;;;15114:53;15184:18;;5057:40:31::2;14861:347:69::0;5008:89:31::2;5125:29;::::0;;;;::::2;::::0;;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;5142:11;5125:29:::0;;5105:17:::2;::::0;::::2;;::::0;;;:9:::2;:17;::::0;;;;;;;:49;;;;::::2;::::0;;::::2;::::0;;::::2;::::0;::::2;::::0;;;;::::2;::::0;:17;;;;:49;;;::::2;::::0;::::2;::::0;::::2;;;;;;:::i;:::-;;;;;;;;;5163:19;5185:12;5198:1;5185:15;;;;;;;;:::i;:::-;;;;;;;5163:37;;5243:10;5212:41;;;;;;;;:::i;:::-;:22;::::0;::::2;;::::0;;;:9:::2;:22;::::0;;;;:27;::::2;::::0;::::2;;;:41;::::0;::::2;;;;;;:::i;:::-;;5208:99;;5262:45;::::0;::::2;::::0;;15415:2:69;5262:45:31::2;::::0;::::2;15397:21:69::0;15454:2;15434:18;;;15427:30;15493;15473:18;;;15466:58;15541:18;;5262:45:31::2;15213:352:69::0;5208:99:31::2;5340:34;::::0;;;;::::2;::::0;;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;5357:16;5340:34:::0;;5315:22:::2;::::0;::::2;;::::0;;;:9:::2;:22;::::0;;;;;;;:59;;;;::::2;::::0;;::::2;::::0;;::::2;::::0;::::2;::::0;;;;::::2;::::0;:22;;;;:59;;;::::2;::::0;::::2;::::0;::::2;;;;;;:::i;:::-;;;;;;;;;4919:462;;4914:3;;;;:::i;:::-;;;4872:509;;;-1:-1:-1::0;5387:19:31;;::::2;::::0;:9:::2;::::0;:19:::2;::::0;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;5412:29:31;;::::2;::::0;:14:::2;::::0;:29:::2;::::0;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;5448:14:31;:18;;::::2;5472:40:::0;;::::2;5448:18;5472:40;::::0;;;;5448:18;;::::2;5472:40:::0;::::2;::::0;;5631:13:::2;5629:15:::0;;5552:214:::2;::::0;5587:13:::2;::::0;5616:4:::2;::::0;5631:13;5448:14:::2;::::0;5629:15:::2;::::0;::::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;5552:214;;5652:7;5667:12;5687:1;5696:13;5717:21;5746:14;5552:27;:214::i;:::-;5518:12;:31;;:248;;;;5773:32;5808:25;::::0;::::2;;;;;;;;5773:60;;5874:12;5839:25;::::0;:48:::2;;;;;;;;;;;;;;;;;;5899:224;5916:25;5949:12;:31;;;5988:13;;;;;;;;;;;6009:7;6024:12;6044:1;6053:13;6074:21;6103:14;5899:224;;;;;;;;;;;;;;:::i;:::-;;;;;;;;4594:1534;;;4305:1823:::0;;;;;;;;;:::o;4938:420:2:-;8555:8;;5099:17;;8555:8;;;;;8372:34;;;8393:13;;;;;;;;;;;;;;8372:34;5124:12:::1;5139:64;5167:12;;5139:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;5139:64:2::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;-1:-1:-1;5181:6:2;;-1:-1:-1;5181:6:2;;;;5139:64;::::1;::::0;5181:6;;5139:64;5181:6;5139:64;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;5189:13:2;;-1:-1:-1;5139:27:2::1;::::0;-1:-1:-1;;5139:64:2:i:1;:::-;5265:13;::::0;;;:7:::1;:13;::::0;;;;;5124:79;;-1:-1:-1;5265:18:2;;:38:::1;;;5288:15;5298:4;5288:9;:15::i;:::-;5287:16;5265:38;5261:67;;;5320:1;5313:8;;;;;5261:67;5340:13;::::0;;;:7:::1;:13;::::0;;;;;;-1:-1:-1;8412:1:2::1;4938:420:::0;;;;;;;:::o;8811:96::-;1956:20:45;:18;:20::i;:::-;8855:8:2::1;:16:::0;;;::::1;::::0;;8882:20:::1;::::0;8891:10:::1;9180:74:69::0;;8882:20:2::1;::::0;9168:2:69;9153:18;8882:20:2::1;;;;;;;;8811:96::o:0;6591:100:31:-;6641:16;6672:14;6665:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6591:100;:::o;1016:265:45:-;1089:14;;;;1075:10;:28;1067:63;;;;;;;17225:2:69;1067:63:45;;;17207:21:69;17264:2;17244:18;;;17237:30;17303:24;17283:18;;;17276:52;17345:18;;1067:63:45;17023:346:69;1067:63:45;1137:16;1156:7;;1179:10;1169:20;;;;;;;;-1:-1:-1;1195:27:45;;;;;;;1234:42;;1156:7;;;;;1179:10;;1156:7;;1234:42;;;1061:220;1016:265::o;8643:91:2:-;1956:20:45;:18;:20::i;:::-;8685:8:2::1;:15:::0;;;::::1;::::0;::::1;::::0;;8711:18:::1;::::0;8718:10:::1;9180:74:69::0;;8711:18:2::1;::::0;9168:2:69;9153:18;8711::2::1;9034:226:69::0;3488:89:2;1956:20:45;:18;:20::i;:::-;3551:10:2::1;:21:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;3488:89::o;7157:2358:31:-;7512:15;7520:6;;7512:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7512:7:31;;-1:-1:-1;;;7512:15:31:i;:::-;7758:43;;;;;;;;7789:12;7758:43;;;;;;;;;;7736:16;7758:43;;;;;;;;;;;;;;;7736:16;;;7812:45;;7808:129;;7893:29;;7872:65;;;;;;;;17548:25:69;;;;17589:18;;;17582:34;;;17521:18;;7872:65:31;17374:248:69;7808:129:31;7949:65;;;17799:25:69;;;7990:16:31;;;;;8011:1;7982:30;17872:10:69;17860:23;17840:18;;;17833:51;7949:65:31;;17772:18:69;7949:65:31;;;;;;;8070:1;8054:10;:12;;;8039:10;:12;;;:27;;;;:::i;:::-;8038:33;;;;:::i;:::-;:37;;8074:1;8038:37;:::i;:::-;8025:50;;;;8021:88;;8084:25;;;;;;;;;;;;;;8021:88;8119:22;;;8115:64;;8150:29;;;;;;;;;;;;;;8115:64;8289:10;8251:25;8279:21;;;:9;:21;;;;;;;;8251:49;;;;;;;;;;;;;;;;;;8279:21;;8251:49;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;8251:49:31;-1:-1:-1;8385:16:31;8365:11;:16;;;:36;;;;;;;;:::i;:::-;;:87;;;;;8419:14;8434:11;:17;;;8419:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8405:10;:47;8365:87;8359:136;;8470:25;;;;;;;;;;;;;;8359:136;-1:-1:-1;8572:26:31;8783:22;:2;8803;8783:22;:::i;:::-;8721;:2;8741;8721:22;:::i;:::-;8601:75;8663:6;2867:411;8601:75;:::i;:::-;:142;;;;:::i;:::-;:204;;;;:::i;:::-;8572:233;-1:-1:-1;8847:8:31;:37;;8843:105;;8893:55;;;;;;;;17548:25:69;;;8932:8:31;17589:18:69;;;17582:34;17521:18;;8893:55:31;17374:248:69;8843:105:31;8564:391;9005:9;9054:6;;9044:17;;;;;;;:::i;:::-;;;;;;;;;9027:50;;9063:13;;9027:50;;;:::i;:::-;;;;;;;;;;;;;9017:61;;;;;;9005:73;;9084:35;;:::i;:::-;9155:2;9126:26;9170:341;9194:18;9190:1;:22;9170:341;;;9227:14;9244:48;9254:1;9263:5;9269:1;9263:8;;;;;;;:::i;:::-;9257:20;;9263:8;;9275:2;9257:20;:::i;:::-;9279:2;;9282:1;9279:5;;;;;;;:::i;:::-;;;;;;;9286:2;;9289:1;9286:5;;;;;;;:::i;:::-;;;;;;;9244:48;;;;;;;;;;;;;;;;;19571:25:69;;;19644:4;19632:17;;;;19627:2;19612:18;;19605:45;19681:2;19666:18;;19659:34;19724:2;19709:18;;19702:34;19558:3;19543:19;;19344:398;9244:48:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9244:48:31;;;;;;;9323:17;;;9300:20;9323:17;;;:9;9244:48;9323:17;;;;;;9300:40;;;;;;;;;;;;;;9244:48;;-1:-1:-1;9300:20:31;;-1:-1:-1;9244:48:31;;9323:17;9300:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;9300:40:31;-1:-1:-1;9367:11:31;9352:6;:11;;;:26;;;;;;;;:::i;:::-;;9348:59;;9387:20;;;;;;;;;;;;;;9348:59;9426:12;;9419:6;;:20;;;;;;;;;:::i;:::-;;;;;9415:54;;;9448:21;;;;;;;;;;;;;;9415:54;9500:4;9477:6;9484;:12;;;9477:20;;;;;;;;;:::i;:::-;:27;;;:20;;;;;:27;-1:-1:-1;9214:3:31;;-1:-1:-1;9214:3:31;;:::i;:::-;;;9170:341;;;;7506:2009;;;;;7157:2358;;;;;;;;:::o;826:98:45:-;1956:20;:18;:20::i;:::-;897:22:::1;916:2;897:18;:22::i;:::-;826:98:::0;:::o;4620:283:2:-;1956:20:45;:18;:20::i;:::-;4711:9:2::1;4706:193;4726:22:::0;;::::1;4706:193;;;4763:12;4778:11;;4790:1;4778:14;;;;;;;:::i;:::-;;;;;;;4763:29;;4805:15;4815:4;4805:9;:15::i;:::-;4800:93;;4839:13;::::0;;;:7:::1;:13;::::0;;;;;4832:20;;;;4867:17;::::1;::::0;::::1;::::0;4847:4;7164:25:69;;7152:2;7137:18;;7018:177;4867:17:2::1;;;;;;;;4800:93;-1:-1:-1::0;4750:3:2::1;::::0;::::1;:::i;:::-;;;4706:193;;;;4620:283:::0;;:::o;4170:172::-;4248:19;;4279:57;;;;;;;;4317:4;4279:57;;;;;;;;4243:94;;;;;20153:13:69;;4248:19:2;20149:62:69;;;4243:94:2;;;20131:81:69;20250:24;;20228:20;;;20221:54;-1:-1:-1;;4248:19:2;;;;;4243:35;;20104:18:69;;4243:94:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4236:101;4170:172;-1:-1:-1;;4170:172:2:o;1730:111:45:-;1802:7;;;;1788:10;:21;1780:56;;;;;;;20488:2:69;1780:56:45;;;20470:21:69;20527:2;20507:18;;;20500:30;20566:24;20546:18;;;20539:52;20608:18;;1780:56:45;20286:346:69;1780:56:45;1730:111::o;7157:486:2:-;7235:34;7283:13;7272:42;;;;;;;;;;;;:::i;:::-;7325:17;;;;7235:79;;-1:-1:-1;7325:31:2;;;;:76;;-1:-1:-1;7360:27:2;;:41;;;7325:76;7321:115;;;7410:26;;;;;;;;;;;;;;7321:115;7443:31;;:15;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7503:108;;;;;;;;;7532:15;7503:108;;;;7570:21;7503:108;;;;;;;;7601:8;7503:108;;;;;;;7486:152;;;;;;7461:13;;7486:152;:::i;:::-;;;;;;;;7229:414;7157:486;:::o;2876:820:30:-;3191:7;3206:9;3274:7;3293:15;3320:11;3343:7;3362:12;3386:1;3399:13;3424:21;3457:14;3252:229;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;3233:256;;3252:229;3233:256;;;;3678:11;3674:15;3592:20;3649:41;;-1:-1:-1;;2876:820:30;;;;;;;;;;;:::o;2392:1688:27:-;2524:7;2557:17;2577:6;:13;2557:33;;3041:19;3091:1;3075:6;:13;3063:9;:25;:29;3041:51;;3104:11;3119:1;3104:16;3100:57;;3139:6;3146:1;3139:9;;;;;;;;:::i;:::-;;;;;;;3132:16;;;;;;3100:57;3182:3;3168:11;:17;3164:44;;;3194:14;;;;;;;;;;;;;;3164:44;3216:23;3256:11;3242:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3242:26:27;-1:-1:-1;3216:52:27;-1:-1:-1;3277:15:27;;;;3349:652;3373:11;3369:1;:15;3349:652;;;3413:579;3563:1;3550;3533:13;:18;;3532:33;3570:1;3531:40;:193;;3706:18;;3713:10;;;;3706:6;;:18;;;;;;:::i;:::-;;;;;;;3531:193;;;3597:9;3587:7;:19;:59;;3629:17;;3636:9;;;;3629:6;;:17;;;;;;:::i;3587:59::-;3609:17;;3616:9;;;;3609:6;;:17;;;;;;:::i;:::-;;;;;;;3587:59;3933:9;3923:7;:19;:59;;3965:17;;3972:9;;;;3965:6;;:17;;;;;;:::i;:::-;;;;;;;3413:9;:579::i;3923:59::-;3945:17;;3952:9;;;;3945:6;;:17;;;;;;:::i;3413:579::-;3401:6;3408:1;3401:9;;;;;;;;:::i;:::-;;;;;;;;;;:591;3386:3;;3349:652;;;;4046:6;4067:1;4053:11;:15;4046:23;;;;;;;;:::i;:::-;;;;;;;4039:30;;;;;;;;2392:1688;;;;;;:::o;5389:976:2:-;8555:8;;;;;;;8372:34;;;8393:13;;;;;;;;;;;;;;8372:34;8182:19;;8177:36:::1;::::0;;;;;;;8182:19:::1;::::0;;::::1;::::0;8177:34:::1;::::0;:36:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;8182:19;8177:36:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8173:63;;;8222:14;;;;;;;;;;;;;;8173:63;5484:26:::2;5524:13;5513:41;;;;;;;;;;;;:::i;:::-;5565:19:::0;;:37;:44;5484:70;;-1:-1:-1;5565:48:2;;;:94:::2;;-1:-1:-1::0;5617:19:2;;:37:::2;;::::0;:42:::2;;::::0;::::2;5565:94;5561:399;;;5684:15;:29:::0;5728:19;;5669:79:::2;::::0;;;;5684:29:::2;::::0;;::::2;::::0;5669:58:::2;::::0;:79:::2;::::0;::::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;;;5896:17:2::2;::::0;::::2;::::0;5892:62:::2;;5939:7;826:98:45::0;:::o;5892:62:2:-:2;6059:15;::::0;::::2;::::0;:19;6045:10:::2;::::0;:33:::2;:10:::0;;::::2;:33:::0;::::2;;;::::0;:78:::2;;-1:-1:-1::0;6104:15:2::2;::::0;;::::2;::::0;:19;;::::2;::::0;6082;;:41:::2;::::0;;::::2;::::0;::::2;;6045:78;6041:129;;;6154:6;:15;;;6138:32;;;;;;;;;;;:::i;6041:129::-;6181:17;::::0;::::2;::::0;6177:57:::2;;6221:13;;;;;;;;;;;;;;6177:57;6254:15;::::0;;::::2;::::0;:19:::2;::::0;:23:::2;::::0;6276:1:::2;6254:23;:::i;:::-;6241:10;:36:::0;;;::::2;;::::0;;;::::2;::::0;;;::::2;::::0;;6291:17:::2;::::0;;::::2;::::0;-1:-1:-1;6283:26:2;;;:7:::2;:26;::::0;;;;6312:15:::2;6283:44:::0;;6338:22;::::2;::::0;::::2;::::0;6291:17;;6338:22:::2;:::i;1497:188:45:-:0;1565:10;1559:16;;;;1551:52;;;;;;;28547:2:69;1551:52:45;;;28529:21:69;28586:2;28566:18;;;28559:30;28625:25;28605:18;;;28598:53;28668:18;;1551:52:45;28345:347:69;1551:52:45;1610:14;:19;;;;;;;;;;;;;;-1:-1:-1;1668:7:45;;1641:39;;1610:19;;1668:7;;1641:39;;-1:-1:-1;1641:39:45;1497:188;:::o;4482:147:27:-;4545:7;4571:1;4567;:5;:57;;4312:50;;;476:66;4312:50;;;;28899:25:69;;;;28940:18;;;28933:34;;;28983:18;;;;28976:34;;;4312:50:27;;;;;;;;;;28872:18:69;;;;4312:50:27;;;4302:61;;;;;4567:57;;;4312:50;;;476:66;4312:50;;;;28899:25:69;;;;28940:18;;;28933:34;;;28983:18;;;;28976:34;;;4312:50:27;;;;;;;;;;28872:18:69;;;;4312:50:27;;;4302:61;;;;;4575:23;4197:171;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;332:261:69;133:12;;90:18;129:21;;;117:34;;204:4;193:16;;;187:23;183:32;;;167:14;;;160:56;269:4;258:16;;;252:23;277:42;248:72;232:14;;;225:96;526:2;511:18;;538:49;14:313;790:482;832:3;870:5;864:12;897:6;892:3;885:19;922:1;932:162;946:6;943:1;940:13;932:162;;;1008:4;1064:13;;;1060:22;;1054:29;1036:11;;;1032:20;;1025:59;961:12;932:162;;;936:3;1139:1;1132:4;1123:6;1118:3;1114:16;1110:27;1103:38;1261:4;1191:66;1186:2;1178:6;1174:15;1170:88;1165:3;1161:98;1157:109;1150:116;;;790:482;;;;:::o;1277:220::-;1426:2;1415:9;1408:21;1389:4;1446:45;1487:2;1476:9;1472:18;1464:6;1446:45;:::i;1502:184::-;1554:77;1551:1;1544:88;1651:4;1648:1;1641:15;1675:4;1672:1;1665:15;1691:251;1763:2;1757:9;;;1793:15;;1838:18;1823:34;;1859:22;;;1820:62;1817:88;;;1885:18;;:::i;:::-;1921:2;1914:22;1691:251;:::o;1947:253::-;2019:2;2013:9;2061:4;2049:17;;2096:18;2081:34;;2117:22;;;2078:62;2075:88;;;2143:18;;:::i;2205:334::-;2276:2;2270:9;2332:2;2322:13;;2337:66;2318:86;2306:99;;2435:18;2420:34;;2456:22;;;2417:62;2414:88;;;2482:18;;:::i;:::-;2518:2;2511:22;2205:334;;-1:-1:-1;2205:334:69:o;2544:183::-;2604:4;2637:18;2629:6;2626:30;2623:56;;;2659:18;;:::i;:::-;-1:-1:-1;2704:1:69;2700:14;2716:4;2696:25;;2544:183::o;2732:154::-;2818:42;2811:5;2807:54;2800:5;2797:65;2787:93;;2876:1;2873;2866:12;2891:737;2945:5;2998:3;2991:4;2983:6;2979:17;2975:27;2965:55;;3016:1;3013;3006:12;2965:55;3052:6;3039:20;3078:4;3102:60;3118:43;3158:2;3118:43;:::i;:::-;3102:60;:::i;:::-;3196:15;;;3282:1;3278:10;;;;3266:23;;3262:32;;;3227:12;;;;3306:15;;;3303:35;;;3334:1;3331;3324:12;3303:35;3370:2;3362:6;3358:15;3382:217;3398:6;3393:3;3390:15;3382:217;;;3478:3;3465:17;3495:31;3520:5;3495:31;:::i;:::-;3539:18;;3577:12;;;;3415;;3382:217;;;-1:-1:-1;3617:5:69;2891:737;-1:-1:-1;;;;;;2891:737:69:o;3633:156::-;3699:20;;3759:4;3748:16;;3738:27;;3728:55;;3779:1;3776;3769:12;3728:55;3633:156;;;:::o;3794:589::-;3836:5;3889:3;3882:4;3874:6;3870:17;3866:27;3856:55;;3907:1;3904;3897:12;3856:55;3943:6;3930:20;3969:18;3965:2;3962:26;3959:52;;;3991:18;;:::i;:::-;4035:114;4143:4;4074:66;4067:4;4063:2;4059:13;4055:86;4051:97;4035:114;:::i;:::-;4174:2;4165:7;4158:19;4220:3;4213:4;4208:2;4200:6;4196:15;4192:26;4189:35;4186:55;;;4237:1;4234;4227:12;4186:55;4302:2;4295:4;4287:6;4283:17;4276:4;4267:7;4263:18;4250:55;4350:1;4325:16;;;4343:4;4321:27;4314:38;;;;4329:7;3794:589;-1:-1:-1;;;3794:589:69:o;4388:129::-;4473:18;4466:5;4462:30;4455:5;4452:41;4442:69;;4507:1;4504;4497:12;4522:132;4589:20;;4618:30;4589:20;4618:30;:::i;4659:1136::-;4828:6;4836;4844;4852;4860;4868;4921:3;4909:9;4900:7;4896:23;4892:33;4889:53;;;4938:1;4935;4928:12;4889:53;4978:9;4965:23;5007:18;5048:2;5040:6;5037:14;5034:34;;;5064:1;5061;5054:12;5034:34;5087:61;5140:7;5131:6;5120:9;5116:22;5087:61;:::i;:::-;5077:71;;5201:2;5190:9;5186:18;5173:32;5157:48;;5230:2;5220:8;5217:16;5214:36;;;5246:1;5243;5236:12;5214:36;5269:63;5324:7;5313:8;5302:9;5298:24;5269:63;:::i;:::-;5259:73;;5351:36;5383:2;5372:9;5368:18;5351:36;:::i;:::-;5341:46;;5440:2;5429:9;5425:18;5412:32;5396:48;;5469:2;5459:8;5456:16;5453:36;;;5485:1;5482;5475:12;5453:36;5508:51;5551:7;5540:8;5529:9;5525:24;5508:51;:::i;:::-;5498:61;;5578:38;5611:3;5600:9;5596:19;5578:38;:::i;:::-;5568:48;;5669:3;5658:9;5654:19;5641:33;5625:49;;5699:2;5689:8;5686:16;5683:36;;;5715:1;5712;5705:12;5683:36;;5738:51;5781:7;5770:8;5759:9;5755:24;5738:51;:::i;:::-;5728:61;;;4659:1136;;;;;;;;:::o;5800:367::-;5863:8;5873:6;5927:3;5920:4;5912:6;5908:17;5904:27;5894:55;;5945:1;5942;5935:12;5894:55;-1:-1:-1;5968:20:69;;6011:18;6000:30;;5997:50;;;6043:1;6040;6033:12;5997:50;6080:4;6072:6;6068:17;6056:29;;6140:3;6133:4;6123:6;6120:1;6116:14;6108:6;6104:27;6100:38;6097:47;6094:67;;;6157:1;6154;6147:12;6094:67;5800:367;;;;;:::o;6172:841::-;6303:6;6311;6319;6327;6335;6388:2;6376:9;6367:7;6363:23;6359:32;6356:52;;;6404:1;6401;6394:12;6356:52;6444:9;6431:23;6473:18;6514:2;6506:6;6503:14;6500:34;;;6530:1;6527;6520:12;6500:34;6569:70;6631:7;6622:6;6611:9;6607:22;6569:70;:::i;:::-;6658:8;;-1:-1:-1;6543:96:69;-1:-1:-1;6746:2:69;6731:18;;6718:32;;-1:-1:-1;6762:16:69;;;6759:36;;;6791:1;6788;6781:12;6759:36;;6830:72;6894:7;6883:8;6872:9;6868:24;6830:72;:::i;:::-;6172:841;;;;-1:-1:-1;6921:8:69;7003:2;6988:18;6975:32;;6172:841;-1:-1:-1;;;;6172:841:69:o;7405:484::-;7458:3;7496:5;7490:12;7523:6;7518:3;7511:19;7549:4;7578:2;7573:3;7569:12;7562:19;;7615:2;7608:5;7604:14;7636:1;7646:218;7660:6;7657:1;7654:13;7646:218;;;7725:13;;7740:42;7721:62;7709:75;;7804:12;;;;7839:15;;;;7682:1;7675:9;7646:218;;;-1:-1:-1;7880:3:69;;7405:484;-1:-1:-1;;;;;7405:484:69:o;7894:261::-;8073:2;8062:9;8055:21;8036:4;8093:56;8145:2;8134:9;8130:18;8122:6;8093:56;:::i;8398:264::-;8594:2;8579:18;;8606:50;8583:9;8638:6;8304:12;;8237:42;8300:21;;;8288:34;;8375:4;8364:16;;;8358:23;8354:32;8338:14;;8331:56;8160:233;9265:180;9324:6;9377:2;9365:9;9356:7;9352:23;9348:32;9345:52;;;9393:1;9390;9383:12;9345:52;-1:-1:-1;9416:23:69;;9265:180;-1:-1:-1;9265:180:69:o;9450:245::-;9508:6;9561:2;9549:9;9540:7;9536:23;9532:32;9529:52;;;9577:1;9574;9567:12;9529:52;9616:9;9603:23;9635:30;9659:5;9635:30;:::i;10049:1441::-;10234:6;10242;10250;10258;10266;10274;10282;10290;10343:3;10331:9;10322:7;10318:23;10314:33;10311:53;;;10360:1;10357;10350:12;10311:53;10398:2;10387:9;10383:18;10420:7;10416:2;10413:15;10410:35;;;10441:1;10438;10431:12;10410:35;10464:9;;-1:-1:-1;10496:16:69;10531:18;10561:14;;;10558:34;;;10588:1;10585;10578:12;10558:34;10626:6;10615:9;10611:22;10601:32;;10671:7;10664:4;10660:2;10656:13;10652:27;10642:55;;10693:1;10690;10683:12;10642:55;10733:2;10720:16;10759:2;10751:6;10748:14;10745:34;;;10775:1;10772;10765:12;10745:34;10822:7;10815:4;10806:6;10802:2;10798:15;10794:26;10791:39;10788:59;;;10843:1;10840;10833:12;10788:59;10874:4;10870:2;10866:13;10856:23;;10898:6;10888:16;;;10957:3;10946:9;10942:19;10929:33;10913:49;;10987:2;10977:8;10974:16;10971:36;;;11003:1;11000;10993:12;10971:36;11042:72;11106:7;11095:8;11084:9;11080:24;11042:72;:::i;:::-;11133:8;;-1:-1:-1;11016:98:69;-1:-1:-1;11221:3:69;11206:19;;11193:33;;-1:-1:-1;11238:16:69;;;11235:36;;;11267:1;11264;11257:12;11235:36;;11306:72;11370:7;11359:8;11348:9;11344:24;11306:72;:::i;:::-;10049:1441;;;;-1:-1:-1;10049:1441:69;;;;;;11280:98;;11479:3;11464:19;11451:33;;10049:1441;-1:-1:-1;;;;10049:1441:69:o;11495:247::-;11554:6;11607:2;11595:9;11586:7;11582:23;11578:32;11575:52;;;11623:1;11620;11613:12;11575:52;11662:9;11649:23;11681:31;11706:5;11681:31;:::i;11747:437::-;11833:6;11841;11894:2;11882:9;11873:7;11869:23;11865:32;11862:52;;;11910:1;11907;11900:12;11862:52;11950:9;11937:23;11983:18;11975:6;11972:30;11969:50;;;12015:1;12012;12005:12;11969:50;12054:70;12116:7;12107:6;12096:9;12092:22;12054:70;:::i;:::-;12143:8;;12028:96;;-1:-1:-1;11747:437:69;-1:-1:-1;;;;11747:437:69:o;12189:277::-;12256:6;12309:2;12297:9;12288:7;12284:23;12280:32;12277:52;;;12325:1;12322;12315:12;12277:52;12357:9;12351:16;12410:5;12403:13;12396:21;12389:5;12386:32;12376:60;;12432:1;12429;12422:12;13568:184;13620:77;13617:1;13610:88;13717:4;13714:1;13707:15;13741:4;13738:1;13731:15;13757:168;13830:9;;;13861;;13878:15;;;13872:22;;13858:37;13848:71;;13899:18;;:::i;14283:184::-;14335:77;14332:1;14325:88;14432:4;14429:1;14422:15;14456:4;14453:1;14446:15;14472:195;14511:3;14542:66;14535:5;14532:77;14529:103;;14612:18;;:::i;:::-;-1:-1:-1;14659:1:69;14648:13;;14472:195::o;14672:184::-;14724:77;14721:1;14714:88;14821:4;14818:1;14811:15;14845:4;14842:1;14835:15;15570:201;15608:3;15636:10;15681:2;15674:5;15670:14;15708:2;15699:7;15696:15;15693:41;;15714:18;;:::i;:::-;15763:1;15750:15;;15570:201;-1:-1:-1;;;15570:201:69:o;15776:1242::-;16218:4;16247:3;16269:10;16318:2;16310:6;16306:15;16295:9;16288:34;16358:6;16353:2;16342:9;16338:18;16331:34;16413:2;16405:6;16401:15;16396:2;16385:9;16381:18;16374:43;;16453:2;16448;16437:9;16433:18;16426:30;16479:56;16531:2;16520:9;16516:18;16508:6;16479:56;:::i;:::-;16465:70;;16584:9;16576:6;16572:22;16566:3;16555:9;16551:19;16544:51;16618:44;16655:6;16647;16618:44;:::i;:::-;16604:58;;16711:4;16703:6;16699:17;16693:3;16682:9;16678:19;16671:46;16766:9;16758:6;16754:22;16748:3;16737:9;16733:19;16726:51;16800:33;16826:6;16818;16800:33;:::i;:::-;16786:47;;16882:18;16874:6;16870:31;16864:3;16853:9;16849:19;16842:60;16951:9;16943:6;16939:22;16933:3;16922:9;16918:19;16911:51;16979:33;17005:6;16997;16979:33;:::i;:::-;16971:41;15776:1242;-1:-1:-1;;;;;;;;;;;;15776:1242:69:o;17895:148::-;17983:4;17962:12;;;17976;;;17958:31;;18001:13;;17998:39;;;18017:18;;:::i;18048:319::-;18086:1;18120:4;18117:1;18113:12;18144:3;18134:191;;18181:77;18178:1;18171:88;18282:4;18279:1;18272:15;18310:4;18307:1;18300:15;18134:191;18357:3;18350:4;18347:1;18343:12;18339:22;18334:27;;;18048:319;;;;:::o;18372:125::-;18437:9;;;18458:10;;;18455:36;;;18471:18;;:::i;18755:271::-;18938:6;18930;18925:3;18912:33;18894:3;18964:16;;18989:13;;;18964:16;18755:271;-1:-1:-1;18755:271:69:o;19031:308::-;19248:6;19243:3;19236:19;19299:4;19291:6;19286:2;19281:3;19277:12;19264:40;19329:3;19320:13;;19031:308;-1:-1:-1;;19031:308:69:o;20637:492::-;20738:6;20791:2;20779:9;20770:7;20766:23;20762:32;20759:52;;;20807:1;20804;20797:12;20759:52;20833:22;;:::i;:::-;20885:9;20879:16;20904:33;20929:7;20904:33;:::i;:::-;20946:22;;21013:2;20998:18;;20992:25;21026:33;20992:25;21026:33;:::i;:::-;21086:2;21075:14;;21068:31;21079:5;20637:492;-1:-1:-1;;;20637:492:69:o;21134:420::-;133:12;;90:18;129:21;;;117:34;;204:4;193:16;;;187:23;183:32;;;167:14;;;160:56;269:4;258:16;;;252:23;277:42;248:72;232:14;;;225:96;21418:3;21403:19;;8304:12;;8237:42;8300:21;;;21544:2;21529:18;;8288:34;8375:4;8364:16;;8358:23;8354:32;8338:14;;;8331:56;21489:59;8160:233;21559:1276;22003:4;22032:3;22062:6;22051:9;22044:25;22117:42;22109:6;22105:55;22100:2;22089:9;22085:18;22078:83;22180:18;22246:2;22238:6;22234:15;22229:2;22218:9;22214:18;22207:43;22286:2;22281;22270:9;22266:18;22259:30;22312:56;22364:2;22353:9;22349:18;22341:6;22312:56;:::i;:::-;22298:70;;22417:9;22409:6;22405:22;22399:3;22388:9;22384:19;22377:51;22451:44;22488:6;22480;22451:44;:::i;:::-;22437:58;;22544:4;22536:6;22532:17;22526:3;22515:9;22511:19;22504:46;22599:9;22591:6;22587:22;22581:3;22570:9;22566:19;22559:51;22633:33;22659:6;22651;22633:33;:::i;:::-;22703:15;;;22697:3;22682:19;;22675:44;22756:22;;;22750:3;22735:19;;22728:51;22619:47;-1:-1:-1;22796:33:69;22619:47;22814:6;22796:33;:::i;22840:208::-;22919:13;;22972:50;22961:62;;22951:73;;22941:101;;23038:1;23035;23028:12;23053:136;23131:13;;23153:30;23131:13;23153:30;:::i;23194:424::-;23260:5;23308:4;23296:9;23291:3;23287:19;23283:30;23280:50;;;23326:1;23323;23316:12;23280:50;23348:22;;:::i;:::-;23339:31;;23400:9;23394:16;23419:32;23443:7;23419:32;:::i;:::-;23460:22;;23527:2;23512:18;;23506:25;23540:32;23506:25;23540:32;:::i;:::-;23599:2;23588:14;;23581:31;23592:5;23194:424;-1:-1:-1;;23194:424:69:o;23623:2088::-;23723:6;23754:2;23797;23785:9;23776:7;23772:23;23768:32;23765:52;;;23813:1;23810;23803:12;23765:52;23846:9;23840:16;23875:18;23916:2;23908:6;23905:14;23902:34;;;23932:1;23929;23922:12;23902:34;23955:22;;;;24011:4;23993:16;;;23989:27;23986:47;;;24029:1;24026;24019:12;23986:47;24055:22;;:::i;:::-;24108:2;24102:9;24136:2;24126:8;24123:16;24120:36;;;24152:1;24149;24142:12;24120:36;24175:17;;24226:4;24208:16;;;24204:27;24201:47;;;24244:1;24241;24234:12;24201:47;24272:22;;:::i;:::-;24325:2;24319:9;24353:2;24343:8;24340:16;24337:36;;;24369:1;24366;24359:12;24337:36;24392:17;;;-1:-1:-1;24440:4:69;24432:13;;24428:27;-1:-1:-1;24418:55:69;;24469:1;24466;24459:12;24418:55;24498:2;24492:9;24521:60;24537:43;24577:2;24537:43;:::i;24521:60::-;24615:15;;;24697:1;24693:10;;;;24685:19;;24681:28;;;24646:12;;;;24721:19;;;24718:39;;;24753:1;24750;24743:12;24718:39;24777:11;;;;24797:518;24813:6;24808:3;24805:15;24797:518;;;24895:4;24889:3;24880:7;24876:17;24872:28;24869:118;;;24941:1;24970:2;24966;24959:14;24869:118;25015:22;;:::i;:::-;25071:3;25065:10;25088:33;25113:7;25088:33;:::i;:::-;25134:24;;25196:43;25226:12;;;25196:43;:::i;:::-;25178:16;;;25171:69;25253:20;;24839:4;24830:14;;;;;25293:12;;;;24797:518;;;25324:22;;-1:-1:-1;25380:41:69;;-1:-1:-1;25409:11:69;;;25380:41;:::i;:::-;25375:2;25366:7;25362:16;25355:67;25458:44;25496:4;25492:2;25488:13;25458:44;:::i;:::-;25451:4;25438:18;;25431:72;25512:22;;-1:-1:-1;25566:59:69;25617:7;25604:11;;;25566:59;:::i;:::-;25550:14;;;25543:83;;;;-1:-1:-1;25674:4:69;25666:13;25660:20;25653:4;25642:16;;25635:46;25554:5;23623:2088;-1:-1:-1;;;23623:2088:69:o;25856:976::-;25984:12;;25950:4;26005:17;;;26071:19;;25941:14;;;26099:20;;;25911:3;;26169:4;;26196:21;;;;26146:3;26137:13;;;25911:3;26245:370;26259:6;26256:1;26253:13;26245:370;;;26318:13;;26362:9;;26373:42;26358:58;26344:73;;26463:11;;26457:18;26477:50;26453:75;26437:14;;;26430:99;26590:15;;;;26562:4;26551:16;;;;26281:1;26274:9;26245:370;;;26249:3;;26672:18;26666:2;26659:5;26655:14;26649:21;26645:46;26640:2;26635:3;26631:12;26624:68;26740:4;26733:5;26729:16;26723:23;26701:45;;26755:50;26799:4;26794:3;26790:14;26774;25793:50;25782:62;25770:75;;25716:135;26837:273;27026:2;27015:9;27008:21;26989:4;27046:58;27100:2;27089:9;27085:18;27077:6;27046:58;:::i;27324:249::-;27510:2;27495:18;;27522:45;27499:9;27549:6;27230:12;;27187:18;27226:21;;;27214:34;;27301:4;27290:16;;;27284:23;27280:32;27264:14;;27257:56;27115:204;27578:180;27645:18;27683:10;;;27695;;;27679:27;;27718:11;;;27715:37;;;27732:18;;:::i;:::-;27715:37;27578:180;;;;:::o;27763:577::-;27952:2;27941:9;27934:21;27915:4;27990:6;27984:13;28033:4;28028:2;28017:9;28013:18;28006:32;28061:65;28121:3;28110:9;28106:19;28092:12;28061:65;:::i;:::-;28047:79;;28175:2;28167:6;28163:15;28157:22;28188:62;28246:2;28235:9;28231:18;28215:14;27230:12;;27187:18;27226:21;;;27214:34;;27301:4;27290:16;;;27284:23;27280:32;27264:14;;27257:56;27115:204;28188:62;;28306:2;28298:6;28294:15;28288:22;28281:4;28270:9;28266:20;28259:52;28328:6;28320:14;;;27763:577;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "2149": [
        {
          "start": 425,
          "length": 32
        },
        {
          "start": 6327,
          "length": 32
        }
      ],
      "2151": [
        {
          "start": 473,
          "length": 32
        },
        {
          "start": 6364,
          "length": 32
        }
      ],
      "2153": [
        {
          "start": 521,
          "length": 32
        },
        {
          "start": 6405,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "getDynamicConfig()": "7437ff9f",
    "getExpectedNextSequenceNumber()": "4120fccd",
    "getMerkleRoot(bytes32)": "a7206cd6",
    "getStaticConfig()": "06285c69",
    "getTransmitters()": "666cab8d",
    "isARMHealthy()": "0a6cd30d",
    "isBlessed(bytes32)": "ff888fb1",
    "latestConfigDetails()": "81ff7048",
    "latestConfigDigestAndEpoch()": "afcb95d7",
    "owner()": "8da5cb5b",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "resetUnblessedRoots(bytes32[])": "f47a8690",
    "setMinSeqNr(uint64)": "ad7a22f8",
    "setOCR2Config(address[],address[],uint8,bytes,uint64,bytes)": "1ef38174",
    "transferOwnership(address)": "f2fde38b",
    "transmit(bytes32[3],bytes,bytes32[],bytes32[],bytes32)": "b1dc65a4",
    "typeAndVersion()": "181f5a77",
    "unpause()": "3f4ba83a",
    "verify(bytes32[],bytes32[],uint256)": "32048875"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"chainSelector\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"onRamp\",\"type\":\"address\"}],\"internalType\":\"struct CommitStore.StaticConfig\",\"name\":\"staticConfig\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BadARMSignal\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"actual\",\"type\":\"bytes32\"}],\"name\":\"ConfigDigestMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCommitStoreConfig\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"InvalidConfig\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"internalType\":\"struct CommitStore.Interval\",\"name\":\"interval\",\"type\":\"tuple\"}],\"name\":\"InvalidInterval\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonUniqueSignatures\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PausedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignaturesOutOfRegistration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedTransmitter\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"WrongMessageLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongNumberOfSignatures\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"chainSelector\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"onRamp\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct CommitStore.StaticConfig\",\"name\":\"staticConfig\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"priceRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ARM\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct CommitStore.DynamicConfig\",\"name\":\"dynamicConfig\",\"type\":\"tuple\"}],\"name\":\"ConfigSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"previousConfigBlockNumber\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"configDigest\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"configCount\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"transmitters\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"f\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"onchainConfig\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"offchainConfigVersion\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"offchainConfig\",\"type\":\"bytes\"}],\"name\":\"ConfigSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"usdPerToken\",\"type\":\"uint192\"}],\"internalType\":\"struct Internal.TokenPriceUpdate[]\",\"name\":\"tokenPriceUpdates\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"destChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"uint192\",\"name\":\"usdPerUnitGas\",\"type\":\"uint192\"}],\"internalType\":\"struct Internal.PriceUpdates\",\"name\":\"priceUpdates\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"internalType\":\"struct CommitStore.Interval\",\"name\":\"interval\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct CommitStore.CommitReport\",\"name\":\"report\",\"type\":\"tuple\"}],\"name\":\"ReportAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"RootRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"configDigest\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"epoch\",\"type\":\"uint32\"}],\"name\":\"Transmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDynamicConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"priceRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ARM\",\"type\":\"address\"}],\"internalType\":\"struct CommitStore.DynamicConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExpectedNextSequenceNumber\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStaticConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"chainSelector\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"onRamp\",\"type\":\"address\"}],\"internalType\":\"struct CommitStore.StaticConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTransmitters\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isARMHealthy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"isBlessed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestConfigDetails\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"configCount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"configDigest\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestConfigDigestAndEpoch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"scanLogs\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"configDigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"epoch\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"rootToReset\",\"type\":\"bytes32[]\"}],\"name\":\"resetUnblessedRoots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"minSeqNr\",\"type\":\"uint64\"}],\"name\":\"setMinSeqNr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"transmitters\",\"type\":\"address[]\"},{\"internalType\":\"uint8\",\"name\":\"f\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"onchainConfig\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"offchainConfigVersion\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"offchainConfig\",\"type\":\"bytes\"}],\"name\":\"setOCR2Config\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[3]\",\"name\":\"reportContext\",\"type\":\"bytes32[3]\"},{\"internalType\":\"bytes\",\"name\":\"report\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"rs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"ss\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"rawVs\",\"type\":\"bytes32\"}],\"name\":\"transmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"typeAndVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashedLeaves\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"proofs\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"proofFlagBits\",\"type\":\"uint256\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ConfigSet(uint32,bytes32,uint64,address[],address[],uint8,bytes,uint64,bytes)\":{\"params\":{\"configCount\":\"ordinal number of this config setting among all config settings over the life of this contract\",\"configDigest\":\"configDigest of this configuration\",\"f\":\"maximum number of faulty/dishonest oracles the protocol can tolerate while still working correctly\",\"offchainConfig\":\"serialized configuration used by the oracles exclusively and only passed through the contract\",\"offchainConfigVersion\":\"version of the serialization format used for \\\"offchainConfig\\\" parameter\",\"onchainConfig\":\"serialized configuration used by the contract (and possibly oracles)\",\"previousConfigBlockNumber\":\"block in which the previous config was set, to simplify historic analysis\",\"signers\":\"ith element is address ith oracle uses to sign a report\",\"transmitters\":\"ith element is address ith oracle uses to transmit a report via the transmit method\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"staticConfig\":\"Containing the static part of the commitStore config\"}},\"getDynamicConfig()\":{\"returns\":{\"_0\":\"the configuration.\"}},\"getExpectedNextSequenceNumber()\":{\"returns\":{\"_0\":\"the next expected sequenceNumber.\"}},\"getMerkleRoot(bytes32)\":{\"params\":{\"root\":\"The merkle root to check the commit status for.\"},\"returns\":{\"_0\":\"the timestamp of the committed root or zero in the case that it was never committed.\"}},\"getStaticConfig()\":{\"returns\":{\"_0\":\"the configuration.\"}},\"getTransmitters()\":{\"details\":\"The list will match the order used to specify the transmitter during setConfig\",\"returns\":{\"_0\":\"list of addresses permitted to transmit reports to this contract\"}},\"isBlessed(bytes32)\":{\"params\":{\"root\":\"The merkle root to check the blessing status for.\"},\"returns\":{\"_0\":\"whether the root is blessed or not.\"}},\"latestConfigDetails()\":{\"returns\":{\"blockNumber\":\"block at which this config was set\",\"configCount\":\"ordinal number of current config, out of all configs applied to this contract so far\",\"configDigest\":\"domain-separation tag for current config (see _configDigestFromConfigData)\"}},\"latestConfigDigestAndEpoch()\":{\"returns\":{\"configDigest\":\"configDigest\",\"epoch\":\"epoch\",\"scanLogs\":\"indicates whether to rely on the configDigest and epoch returned or whether to scan logs for the Transmitted event instead.\"}},\"pause()\":{\"details\":\"only callable by the owner\"},\"resetUnblessedRoots(bytes32[])\":{\"params\":{\"rootToReset\":\"The roots that will be reset. This function will only reset roots that are not blessed.\"}},\"setMinSeqNr(uint64)\":{\"params\":{\"minSeqNr\":\"The new minimum sequence number\"}},\"setOCR2Config(address[],address[],uint8,bytes,uint64,bytes)\":{\"params\":{\"f\":\"number of faulty oracles the system can tolerate\",\"offchainConfig\":\"encoded off-chain oracle configuration\",\"offchainConfigVersion\":\"version number for offchainEncoding schema\",\"onchainConfig\":\"encoded on-chain contract configuration\",\"signers\":\"addresses with which oracles sign the reports\",\"transmitters\":\"addresses oracles use to transmit the reports\"}},\"transmit(bytes32[3],bytes,bytes32[],bytes32[],bytes32)\":{\"params\":{\"rawVs\":\"ith element is the the V component of the ith signature\",\"report\":\"serialized report, which the signatures are signing.\",\"rs\":\"ith element is the R components of the ith signature on report. Must have at most MAX_NUM_ORACLES entries\",\"ss\":\"ith element is the S components of the ith signature on report. Must have at most MAX_NUM_ORACLES entries\"}},\"unpause()\":{\"details\":\"only callable by the owner\"},\"verify(bytes32[],bytes32[],uint256)\":{\"details\":\"This method uses a merkle tree within a merkle tree, with the hashedLeaves, proofs and proofFlagBits being used to get the root of the inner tree. This root is then used as the singular leaf of the outer tree.\"}},\"stateVariables\":{\"s_paused\":{\"details\":\"Whether this OnRamp is paused or not\"}},\"version\":1},\"userdoc\":{\"events\":{\"ConfigSet(uint32,bytes32,uint64,address[],address[],uint8,bytes,uint64,bytes)\":{\"notice\":\"triggers a new run of the offchain reporting protocol\"},\"Transmitted(bytes32,uint32)\":{\"notice\":\"optionally emitted to indicate the latest configDigest and epoch for which a report was successfully transmitted. Alternatively, the contract may use latestConfigDigestAndEpoch with scanLogs set to false.\"}},\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"getDynamicConfig()\":{\"notice\":\"Returns the dynamic commit store config.\"},\"getExpectedNextSequenceNumber()\":{\"notice\":\"Returns the next expected sequence number.\"},\"getMerkleRoot(bytes32)\":{\"notice\":\"Returns the timestamp of a potentially previously committed merkle root. If the root was never committed 0 will be returned.\"},\"getStaticConfig()\":{\"notice\":\"Returns the static commit store config.\"},\"isARMHealthy()\":{\"notice\":\"Support querying whether health checker is healthy.\"},\"isBlessed(bytes32)\":{\"notice\":\"Returns if a root is blessed or not.\"},\"latestConfigDetails()\":{\"notice\":\"information about current offchain reporting protocol configuration\"},\"latestConfigDigestAndEpoch()\":{\"notice\":\"optionally returns the latest configDigest and epoch for which a report was successfully transmitted. Alternatively, the contract may return scanLogs set to true and use Transmitted events to provide this information to offchain watchers.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"pause()\":{\"notice\":\"Pause the contract\"},\"paused()\":{\"notice\":\"Returns true if the contract is paused, and false otherwise.\"},\"resetUnblessedRoots(bytes32[])\":{\"notice\":\"Used by the owner in case an invalid sequence of roots has been posted and needs to be removed. The interval in the report is trusted.\"},\"setMinSeqNr(uint64)\":{\"notice\":\"Sets the minimum sequence number.\"},\"setOCR2Config(address[],address[],uint8,bytes,uint64,bytes)\":{\"notice\":\"sets offchain reporting protocol configuration incl. participating oracles\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"},\"transmit(bytes32[3],bytes,bytes32[],bytes32[],bytes32)\":{\"notice\":\"transmit is called to post a new report to the contract\"},\"unpause()\":{\"notice\":\"Unpause the contract\"},\"verify(bytes32[],bytes32[],uint256)\":{\"notice\":\"Returns timestamp of when root was accepted or 0 if verification fails.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CommitStore.sol\":\"CommitStore\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":30000},\"remappings\":[]},\"sources\":{\"contracts/CommitStore.sol\":{\"keccak256\":\"0x4f1c3617e3033cf36109f14e031a9eb7b439cec898931071b8645f663f942c29\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://83c3b3f8cfd35b5191cafc113eb51c6639c526318d378c327f2a27a5eae5142b\",\"dweb:/ipfs/Qme15K7mArD8uXUU6mocxrtwSMgFHTJUuKKsaopK5ey3Ei\"]},\"contracts/OwnerIsCreator.sol\":{\"keccak256\":\"0xb9a890795a532c39766da1c6e8ef202e7bfc39e1a5deef36503be4fcdd360e2f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2112758933edb2f9dc368a4d426f5db9d3556d9592d68fa37f83c5946f985fe9\",\"dweb:/ipfs/QmV36JwTwSSrAgt5zvPiuo1NhVWacokJKrtHqVVBePUNFo\"]},\"contracts/interfaces/IARM.sol\":{\"keccak256\":\"0xc1a47bbb0eecc53a16a2d44e3b951707e07d2777cf27411a3eb95c652155c7ad\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://351ed829b0f93293bcef7f1c8c7fc7963c619aacdc81fd2cb03871a4a9b3de49\",\"dweb:/ipfs/QmR8QZzTkcLrXwsBu3NjRDGnBBSMbvJSLApKBpFd1UZPJW\"]},\"contracts/interfaces/ICommitStore.sol\":{\"keccak256\":\"0x2c4e0c7a920ef51a4ff7239fab4600071455011ebf1b96ae2af1d7e427852fc7\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://47276b4b8bef495520fa2968cd7769327b2bc23615c2bab14053d5497ee1a31f\",\"dweb:/ipfs/QmSnSqXFFH1rYRsxdaGW74vJckDCTpZve2wREybM8iTiz4\"]},\"contracts/interfaces/IPriceRegistry.sol\":{\"keccak256\":\"0x9d98b3822903d56b0fd91194c47c2e67869808c6c80037c45da61bffc124a34f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://76b167b36d60705e4b5362a657b5997ebf68e3693f88493cac2d96a70d50ed9a\",\"dweb:/ipfs/QmPxWJwPEdnLjDAd8j5ZcoiQXhU1KUtUNkUDtkGqUeH3jF\"]},\"contracts/interfaces/ITypeAndVersion.sol\":{\"keccak256\":\"0x7fb4ee7e597096cf09a1fa0d7c752be16d8eb1403a8c5cdb967670b29c640e2d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1101ac2a3616dc8cb856cb4a8bb00d2862824bc992f62c05f41c47d104e4def8\",\"dweb:/ipfs/QmXXMBm3Cp1HPzBm4ECmPJRCyHmPLzwLxkZmyFxeiLYqXE\"]},\"contracts/libraries/Client.sol\":{\"keccak256\":\"0xf2616f59db15ba0493e4ce3514ea0655cbc9b65ee754e7fc012fe19752659574\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3ebc41940d13751005c195f743f5f22cc1e7b98f6d72cc10116b4853b5ac9837\",\"dweb:/ipfs/QmNweYHQHsTLWFa9cy8XJgxFRgH97XLAGxPw3k8diwrTj6\"]},\"contracts/libraries/Internal.sol\":{\"keccak256\":\"0xc407f1489512ef93343ac01ed4b722f443b831abb94774f22f80d624a1c00866\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://acc89e538dac709aa4c168a787d497490b4639f8902d34a64ce69291d8dd2b1b\",\"dweb:/ipfs/QmTDSbiYUf9cs6yD5jMHmiFSSQSyzwH4yMsZ8v2PhSruU7\"]},\"contracts/libraries/MerkleMultiProof.sol\":{\"keccak256\":\"0xf790a5d6474b97967073c3594c91f32f39df3329922241a1a6c16d40ca1c56c7\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2648b6c6419109e99d3978632b6a534ec238f380284d4fb7da896f9b6c97add5\",\"dweb:/ipfs/QmS5MCzK8iuCNEZJeRXWdtjxMmNqtG6Yz873QtQt4EhWAP\"]},\"contracts/ocr/OCR2Abstract.sol\":{\"keccak256\":\"0xf8938e664961852c634255c464b29c66066e67f83ac9a5883a9a4fb54e123c2f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b0bedfd0c798384e017047ae29d2ac00260f277cfd0aeb0f1276f69aa425aa62\",\"dweb:/ipfs/QmQhVtGbA3MYT1hsEmBw2gT93PzCXHbUWeDaydE8MTrfxZ\"]},\"contracts/ocr/OCR2Base.sol\":{\"keccak256\":\"0xa1fd2d7eae6250c0901050aca2ae4508e3f8c19cf645a67d79eadeb91ad389f7\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2cf4ab8a1b205f5dbe967db768ed9e98924a8800f8a93585551ba3ca822dec0a\",\"dweb:/ipfs/QmXYA2HN1DFEg7YdKuEt7Kh8hdrFdjzcJcv8fE4WCytHQV\"]},\"libraries/internal/ConfirmedOwner.sol\":{\"keccak256\":\"0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0371c1af45db651823b9a3d5af761b08243c78f105166342eee28de356c8dd\",\"dweb:/ipfs/QmPnC9qNDKwJFd5unwLb9pxjrutoe8MWjm5EXHTxq2kJ4x\"]},\"libraries/internal/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0xa2f137a1d066795aeac76226e58f33c982278cdd34b4f09e5a2243d5a0924654\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a73f185d79d82e6d9baa531d55ffb88c80def1f6187dff93d3df6b2cb5ab7187\",\"dweb:/ipfs/QmVZEePJvcN1KxSTaD5rhKhaMBWHqs6ZeZ5s17Ft6mR5hJ\"]},\"libraries/internal/interfaces/OwnableInterface.sol\":{\"keccak256\":\"0xb8b3a97783dddc198b790c4cec1eda7fb47aa38cbaea6555220d0ed8c735c086\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acf7ed6aff47fbddeff1b85e1225a717dfa8bfb3ab89db0e6564346afcf03693\",\"dweb:/ipfs/QmQQn5sKn1ARbt1WhYoHwfTJhK8fbQi8MbDQeHxGXTPbPE\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct CommitStore.StaticConfig",
              "name": "staticConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "chainSelector",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "sourceChainSelector",
                  "type": "uint64"
                },
                {
                  "internalType": "address",
                  "name": "onRamp",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BadARMSignal"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "actual",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "ConfigDigestMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidCommitStoreConfig"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "message",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "InvalidConfig"
        },
        {
          "inputs": [
            {
              "internalType": "struct CommitStore.Interval",
              "name": "interval",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "min",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "max",
                  "type": "uint64"
                }
              ]
            }
          ],
          "type": "error",
          "name": "InvalidInterval"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidProof"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidRoot"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonUniqueSignatures"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PausedError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SignaturesOutOfRegistration"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnauthorizedSigner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnauthorizedTransmitter"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "expected",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "actual",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "WrongMessageLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WrongNumberOfSignatures"
        },
        {
          "inputs": [
            {
              "internalType": "struct CommitStore.StaticConfig",
              "name": "staticConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "chainSelector",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "sourceChainSelector",
                  "type": "uint64"
                },
                {
                  "internalType": "address",
                  "name": "onRamp",
                  "type": "address"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "struct CommitStore.DynamicConfig",
              "name": "dynamicConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "priceRegistry",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "ARM",
                  "type": "address"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ConfigSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "previousConfigBlockNumber",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "configDigest",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "configCount",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "signers",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "transmitters",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint8",
              "name": "f",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "onchainConfig",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "offchainConfigVersion",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "offchainConfig",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ConfigSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferRequested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct CommitStore.CommitReport",
              "name": "report",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct Internal.PriceUpdates",
                  "name": "priceUpdates",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct Internal.TokenPriceUpdate[]",
                      "name": "tokenPriceUpdates",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "sourceToken",
                          "type": "address"
                        },
                        {
                          "internalType": "uint192",
                          "name": "usdPerToken",
                          "type": "uint192"
                        }
                      ]
                    },
                    {
                      "internalType": "uint64",
                      "name": "destChainSelector",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint192",
                      "name": "usdPerUnitGas",
                      "type": "uint192"
                    }
                  ]
                },
                {
                  "internalType": "struct CommitStore.Interval",
                  "name": "interval",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint64",
                      "name": "min",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "max",
                      "type": "uint64"
                    }
                  ]
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ReportAccepted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RootRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "configDigest",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "epoch",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transmitted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDynamicConfig",
          "outputs": [
            {
              "internalType": "struct CommitStore.DynamicConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "priceRegistry",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "ARM",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getExpectedNextSequenceNumber",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMerkleRoot",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getStaticConfig",
          "outputs": [
            {
              "internalType": "struct CommitStore.StaticConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "chainSelector",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "sourceChainSelector",
                  "type": "uint64"
                },
                {
                  "internalType": "address",
                  "name": "onRamp",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTransmitters",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isARMHealthy",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isBlessed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "latestConfigDetails",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "configCount",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            },
            {
              "internalType": "bytes32",
              "name": "configDigest",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "latestConfigDigestAndEpoch",
          "outputs": [
            {
              "internalType": "bool",
              "name": "scanLogs",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "configDigest",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "epoch",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "rootToReset",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "resetUnblessedRoots"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "minSeqNr",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinSeqNr"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "signers",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "transmitters",
              "type": "address[]"
            },
            {
              "internalType": "uint8",
              "name": "f",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "onchainConfig",
              "type": "bytes"
            },
            {
              "internalType": "uint64",
              "name": "offchainConfigVersion",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "offchainConfig",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOCR2Config"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[3]",
              "name": "reportContext",
              "type": "bytes32[3]"
            },
            {
              "internalType": "bytes",
              "name": "report",
              "type": "bytes"
            },
            {
              "internalType": "bytes32[]",
              "name": "rs",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes32[]",
              "name": "ss",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes32",
              "name": "rawVs",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transmit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "typeAndVersion",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "hashedLeaves",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes32[]",
              "name": "proofs",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint256",
              "name": "proofFlagBits",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "staticConfig": "Containing the static part of the commitStore config"
            }
          },
          "getDynamicConfig()": {
            "returns": {
              "_0": "the configuration."
            }
          },
          "getExpectedNextSequenceNumber()": {
            "returns": {
              "_0": "the next expected sequenceNumber."
            }
          },
          "getMerkleRoot(bytes32)": {
            "params": {
              "root": "The merkle root to check the commit status for."
            },
            "returns": {
              "_0": "the timestamp of the committed root or zero in the case that it was never committed."
            }
          },
          "getStaticConfig()": {
            "returns": {
              "_0": "the configuration."
            }
          },
          "getTransmitters()": {
            "details": "The list will match the order used to specify the transmitter during setConfig",
            "returns": {
              "_0": "list of addresses permitted to transmit reports to this contract"
            }
          },
          "isBlessed(bytes32)": {
            "params": {
              "root": "The merkle root to check the blessing status for."
            },
            "returns": {
              "_0": "whether the root is blessed or not."
            }
          },
          "latestConfigDetails()": {
            "returns": {
              "blockNumber": "block at which this config was set",
              "configCount": "ordinal number of current config, out of all configs applied to this contract so far",
              "configDigest": "domain-separation tag for current config (see _configDigestFromConfigData)"
            }
          },
          "latestConfigDigestAndEpoch()": {
            "returns": {
              "configDigest": "configDigest",
              "epoch": "epoch",
              "scanLogs": "indicates whether to rely on the configDigest and epoch returned or whether to scan logs for the Transmitted event instead."
            }
          },
          "pause()": {
            "details": "only callable by the owner"
          },
          "resetUnblessedRoots(bytes32[])": {
            "params": {
              "rootToReset": "The roots that will be reset. This function will only reset roots that are not blessed."
            }
          },
          "setMinSeqNr(uint64)": {
            "params": {
              "minSeqNr": "The new minimum sequence number"
            }
          },
          "setOCR2Config(address[],address[],uint8,bytes,uint64,bytes)": {
            "params": {
              "f": "number of faulty oracles the system can tolerate",
              "offchainConfig": "encoded off-chain oracle configuration",
              "offchainConfigVersion": "version number for offchainEncoding schema",
              "onchainConfig": "encoded on-chain contract configuration",
              "signers": "addresses with which oracles sign the reports",
              "transmitters": "addresses oracles use to transmit the reports"
            }
          },
          "transmit(bytes32[3],bytes,bytes32[],bytes32[],bytes32)": {
            "params": {
              "rawVs": "ith element is the the V component of the ith signature",
              "report": "serialized report, which the signatures are signing.",
              "rs": "ith element is the R components of the ith signature on report. Must have at most MAX_NUM_ORACLES entries",
              "ss": "ith element is the S components of the ith signature on report. Must have at most MAX_NUM_ORACLES entries"
            }
          },
          "unpause()": {
            "details": "only callable by the owner"
          },
          "verify(bytes32[],bytes32[],uint256)": {
            "details": "This method uses a merkle tree within a merkle tree, with the hashedLeaves, proofs and proofFlagBits being used to get the root of the inner tree. This root is then used as the singular leaf of the outer tree."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "acceptOwnership()": {
            "notice": "Allows an ownership transfer to be completed by the recipient."
          },
          "getDynamicConfig()": {
            "notice": "Returns the dynamic commit store config."
          },
          "getExpectedNextSequenceNumber()": {
            "notice": "Returns the next expected sequence number."
          },
          "getMerkleRoot(bytes32)": {
            "notice": "Returns the timestamp of a potentially previously committed merkle root. If the root was never committed 0 will be returned."
          },
          "getStaticConfig()": {
            "notice": "Returns the static commit store config."
          },
          "isARMHealthy()": {
            "notice": "Support querying whether health checker is healthy."
          },
          "isBlessed(bytes32)": {
            "notice": "Returns if a root is blessed or not."
          },
          "latestConfigDetails()": {
            "notice": "information about current offchain reporting protocol configuration"
          },
          "latestConfigDigestAndEpoch()": {
            "notice": "optionally returns the latest configDigest and epoch for which a report was successfully transmitted. Alternatively, the contract may return scanLogs set to true and use Transmitted events to provide this information to offchain watchers."
          },
          "owner()": {
            "notice": "Get the current owner"
          },
          "pause()": {
            "notice": "Pause the contract"
          },
          "paused()": {
            "notice": "Returns true if the contract is paused, and false otherwise."
          },
          "resetUnblessedRoots(bytes32[])": {
            "notice": "Used by the owner in case an invalid sequence of roots has been posted and needs to be removed. The interval in the report is trusted."
          },
          "setMinSeqNr(uint64)": {
            "notice": "Sets the minimum sequence number."
          },
          "setOCR2Config(address[],address[],uint8,bytes,uint64,bytes)": {
            "notice": "sets offchain reporting protocol configuration incl. participating oracles"
          },
          "transferOwnership(address)": {
            "notice": "Allows an owner to begin transferring ownership to a new address, pending."
          },
          "transmit(bytes32[3],bytes,bytes32[],bytes32[],bytes32)": {
            "notice": "transmit is called to post a new report to the contract"
          },
          "unpause()": {
            "notice": "Unpause the contract"
          },
          "verify(bytes32[],bytes32[],uint256)": {
            "notice": "Returns timestamp of when root was accepted or 0 if verification fails."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [],
      "optimizer": {
        "enabled": true,
        "runs": 30000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/CommitStore.sol": "CommitStore"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/CommitStore.sol": {
        "keccak256": "0x4f1c3617e3033cf36109f14e031a9eb7b439cec898931071b8645f663f942c29",
        "urls": [
          "bzz-raw://83c3b3f8cfd35b5191cafc113eb51c6639c526318d378c327f2a27a5eae5142b",
          "dweb:/ipfs/Qme15K7mArD8uXUU6mocxrtwSMgFHTJUuKKsaopK5ey3Ei"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/OwnerIsCreator.sol": {
        "keccak256": "0xb9a890795a532c39766da1c6e8ef202e7bfc39e1a5deef36503be4fcdd360e2f",
        "urls": [
          "bzz-raw://2112758933edb2f9dc368a4d426f5db9d3556d9592d68fa37f83c5946f985fe9",
          "dweb:/ipfs/QmV36JwTwSSrAgt5zvPiuo1NhVWacokJKrtHqVVBePUNFo"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/interfaces/IARM.sol": {
        "keccak256": "0xc1a47bbb0eecc53a16a2d44e3b951707e07d2777cf27411a3eb95c652155c7ad",
        "urls": [
          "bzz-raw://351ed829b0f93293bcef7f1c8c7fc7963c619aacdc81fd2cb03871a4a9b3de49",
          "dweb:/ipfs/QmR8QZzTkcLrXwsBu3NjRDGnBBSMbvJSLApKBpFd1UZPJW"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/interfaces/ICommitStore.sol": {
        "keccak256": "0x2c4e0c7a920ef51a4ff7239fab4600071455011ebf1b96ae2af1d7e427852fc7",
        "urls": [
          "bzz-raw://47276b4b8bef495520fa2968cd7769327b2bc23615c2bab14053d5497ee1a31f",
          "dweb:/ipfs/QmSnSqXFFH1rYRsxdaGW74vJckDCTpZve2wREybM8iTiz4"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/interfaces/IPriceRegistry.sol": {
        "keccak256": "0x9d98b3822903d56b0fd91194c47c2e67869808c6c80037c45da61bffc124a34f",
        "urls": [
          "bzz-raw://76b167b36d60705e4b5362a657b5997ebf68e3693f88493cac2d96a70d50ed9a",
          "dweb:/ipfs/QmPxWJwPEdnLjDAd8j5ZcoiQXhU1KUtUNkUDtkGqUeH3jF"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/interfaces/ITypeAndVersion.sol": {
        "keccak256": "0x7fb4ee7e597096cf09a1fa0d7c752be16d8eb1403a8c5cdb967670b29c640e2d",
        "urls": [
          "bzz-raw://1101ac2a3616dc8cb856cb4a8bb00d2862824bc992f62c05f41c47d104e4def8",
          "dweb:/ipfs/QmXXMBm3Cp1HPzBm4ECmPJRCyHmPLzwLxkZmyFxeiLYqXE"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/libraries/Client.sol": {
        "keccak256": "0xf2616f59db15ba0493e4ce3514ea0655cbc9b65ee754e7fc012fe19752659574",
        "urls": [
          "bzz-raw://3ebc41940d13751005c195f743f5f22cc1e7b98f6d72cc10116b4853b5ac9837",
          "dweb:/ipfs/QmNweYHQHsTLWFa9cy8XJgxFRgH97XLAGxPw3k8diwrTj6"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/libraries/Internal.sol": {
        "keccak256": "0xc407f1489512ef93343ac01ed4b722f443b831abb94774f22f80d624a1c00866",
        "urls": [
          "bzz-raw://acc89e538dac709aa4c168a787d497490b4639f8902d34a64ce69291d8dd2b1b",
          "dweb:/ipfs/QmTDSbiYUf9cs6yD5jMHmiFSSQSyzwH4yMsZ8v2PhSruU7"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/libraries/MerkleMultiProof.sol": {
        "keccak256": "0xf790a5d6474b97967073c3594c91f32f39df3329922241a1a6c16d40ca1c56c7",
        "urls": [
          "bzz-raw://2648b6c6419109e99d3978632b6a534ec238f380284d4fb7da896f9b6c97add5",
          "dweb:/ipfs/QmS5MCzK8iuCNEZJeRXWdtjxMmNqtG6Yz873QtQt4EhWAP"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/ocr/OCR2Abstract.sol": {
        "keccak256": "0xf8938e664961852c634255c464b29c66066e67f83ac9a5883a9a4fb54e123c2f",
        "urls": [
          "bzz-raw://b0bedfd0c798384e017047ae29d2ac00260f277cfd0aeb0f1276f69aa425aa62",
          "dweb:/ipfs/QmQhVtGbA3MYT1hsEmBw2gT93PzCXHbUWeDaydE8MTrfxZ"
        ],
        "license": "BUSL-1.1"
      },
      "contracts/ocr/OCR2Base.sol": {
        "keccak256": "0xa1fd2d7eae6250c0901050aca2ae4508e3f8c19cf645a67d79eadeb91ad389f7",
        "urls": [
          "bzz-raw://2cf4ab8a1b205f5dbe967db768ed9e98924a8800f8a93585551ba3ca822dec0a",
          "dweb:/ipfs/QmXYA2HN1DFEg7YdKuEt7Kh8hdrFdjzcJcv8fE4WCytHQV"
        ],
        "license": "BUSL-1.1"
      },
      "libraries/internal/ConfirmedOwner.sol": {
        "keccak256": "0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72",
        "urls": [
          "bzz-raw://af0371c1af45db651823b9a3d5af761b08243c78f105166342eee28de356c8dd",
          "dweb:/ipfs/QmPnC9qNDKwJFd5unwLb9pxjrutoe8MWjm5EXHTxq2kJ4x"
        ],
        "license": "MIT"
      },
      "libraries/internal/ConfirmedOwnerWithProposal.sol": {
        "keccak256": "0xa2f137a1d066795aeac76226e58f33c982278cdd34b4f09e5a2243d5a0924654",
        "urls": [
          "bzz-raw://a73f185d79d82e6d9baa531d55ffb88c80def1f6187dff93d3df6b2cb5ab7187",
          "dweb:/ipfs/QmVZEePJvcN1KxSTaD5rhKhaMBWHqs6ZeZ5s17Ft6mR5hJ"
        ],
        "license": "MIT"
      },
      "libraries/internal/interfaces/OwnableInterface.sol": {
        "keccak256": "0xb8b3a97783dddc198b790c4cec1eda7fb47aa38cbaea6555220d0ed8c735c086",
        "urls": [
          "bzz-raw://acf7ed6aff47fbddeff1b85e1225a717dfa8bfb3ab89db0e6564346afcf03693",
          "dweb:/ipfs/QmQQn5sKn1ARbt1WhYoHwfTJhK8fbQi8MbDQeHxGXTPbPE"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/CommitStore.sol",
    "id": 2624,
    "exportedSymbols": {
      "CommitStore": [
        2623
      ],
      "IARM": [
        5198
      ],
      "ICommitStore": [
        5245
      ],
      "IPriceRegistry": [
        5441
      ],
      "ITypeAndVersion": [
        5523
      ],
      "Internal": [
        5831
      ],
      "MerkleMultiProof": [
        6023
      ],
      "OCR2Base": [
        7233
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:8873:2",
    "nodes": [
      {
        "id": 2059,
        "nodeType": "PragmaDirective",
        "src": "37:23:2",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 2061,
        "nodeType": "ImportDirective",
        "src": "62:65:2",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ITypeAndVersion.sol",
        "file": "./interfaces/ITypeAndVersion.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2624,
        "sourceUnit": 5524,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2060,
              "name": "ITypeAndVersion",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5523,
              "src": "70:15:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2063,
        "nodeType": "ImportDirective",
        "src": "128:59:2",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ICommitStore.sol",
        "file": "./interfaces/ICommitStore.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2624,
        "sourceUnit": 5246,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2062,
              "name": "ICommitStore",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5245,
              "src": "136:12:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2065,
        "nodeType": "ImportDirective",
        "src": "188:43:2",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IARM.sol",
        "file": "./interfaces/IARM.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2624,
        "sourceUnit": 5199,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2064,
              "name": "IARM",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5198,
              "src": "196:4:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2067,
        "nodeType": "ImportDirective",
        "src": "232:63:2",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IPriceRegistry.sol",
        "file": "./interfaces/IPriceRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2624,
        "sourceUnit": 5442,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2066,
              "name": "IPriceRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5441,
              "src": "240:14:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2069,
        "nodeType": "ImportDirective",
        "src": "297:44:2",
        "nodes": [],
        "absolutePath": "contracts/ocr/OCR2Base.sol",
        "file": "./ocr/OCR2Base.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2624,
        "sourceUnit": 7234,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2068,
              "name": "OCR2Base",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7233,
              "src": "305:8:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2071,
        "nodeType": "ImportDirective",
        "src": "342:50:2",
        "nodes": [],
        "absolutePath": "contracts/libraries/Internal.sol",
        "file": "./libraries/Internal.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2624,
        "sourceUnit": 5832,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2070,
              "name": "Internal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5831,
              "src": "350:8:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2073,
        "nodeType": "ImportDirective",
        "src": "393:66:2",
        "nodes": [],
        "absolutePath": "contracts/libraries/MerkleMultiProof.sol",
        "file": "./libraries/MerkleMultiProof.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2624,
        "sourceUnit": 6024,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2072,
              "name": "MerkleMultiProof",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6023,
              "src": "401:16:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2623,
        "nodeType": "ContractDefinition",
        "src": "461:8448:2",
        "nodes": [
          {
            "id": 2081,
            "nodeType": "ErrorDefinition",
            "src": "529:20:2",
            "nodes": [],
            "errorSelector": "eced32bc",
            "name": "PausedError",
            "nameLocation": "535:11:2",
            "parameters": {
              "id": 2080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "546:2:2"
            }
          },
          {
            "id": 2086,
            "nodeType": "ErrorDefinition",
            "src": "552:41:2",
            "nodes": [],
            "errorSelector": "bb1ae18d",
            "name": "InvalidInterval",
            "nameLocation": "558:15:2",
            "parameters": {
              "id": 2085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2084,
                  "mutability": "mutable",
                  "name": "interval",
                  "nameLocation": "583:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2086,
                  "src": "574:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Interval_$2134_memory_ptr",
                    "typeString": "struct CommitStore.Interval"
                  },
                  "typeName": {
                    "id": 2083,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2082,
                      "name": "Interval",
                      "nameLocations": [
                        "574:8:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2134,
                      "src": "574:8:2"
                    },
                    "referencedDeclaration": 2134,
                    "src": "574:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Interval_$2134_storage_ptr",
                      "typeString": "struct CommitStore.Interval"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "573:19:2"
            }
          },
          {
            "id": 2088,
            "nodeType": "ErrorDefinition",
            "src": "596:20:2",
            "nodes": [],
            "errorSelector": "504570e3",
            "name": "InvalidRoot",
            "nameLocation": "602:11:2",
            "parameters": {
              "id": 2087,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "613:2:2"
            }
          },
          {
            "id": 2090,
            "nodeType": "ErrorDefinition",
            "src": "619:33:2",
            "nodes": [],
            "errorSelector": "3f8be2be",
            "name": "InvalidCommitStoreConfig",
            "nameLocation": "625:24:2",
            "parameters": {
              "id": 2089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "649:2:2"
            }
          },
          {
            "id": 2092,
            "nodeType": "ErrorDefinition",
            "src": "655:21:2",
            "nodes": [],
            "errorSelector": "c1483715",
            "name": "BadARMSignal",
            "nameLocation": "661:12:2",
            "parameters": {
              "id": 2091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "673:2:2"
            }
          },
          {
            "id": 2096,
            "nodeType": "EventDefinition",
            "src": "680:30:2",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
            "name": "Paused",
            "nameLocation": "686:6:2",
            "parameters": {
              "id": 2095,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2094,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "701:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2096,
                  "src": "693:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2093,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "693:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "692:17:2"
            }
          },
          {
            "id": 2100,
            "nodeType": "EventDefinition",
            "src": "713:32:2",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
            "name": "Unpaused",
            "nameLocation": "719:8:2",
            "parameters": {
              "id": 2099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2098,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "736:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2100,
                  "src": "728:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "728:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "727:17:2"
            }
          },
          {
            "id": 2105,
            "nodeType": "EventDefinition",
            "src": "748:42:2",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "e81b49e583122eb290c46fc255c962b9a2dec468816c00fb7a2e6ebc42dc92d4",
            "name": "ReportAccepted",
            "nameLocation": "754:14:2",
            "parameters": {
              "id": 2104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2103,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "report",
                  "nameLocation": "782:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2105,
                  "src": "769:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CommitReport_$2143_memory_ptr",
                    "typeString": "struct CommitStore.CommitReport"
                  },
                  "typeName": {
                    "id": 2102,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2101,
                      "name": "CommitReport",
                      "nameLocations": [
                        "769:12:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2143,
                      "src": "769:12:2"
                    },
                    "referencedDeclaration": 2143,
                    "src": "769:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CommitReport_$2143_storage_ptr",
                      "typeString": "struct CommitStore.CommitReport"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "768:21:2"
            }
          },
          {
            "id": 2113,
            "nodeType": "EventDefinition",
            "src": "793:72:2",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "4b4b9b37763b78c5a0701b5980dbb19a9104b78dfd1fcaa85c6260f01244bd42",
            "name": "ConfigSet",
            "nameLocation": "799:9:2",
            "parameters": {
              "id": 2112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2108,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "staticConfig",
                  "nameLocation": "822:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2113,
                  "src": "809:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StaticConfig_$2124_memory_ptr",
                    "typeString": "struct CommitStore.StaticConfig"
                  },
                  "typeName": {
                    "id": 2107,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2106,
                      "name": "StaticConfig",
                      "nameLocations": [
                        "809:12:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2124,
                      "src": "809:12:2"
                    },
                    "referencedDeclaration": 2124,
                    "src": "809:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StaticConfig_$2124_storage_ptr",
                      "typeString": "struct CommitStore.StaticConfig"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2111,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dynamicConfig",
                  "nameLocation": "850:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2113,
                  "src": "836:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DynamicConfig_$2129_memory_ptr",
                    "typeString": "struct CommitStore.DynamicConfig"
                  },
                  "typeName": {
                    "id": 2110,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2109,
                      "name": "DynamicConfig",
                      "nameLocations": [
                        "836:13:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2129,
                      "src": "836:13:2"
                    },
                    "referencedDeclaration": 2129,
                    "src": "836:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DynamicConfig_$2129_storage_ptr",
                      "typeString": "struct CommitStore.DynamicConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "808:56:2"
            }
          },
          {
            "id": 2117,
            "nodeType": "EventDefinition",
            "src": "868:32:2",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "202f1139a3e334b6056064c0e9b19fd07e44a88d8f6e5ded571b24cf8c371f12",
            "name": "RootRemoved",
            "nameLocation": "874:11:2",
            "parameters": {
              "id": 2116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2115,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "894:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2117,
                  "src": "886:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2114,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "886:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "885:14:2"
            }
          },
          {
            "id": 2124,
            "nodeType": "StructDefinition",
            "src": "945:212:2",
            "nodes": [],
            "canonicalName": "CommitStore.StaticConfig",
            "members": [
              {
                "constant": false,
                "id": 2119,
                "mutability": "mutable",
                "name": "chainSelector",
                "nameLocation": "978:13:2",
                "nodeType": "VariableDeclaration",
                "scope": 2124,
                "src": "971:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 2118,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "971:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2121,
                "mutability": "mutable",
                "name": "sourceChainSelector",
                "nameLocation": "1045:19:2",
                "nodeType": "VariableDeclaration",
                "scope": 2124,
                "src": "1038:26:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 2120,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1038:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2123,
                "mutability": "mutable",
                "name": "onRamp",
                "nameLocation": "1108:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 2124,
                "src": "1100:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2122,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1100:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StaticConfig",
            "nameLocation": "952:12:2",
            "scope": 2623,
            "visibility": "public"
          },
          {
            "id": 2129,
            "nodeType": "StructDefinition",
            "src": "1203:128:2",
            "nodes": [],
            "canonicalName": "CommitStore.DynamicConfig",
            "members": [
              {
                "constant": false,
                "id": 2126,
                "mutability": "mutable",
                "name": "priceRegistry",
                "nameLocation": "1238:13:2",
                "nodeType": "VariableDeclaration",
                "scope": 2129,
                "src": "1230:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2125,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1230:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2128,
                "mutability": "mutable",
                "name": "ARM",
                "nameLocation": "1316:3:2",
                "nodeType": "VariableDeclaration",
                "scope": 2129,
                "src": "1308:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2127,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1308:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DynamicConfig",
            "nameLocation": "1210:13:2",
            "scope": 2623,
            "visibility": "public"
          },
          {
            "id": 2134,
            "nodeType": "StructDefinition",
            "src": "1375:143:2",
            "nodes": [],
            "canonicalName": "CommitStore.Interval",
            "members": [
              {
                "constant": false,
                "id": 2131,
                "mutability": "mutable",
                "name": "min",
                "nameLocation": "1404:3:2",
                "nodeType": "VariableDeclaration",
                "scope": 2134,
                "src": "1397:10:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 2130,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1397:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2133,
                "mutability": "mutable",
                "name": "max",
                "nameLocation": "1465:3:2",
                "nodeType": "VariableDeclaration",
                "scope": 2134,
                "src": "1458:10:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 2132,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1458:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Interval",
            "nameLocation": "1382:8:2",
            "scope": 2623,
            "visibility": "public"
          },
          {
            "id": 2143,
            "nodeType": "StructDefinition",
            "src": "1606:112:2",
            "nodes": [],
            "canonicalName": "CommitStore.CommitReport",
            "members": [
              {
                "constant": false,
                "id": 2137,
                "mutability": "mutable",
                "name": "priceUpdates",
                "nameLocation": "1654:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 2143,
                "src": "1632:34:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PriceUpdates_$5683_storage_ptr",
                  "typeString": "struct Internal.PriceUpdates"
                },
                "typeName": {
                  "id": 2136,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 2135,
                    "name": "Internal.PriceUpdates",
                    "nameLocations": [
                      "1632:8:2",
                      "1641:12:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 5683,
                    "src": "1632:21:2"
                  },
                  "referencedDeclaration": 5683,
                  "src": "1632:21:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PriceUpdates_$5683_storage_ptr",
                    "typeString": "struct Internal.PriceUpdates"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2140,
                "mutability": "mutable",
                "name": "interval",
                "nameLocation": "1681:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 2143,
                "src": "1672:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Interval_$2134_storage_ptr",
                  "typeString": "struct CommitStore.Interval"
                },
                "typeName": {
                  "id": 2139,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 2138,
                    "name": "Interval",
                    "nameLocations": [
                      "1672:8:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2134,
                    "src": "1672:8:2"
                  },
                  "referencedDeclaration": 2134,
                  "src": "1672:8:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Interval_$2134_storage_ptr",
                    "typeString": "struct CommitStore.Interval"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2142,
                "mutability": "mutable",
                "name": "merkleRoot",
                "nameLocation": "1703:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 2143,
                "src": "1695:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 2141,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1695:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "CommitReport",
            "nameLocation": "1613:12:2",
            "scope": 2623,
            "visibility": "public"
          },
          {
            "id": 2147,
            "nodeType": "VariableDeclaration",
            "src": "1827:68:2",
            "nodes": [],
            "baseFunctions": [
              5522
            ],
            "constant": true,
            "functionSelector": "181f5a77",
            "mutability": "constant",
            "name": "typeAndVersion",
            "nameLocation": "1859:14:2",
            "overrides": {
              "id": 2145,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1850:8:2"
            },
            "scope": 2623,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 2144,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1827:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "436f6d6d697453746f726520312e302e30",
              "id": 2146,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1876:19:2",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_8c67514a67ef0071aeaa56f4fa6737cbed2daa81c751bf642247e36e760c7c30",
                "typeString": "literal_string \"CommitStore 1.0.0\""
              },
              "value": "CommitStore 1.0.0"
            },
            "visibility": "public"
          },
          {
            "id": 2149,
            "nodeType": "VariableDeclaration",
            "src": "1927:41:2",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "i_chainSelector",
            "nameLocation": "1953:15:2",
            "scope": 2623,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 2148,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1927:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 2151,
            "nodeType": "VariableDeclaration",
            "src": "2006:47:2",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "i_sourceChainSelector",
            "nameLocation": "2032:21:2",
            "scope": 2623,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 2150,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "2006:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 2153,
            "nodeType": "VariableDeclaration",
            "src": "2101:35:2",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "i_onRamp",
            "nameLocation": "2128:8:2",
            "scope": 2623,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2152,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2101:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 2156,
            "nodeType": "VariableDeclaration",
            "src": "2197:38:2",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_dynamicConfig",
            "nameLocation": "2220:15:2",
            "scope": 2623,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_DynamicConfig_$2129_storage",
              "typeString": "struct CommitStore.DynamicConfig"
            },
            "typeName": {
              "id": 2155,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2154,
                "name": "DynamicConfig",
                "nameLocations": [
                  "2197:13:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2129,
                "src": "2197:13:2"
              },
              "referencedDeclaration": 2129,
              "src": "2197:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_DynamicConfig_$2129_storage_ptr",
                "typeString": "struct CommitStore.DynamicConfig"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 2159,
            "nodeType": "VariableDeclaration",
            "src": "2309:29:2",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_minSeqNr",
            "nameLocation": "2324:10:2",
            "scope": 2623,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 2157,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "2309:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 2158,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2337:1:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "id": 2163,
            "nodeType": "VariableDeclaration",
            "src": "2390:29:2",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 2160,
              "nodeType": "StructuredDocumentation",
              "src": "2342:45:2",
              "text": "@dev Whether this OnRamp is paused or not"
            },
            "mutability": "mutable",
            "name": "s_paused",
            "nameLocation": "2403:8:2",
            "scope": 2623,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2161,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2390:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 2162,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2414:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "private"
          },
          {
            "id": 2167,
            "nodeType": "VariableDeclaration",
            "src": "2466:43:2",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "s_roots",
            "nameLocation": "2502:7:2",
            "scope": 2623,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 2166,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2164,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2474:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2466:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 2165,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2485:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 2213,
            "nodeType": "FunctionDefinition",
            "src": "2593:371:2",
            "nodes": [],
            "body": {
              "id": 2212,
              "nodeType": "Block",
              "src": "2650:314:2",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 2187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2176,
                            "name": "staticConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2171,
                            "src": "2660:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StaticConfig_$2124_memory_ptr",
                              "typeString": "struct CommitStore.StaticConfig memory"
                            }
                          },
                          "id": 2177,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2673:6:2",
                          "memberName": "onRamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2123,
                          "src": "2660:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2691:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2683:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2178,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2683:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2683:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2660:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 2186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2183,
                            "name": "staticConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2171,
                            "src": "2697:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StaticConfig_$2124_memory_ptr",
                              "typeString": "struct CommitStore.StaticConfig memory"
                            }
                          },
                          "id": 2184,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2710:13:2",
                          "memberName": "chainSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2119,
                          "src": "2697:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2727:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2697:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2660:68:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 2191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2188,
                          "name": "staticConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2171,
                          "src": "2732:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StaticConfig_$2124_memory_ptr",
                            "typeString": "struct CommitStore.StaticConfig memory"
                          }
                        },
                        "id": 2189,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2745:19:2",
                        "memberName": "sourceChainSelector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2121,
                        "src": "2732:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2768:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2732:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2660:109:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2196,
                  "nodeType": "IfStatement",
                  "src": "2656:154:2",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2193,
                        "name": "InvalidCommitStoreConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2090,
                        "src": "2784:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 2194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2784:26:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2195,
                    "nodeType": "RevertStatement",
                    "src": "2777:33:2"
                  }
                },
                {
                  "expression": {
                    "id": 2200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2197,
                      "name": "i_chainSelector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2149,
                      "src": "2817:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2198,
                        "name": "staticConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2171,
                        "src": "2835:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StaticConfig_$2124_memory_ptr",
                          "typeString": "struct CommitStore.StaticConfig memory"
                        }
                      },
                      "id": 2199,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2848:13:2",
                      "memberName": "chainSelector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2119,
                      "src": "2835:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "2817:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 2201,
                  "nodeType": "ExpressionStatement",
                  "src": "2817:44:2"
                },
                {
                  "expression": {
                    "id": 2205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2202,
                      "name": "i_sourceChainSelector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2151,
                      "src": "2867:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2203,
                        "name": "staticConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2171,
                        "src": "2891:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StaticConfig_$2124_memory_ptr",
                          "typeString": "struct CommitStore.StaticConfig memory"
                        }
                      },
                      "id": 2204,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2904:19:2",
                      "memberName": "sourceChainSelector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2121,
                      "src": "2891:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "2867:56:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 2206,
                  "nodeType": "ExpressionStatement",
                  "src": "2867:56:2"
                },
                {
                  "expression": {
                    "id": 2210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2207,
                      "name": "i_onRamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2153,
                      "src": "2929:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2208,
                        "name": "staticConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2171,
                        "src": "2940:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StaticConfig_$2124_memory_ptr",
                          "typeString": "struct CommitStore.StaticConfig memory"
                        }
                      },
                      "id": 2209,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2953:6:2",
                      "memberName": "onRamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2123,
                      "src": "2940:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2929:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2211,
                  "nodeType": "ExpressionStatement",
                  "src": "2929:30:2"
                }
              ]
            },
            "documentation": {
              "id": 2168,
              "nodeType": "StructuredDocumentation",
              "src": "2514:76:2",
              "text": "@param staticConfig Containing the static part of the commitStore config"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 2174,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2173,
                  "name": "OCR2Base",
                  "nameLocations": [
                    "2639:8:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7233,
                  "src": "2639:8:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2639:10:2"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 2172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2171,
                  "mutability": "mutable",
                  "name": "staticConfig",
                  "nameLocation": "2625:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2213,
                  "src": "2605:32:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StaticConfig_$2124_memory_ptr",
                    "typeString": "struct CommitStore.StaticConfig"
                  },
                  "typeName": {
                    "id": 2170,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2169,
                      "name": "StaticConfig",
                      "nameLocations": [
                        "2605:12:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2124,
                      "src": "2605:12:2"
                    },
                    "referencedDeclaration": 2124,
                    "src": "2605:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StaticConfig_$2124_storage_ptr",
                      "typeString": "struct CommitStore.StaticConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2604:34:2"
            },
            "returnParameters": {
              "id": 2175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2650:0:2"
            },
            "scope": 2623,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2222,
            "nodeType": "FunctionDefinition",
            "src": "3284:98:2",
            "nodes": [],
            "body": {
              "id": 2221,
              "nodeType": "Block",
              "src": "3354:28:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2219,
                    "name": "s_minSeqNr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2159,
                    "src": "3367:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 2218,
                  "id": 2220,
                  "nodeType": "Return",
                  "src": "3360:17:2"
                }
              ]
            },
            "baseFunctions": [
              5244
            ],
            "documentation": {
              "id": 2214,
              "nodeType": "StructuredDocumentation",
              "src": "3179:102:2",
              "text": "@notice Returns the next expected sequence number.\n @return the next expected sequenceNumber."
            },
            "functionSelector": "4120fccd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExpectedNextSequenceNumber",
            "nameLocation": "3293:29:2",
            "parameters": {
              "id": 2215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3322:2:2"
            },
            "returnParameters": {
              "id": 2218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2217,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2222,
                  "src": "3346:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2216,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3346:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3345:8:2"
            },
            "scope": 2623,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2235,
            "nodeType": "FunctionDefinition",
            "src": "3488:89:2",
            "nodes": [],
            "body": {
              "id": 2234,
              "nodeType": "Block",
              "src": "3545:32:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2230,
                      "name": "s_minSeqNr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2159,
                      "src": "3551:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2231,
                      "name": "minSeqNr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2225,
                      "src": "3564:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "3551:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 2233,
                  "nodeType": "ExpressionStatement",
                  "src": "3551:21:2"
                }
              ]
            },
            "documentation": {
              "id": 2223,
              "nodeType": "StructuredDocumentation",
              "src": "3386:99:2",
              "text": "@notice Sets the minimum sequence number.\n @param minSeqNr The new minimum sequence number"
            },
            "functionSelector": "ad7a22f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2228,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2227,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3535:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13586,
                  "src": "3535:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3535:9:2"
              }
            ],
            "name": "setMinSeqNr",
            "nameLocation": "3497:11:2",
            "parameters": {
              "id": 2226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2225,
                  "mutability": "mutable",
                  "name": "minSeqNr",
                  "nameLocation": "3516:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2235,
                  "src": "3509:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2224,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3509:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3508:17:2"
            },
            "returnParameters": {
              "id": 2229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3545:0:2"
            },
            "scope": 2623,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2248,
            "nodeType": "FunctionDefinition",
            "src": "3897:100:2",
            "nodes": [],
            "body": {
              "id": 2247,
              "nodeType": "Block",
              "src": "3966:31:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2243,
                      "name": "s_roots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2167,
                      "src": "3979:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 2245,
                    "indexExpression": {
                      "id": 2244,
                      "name": "root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2238,
                      "src": "3987:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3979:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2242,
                  "id": 2246,
                  "nodeType": "Return",
                  "src": "3972:20:2"
                }
              ]
            },
            "documentation": {
              "id": 2236,
              "nodeType": "StructuredDocumentation",
              "src": "3581:313:2",
              "text": "@notice Returns the timestamp of a potentially previously committed merkle root.\n If the root was never committed 0 will be returned.\n @param root The merkle root to check the commit status for.\n @return the timestamp of the committed root or zero in the case that it was never\n committed."
            },
            "functionSelector": "a7206cd6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMerkleRoot",
            "nameLocation": "3906:13:2",
            "parameters": {
              "id": 2239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2238,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "3928:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2248,
                  "src": "3920:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2237,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3920:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3919:14:2"
            },
            "returnParameters": {
              "id": 2242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2241,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2248,
                  "src": "3957:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2240,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3957:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3956:9:2"
            },
            "scope": 2623,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2272,
            "nodeType": "FunctionDefinition",
            "src": "4170:172:2",
            "nodes": [],
            "body": {
              "id": 2271,
              "nodeType": "Block",
              "src": "4230:112:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 2265,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4317:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CommitStore_$2623",
                                  "typeString": "contract CommitStore"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CommitStore_$2623",
                                  "typeString": "contract CommitStore"
                                }
                              ],
                              "id": 2264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4309:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2263,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4309:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4309:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2267,
                            "name": "root",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2251,
                            "src": "4330:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 2261,
                            "name": "IARM",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5198,
                            "src": "4279:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IARM_$5198_$",
                              "typeString": "type(contract IARM)"
                            }
                          },
                          "id": 2262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4284:10:2",
                          "memberName": "TaggedRoot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5182,
                          "src": "4279:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TaggedRoot_$5182_storage_ptr_$",
                            "typeString": "type(struct IARM.TaggedRoot storage pointer)"
                          }
                        },
                        "id": 2268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "4296:11:2",
                          "4324:4:2"
                        ],
                        "names": [
                          "commitStore",
                          "root"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "4279:57:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaggedRoot_$5182_memory_ptr",
                          "typeString": "struct IARM.TaggedRoot memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TaggedRoot_$5182_memory_ptr",
                          "typeString": "struct IARM.TaggedRoot memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2257,
                              "name": "s_dynamicConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2156,
                              "src": "4248:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DynamicConfig_$2129_storage",
                                "typeString": "struct CommitStore.DynamicConfig storage ref"
                              }
                            },
                            "id": 2258,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4264:3:2",
                            "memberName": "ARM",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2128,
                            "src": "4248:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2256,
                          "name": "IARM",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5198,
                          "src": "4243:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IARM_$5198_$",
                            "typeString": "type(contract IARM)"
                          }
                        },
                        "id": 2259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4243:25:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IARM_$5198",
                          "typeString": "contract IARM"
                        }
                      },
                      "id": 2260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4269:9:2",
                      "memberName": "isBlessed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5191,
                      "src": "4243:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_struct$_TaggedRoot_$5182_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (struct IARM.TaggedRoot memory) view external returns (bool)"
                      }
                    },
                    "id": 2269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4243:94:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2255,
                  "id": 2270,
                  "nodeType": "Return",
                  "src": "4236:101:2"
                }
              ]
            },
            "documentation": {
              "id": 2249,
              "nodeType": "StructuredDocumentation",
              "src": "4001:166:2",
              "text": "@notice Returns if a root is blessed or not.\n @param root The merkle root to check the blessing status for.\n @return whether the root is blessed or not."
            },
            "functionSelector": "ff888fb1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isBlessed",
            "nameLocation": "4179:9:2",
            "parameters": {
              "id": 2252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2251,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "4197:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2272,
                  "src": "4189:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2250,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4189:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4188:14:2"
            },
            "returnParameters": {
              "id": 2255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2254,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2272,
                  "src": "4224:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2253,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4224:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4223:6:2"
            },
            "scope": 2623,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2316,
            "nodeType": "FunctionDefinition",
            "src": "4620:283:2",
            "nodes": [],
            "body": {
              "id": 2315,
              "nodeType": "Block",
              "src": "4700:203:2",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 2313,
                    "nodeType": "Block",
                    "src": "4755:144:2",
                    "statements": [
                      {
                        "assignments": [
                          2293
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2293,
                            "mutability": "mutable",
                            "name": "root",
                            "nameLocation": "4771:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 2313,
                            "src": "4763:12:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 2292,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4763:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2297,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2294,
                            "name": "rootToReset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2276,
                            "src": "4778:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          "id": 2296,
                          "indexExpression": {
                            "id": 2295,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2282,
                            "src": "4790:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4778:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4763:29:2"
                      },
                      {
                        "condition": {
                          "id": 2301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4804:16:2",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 2299,
                                "name": "root",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2293,
                                "src": "4815:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 2298,
                              "name": "isBlessed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2272,
                              "src": "4805:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
                                "typeString": "function (bytes32) view returns (bool)"
                              }
                            },
                            "id": 2300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4805:15:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2312,
                        "nodeType": "IfStatement",
                        "src": "4800:93:2",
                        "trueBody": {
                          "id": 2311,
                          "nodeType": "Block",
                          "src": "4822:71:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 2305,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "4832:20:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 2302,
                                    "name": "s_roots",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2167,
                                    "src": "4839:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                      "typeString": "mapping(bytes32 => uint256)"
                                    }
                                  },
                                  "id": 2304,
                                  "indexExpression": {
                                    "id": 2303,
                                    "name": "root",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2293,
                                    "src": "4847:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4839:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2306,
                              "nodeType": "ExpressionStatement",
                              "src": "4832:20:2"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2308,
                                    "name": "root",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2293,
                                    "src": "4879:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 2307,
                                  "name": "RootRemoved",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2117,
                                  "src": "4867:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32)"
                                  }
                                },
                                "id": 2309,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4867:17:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2310,
                              "nodeType": "EmitStatement",
                              "src": "4862:22:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2285,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2282,
                      "src": "4726:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2286,
                        "name": "rootToReset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2276,
                        "src": "4730:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      "id": 2287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4742:6:2",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4730:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4726:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2314,
                  "initializationExpression": {
                    "assignments": [
                      2282
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2282,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4719:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 2314,
                        "src": "4711:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2281,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4711:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2284,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4723:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4711:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "4750:3:2",
                      "subExpression": {
                        "id": 2289,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2282,
                        "src": "4752:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2291,
                    "nodeType": "ExpressionStatement",
                    "src": "4750:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "4706:193:2"
                }
              ]
            },
            "documentation": {
              "id": 2273,
              "nodeType": "StructuredDocumentation",
              "src": "4346:271:2",
              "text": "@notice Used by the owner in case an invalid sequence of roots has been\n posted and needs to be removed. The interval in the report is trusted.\n @param rootToReset The roots that will be reset. This function will only\n reset roots that are not blessed."
            },
            "functionSelector": "f47a8690",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2279,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2278,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4690:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13586,
                  "src": "4690:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4690:9:2"
              }
            ],
            "name": "resetUnblessedRoots",
            "nameLocation": "4629:19:2",
            "parameters": {
              "id": 2277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2276,
                  "mutability": "mutable",
                  "name": "rootToReset",
                  "nameLocation": "4668:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2316,
                  "src": "4649:30:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2274,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4649:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 2275,
                    "nodeType": "ArrayTypeName",
                    "src": "4649:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4648:32:2"
            },
            "returnParameters": {
              "id": 2280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4700:0:2"
            },
            "scope": 2623,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2361,
            "nodeType": "FunctionDefinition",
            "src": "4938:420:2",
            "nodes": [],
            "body": {
              "id": 2360,
              "nodeType": "Block",
              "src": "5118:240:2",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    2334
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2334,
                      "mutability": "mutable",
                      "name": "root",
                      "nameLocation": "5132:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2360,
                      "src": "5124:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2333,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5124:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2341,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2337,
                        "name": "hashedLeaves",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2320,
                        "src": "5167:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 2338,
                        "name": "proofs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2323,
                        "src": "5181:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      },
                      {
                        "id": 2339,
                        "name": "proofFlagBits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2325,
                        "src": "5189:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2335,
                        "name": "MerkleMultiProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6023,
                        "src": "5139:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MerkleMultiProof_$6023_$",
                          "typeString": "type(library MerkleMultiProof)"
                        }
                      },
                      "id": 2336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5156:10:2",
                      "memberName": "merkleRoot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5978,
                      "src": "5139:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32[] memory,bytes32[] memory,uint256) pure returns (bytes32)"
                      }
                    },
                    "id": 2340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5139:64:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5124:79:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 2342,
                          "name": "s_roots",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2167,
                          "src": "5265:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                            "typeString": "mapping(bytes32 => uint256)"
                          }
                        },
                        "id": 2344,
                        "indexExpression": {
                          "id": 2343,
                          "name": "root",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2334,
                          "src": "5273:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5265:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5282:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5265:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "id": 2350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "5287:16:2",
                      "subExpression": {
                        "arguments": [
                          {
                            "id": 2348,
                            "name": "root",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2334,
                            "src": "5298:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 2347,
                          "name": "isBlessed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2272,
                          "src": "5288:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) view returns (bool)"
                          }
                        },
                        "id": 2349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5288:15:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5265:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2355,
                  "nodeType": "IfStatement",
                  "src": "5261:67:2",
                  "trueBody": {
                    "id": 2354,
                    "nodeType": "Block",
                    "src": "5305:23:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 2352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5320:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 2332,
                        "id": 2353,
                        "nodeType": "Return",
                        "src": "5313:8:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2356,
                      "name": "s_roots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2167,
                      "src": "5340:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 2358,
                    "indexExpression": {
                      "id": 2357,
                      "name": "root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2334,
                      "src": "5348:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5340:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2332,
                  "id": 2359,
                  "nodeType": "Return",
                  "src": "5333:20:2"
                }
              ]
            },
            "baseFunctions": [
              5238
            ],
            "documentation": {
              "id": 2317,
              "nodeType": "StructuredDocumentation",
              "src": "4907:28:2",
              "text": "@inheritdoc ICommitStore"
            },
            "functionSelector": "32048875",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2329,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2328,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "5076:13:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2581,
                  "src": "5076:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "5076:13:2"
              }
            ],
            "name": "verify",
            "nameLocation": "4947:6:2",
            "overrides": {
              "id": 2327,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5067:8:2"
            },
            "parameters": {
              "id": 2326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2320,
                  "mutability": "mutable",
                  "name": "hashedLeaves",
                  "nameLocation": "4978:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2361,
                  "src": "4959:31:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2318,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4959:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 2319,
                    "nodeType": "ArrayTypeName",
                    "src": "4959:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2323,
                  "mutability": "mutable",
                  "name": "proofs",
                  "nameLocation": "5015:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2361,
                  "src": "4996:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2321,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4996:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 2322,
                    "nodeType": "ArrayTypeName",
                    "src": "4996:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2325,
                  "mutability": "mutable",
                  "name": "proofFlagBits",
                  "nameLocation": "5035:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2361,
                  "src": "5027:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2324,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5027:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4953:99:2"
            },
            "returnParameters": {
              "id": 2332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2331,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "5107:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2361,
                  "src": "5099:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2330,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5099:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5098:19:2"
            },
            "scope": 2623,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2466,
            "nodeType": "FunctionDefinition",
            "src": "5389:976:2",
            "nodes": [],
            "body": {
              "id": 2465,
              "nodeType": "Block",
              "src": "5478:887:2",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    2374
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2374,
                      "mutability": "mutable",
                      "name": "report",
                      "nameLocation": "5504:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2465,
                      "src": "5484:26:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CommitReport_$2143_memory_ptr",
                        "typeString": "struct CommitStore.CommitReport"
                      },
                      "typeName": {
                        "id": 2373,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2372,
                          "name": "CommitReport",
                          "nameLocations": [
                            "5484:12:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2143,
                          "src": "5484:12:2"
                        },
                        "referencedDeclaration": 2143,
                        "src": "5484:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CommitReport_$2143_storage_ptr",
                          "typeString": "struct CommitStore.CommitReport"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2381,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2377,
                        "name": "encodedReport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2364,
                        "src": "5524:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 2378,
                            "name": "CommitReport",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2143,
                            "src": "5540:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_CommitReport_$2143_storage_ptr_$",
                              "typeString": "type(struct CommitStore.CommitReport storage pointer)"
                            }
                          }
                        ],
                        "id": 2379,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5539:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_CommitReport_$2143_storage_ptr_$",
                          "typeString": "type(struct CommitStore.CommitReport storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_CommitReport_$2143_storage_ptr_$",
                          "typeString": "type(struct CommitStore.CommitReport storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 2375,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5513:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 2376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5517:6:2",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "5513:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 2380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5513:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CommitReport_$2143_memory_ptr",
                      "typeString": "struct CommitStore.CommitReport memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5484:70:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "expression": {
                            "expression": {
                              "id": 2382,
                              "name": "report",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2374,
                              "src": "5565:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CommitReport_$2143_memory_ptr",
                                "typeString": "struct CommitStore.CommitReport memory"
                              }
                            },
                            "id": 2383,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5572:12:2",
                            "memberName": "priceUpdates",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2137,
                            "src": "5565:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PriceUpdates_$5683_memory_ptr",
                              "typeString": "struct Internal.PriceUpdates memory"
                            }
                          },
                          "id": 2384,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5585:17:2",
                          "memberName": "tokenPriceUpdates",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5678,
                          "src": "5565:37:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_TokenPriceUpdate_$5688_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Internal.TokenPriceUpdate memory[] memory"
                          }
                        },
                        "id": 2385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5603:6:2",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "5565:44:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5612:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5565:48:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 2392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "expression": {
                            "id": 2388,
                            "name": "report",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2374,
                            "src": "5617:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CommitReport_$2143_memory_ptr",
                              "typeString": "struct CommitStore.CommitReport memory"
                            }
                          },
                          "id": 2389,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5624:12:2",
                          "memberName": "priceUpdates",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2137,
                          "src": "5617:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PriceUpdates_$5683_memory_ptr",
                            "typeString": "struct Internal.PriceUpdates memory"
                          }
                        },
                        "id": 2390,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5637:17:2",
                        "memberName": "destChainSelector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5680,
                        "src": "5617:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5658:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5617:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5565:94:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2414,
                  "nodeType": "IfStatement",
                  "src": "5561:399:2",
                  "trueBody": {
                    "id": 2413,
                    "nodeType": "Block",
                    "src": "5661:299:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2399,
                                "name": "report",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2374,
                                "src": "5728:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CommitReport_$2143_memory_ptr",
                                  "typeString": "struct CommitStore.CommitReport memory"
                                }
                              },
                              "id": 2400,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5735:12:2",
                              "memberName": "priceUpdates",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2137,
                              "src": "5728:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PriceUpdates_$5683_memory_ptr",
                                "typeString": "struct Internal.PriceUpdates memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_PriceUpdates_$5683_memory_ptr",
                                "typeString": "struct Internal.PriceUpdates memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2395,
                                    "name": "s_dynamicConfig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2156,
                                    "src": "5684:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_DynamicConfig_$2129_storage",
                                      "typeString": "struct CommitStore.DynamicConfig storage ref"
                                    }
                                  },
                                  "id": 2396,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5700:13:2",
                                  "memberName": "priceRegistry",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2126,
                                  "src": "5684:29:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2394,
                                "name": "IPriceRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5441,
                                "src": "5669:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IPriceRegistry_$5441_$",
                                  "typeString": "type(contract IPriceRegistry)"
                                }
                              },
                              "id": 2397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5669:45:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPriceRegistry_$5441",
                                "typeString": "contract IPriceRegistry"
                              }
                            },
                            "id": 2398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5715:12:2",
                            "memberName": "updatePrices",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5379,
                            "src": "5669:58:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PriceUpdates_$5683_memory_ptr_$returns$__$",
                              "typeString": "function (struct Internal.PriceUpdates memory) external"
                            }
                          },
                          "id": 2401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5669:79:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2402,
                        "nodeType": "ExpressionStatement",
                        "src": "5669:79:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 2409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2403,
                              "name": "report",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2374,
                              "src": "5896:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CommitReport_$2143_memory_ptr",
                                "typeString": "struct CommitStore.CommitReport memory"
                              }
                            },
                            "id": 2404,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5903:10:2",
                            "memberName": "merkleRoot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2142,
                            "src": "5896:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2407,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5925:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5917:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 2405,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "5917:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5917:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "5896:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2412,
                        "nodeType": "IfStatement",
                        "src": "5892:62:2",
                        "trueBody": {
                          "id": 2411,
                          "nodeType": "Block",
                          "src": "5929:25:2",
                          "statements": [
                            {
                              "functionReturnParameters": 2371,
                              "id": 2410,
                              "nodeType": "Return",
                              "src": "5939:7:2"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 2419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2415,
                        "name": "s_minSeqNr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2159,
                        "src": "6045:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "expression": {
                            "id": 2416,
                            "name": "report",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2374,
                            "src": "6059:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CommitReport_$2143_memory_ptr",
                              "typeString": "struct CommitStore.CommitReport memory"
                            }
                          },
                          "id": 2417,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6066:8:2",
                          "memberName": "interval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2140,
                          "src": "6059:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Interval_$2134_memory_ptr",
                            "typeString": "struct CommitStore.Interval memory"
                          }
                        },
                        "id": 2418,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6075:3:2",
                        "memberName": "min",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2131,
                        "src": "6059:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "src": "6045:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 2426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "expression": {
                            "id": 2420,
                            "name": "report",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2374,
                            "src": "6082:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CommitReport_$2143_memory_ptr",
                              "typeString": "struct CommitStore.CommitReport memory"
                            }
                          },
                          "id": 2421,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6089:8:2",
                          "memberName": "interval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2140,
                          "src": "6082:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Interval_$2134_memory_ptr",
                            "typeString": "struct CommitStore.Interval memory"
                          }
                        },
                        "id": 2422,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6098:3:2",
                        "memberName": "min",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2131,
                        "src": "6082:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "expression": {
                          "expression": {
                            "id": 2423,
                            "name": "report",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2374,
                            "src": "6104:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CommitReport_$2143_memory_ptr",
                              "typeString": "struct CommitStore.CommitReport memory"
                            }
                          },
                          "id": 2424,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6111:8:2",
                          "memberName": "interval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2140,
                          "src": "6104:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Interval_$2134_memory_ptr",
                            "typeString": "struct CommitStore.Interval memory"
                          }
                        },
                        "id": 2425,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6120:3:2",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2133,
                        "src": "6104:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "src": "6082:41:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6045:78:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2433,
                  "nodeType": "IfStatement",
                  "src": "6041:129:2",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 2429,
                            "name": "report",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2374,
                            "src": "6154:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CommitReport_$2143_memory_ptr",
                              "typeString": "struct CommitStore.CommitReport memory"
                            }
                          },
                          "id": 2430,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6161:8:2",
                          "memberName": "interval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2140,
                          "src": "6154:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Interval_$2134_memory_ptr",
                            "typeString": "struct CommitStore.Interval memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Interval_$2134_memory_ptr",
                            "typeString": "struct CommitStore.Interval memory"
                          }
                        ],
                        "id": 2428,
                        "name": "InvalidInterval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2086,
                        "src": "6138:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_struct$_Interval_$2134_memory_ptr_$returns$__$",
                          "typeString": "function (struct CommitStore.Interval memory) pure"
                        }
                      },
                      "id": 2431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6138:32:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2432,
                    "nodeType": "RevertStatement",
                    "src": "6131:39:2"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 2440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2434,
                        "name": "report",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2374,
                        "src": "6181:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CommitReport_$2143_memory_ptr",
                          "typeString": "struct CommitStore.CommitReport memory"
                        }
                      },
                      "id": 2435,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6188:10:2",
                      "memberName": "merkleRoot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2142,
                      "src": "6181:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6210:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6202:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 2436,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6202:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6202:10:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6181:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2444,
                  "nodeType": "IfStatement",
                  "src": "6177:57:2",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2441,
                        "name": "InvalidRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2088,
                        "src": "6221:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 2442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6221:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2443,
                    "nodeType": "RevertStatement",
                    "src": "6214:20:2"
                  }
                },
                {
                  "expression": {
                    "id": 2451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2445,
                      "name": "s_minSeqNr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2159,
                      "src": "6241:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 2450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "expression": {
                            "id": 2446,
                            "name": "report",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2374,
                            "src": "6254:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CommitReport_$2143_memory_ptr",
                              "typeString": "struct CommitStore.CommitReport memory"
                            }
                          },
                          "id": 2447,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6261:8:2",
                          "memberName": "interval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2140,
                          "src": "6254:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Interval_$2134_memory_ptr",
                            "typeString": "struct CommitStore.Interval memory"
                          }
                        },
                        "id": 2448,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6270:3:2",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2133,
                        "src": "6254:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 2449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6276:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "6254:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "6241:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 2452,
                  "nodeType": "ExpressionStatement",
                  "src": "6241:36:2"
                },
                {
                  "expression": {
                    "id": 2459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2453,
                        "name": "s_roots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2167,
                        "src": "6283:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 2456,
                      "indexExpression": {
                        "expression": {
                          "id": 2454,
                          "name": "report",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2374,
                          "src": "6291:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CommitReport_$2143_memory_ptr",
                            "typeString": "struct CommitStore.CommitReport memory"
                          }
                        },
                        "id": 2455,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6298:10:2",
                        "memberName": "merkleRoot",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2142,
                        "src": "6291:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6283:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2457,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6312:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6318:9:2",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6312:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6283:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2460,
                  "nodeType": "ExpressionStatement",
                  "src": "6283:44:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2462,
                        "name": "report",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2374,
                        "src": "6353:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CommitReport_$2143_memory_ptr",
                          "typeString": "struct CommitStore.CommitReport memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CommitReport_$2143_memory_ptr",
                          "typeString": "struct CommitStore.CommitReport memory"
                        }
                      ],
                      "id": 2461,
                      "name": "ReportAccepted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2105,
                      "src": "6338:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_CommitReport_$2143_memory_ptr_$returns$__$",
                        "typeString": "function (struct CommitStore.CommitReport memory)"
                      }
                    },
                    "id": 2463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6338:22:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2464,
                  "nodeType": "EmitStatement",
                  "src": "6333:27:2"
                }
              ]
            },
            "baseFunctions": [
              7232
            ],
            "documentation": {
              "id": 2362,
              "nodeType": "StructuredDocumentation",
              "src": "5362:24:2",
              "text": "@inheritdoc OCR2Base"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2368,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2367,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "5452:13:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2581,
                  "src": "5452:13:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "5452:13:2"
              },
              {
                "id": 2370,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2369,
                  "name": "whenHealthy",
                  "nameLocations": [
                    "5466:11:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2570,
                  "src": "5466:11:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "5466:11:2"
              }
            ],
            "name": "_report",
            "nameLocation": "5398:7:2",
            "overrides": {
              "id": 2366,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5443:8:2"
            },
            "parameters": {
              "id": 2365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2364,
                  "mutability": "mutable",
                  "name": "encodedReport",
                  "nameLocation": "5419:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2466,
                  "src": "5406:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2363,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5406:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5405:28:2"
            },
            "returnParameters": {
              "id": 2371,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5478:0:2"
            },
            "scope": 2623,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 2480,
            "nodeType": "FunctionDefinition",
            "src": "6667:197:2",
            "nodes": [],
            "body": {
              "id": 2479,
              "nodeType": "Block",
              "src": "6738:126:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2474,
                        "name": "i_chainSelector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2149,
                        "src": "6780:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 2475,
                        "name": "i_sourceChainSelector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2151,
                        "src": "6818:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 2476,
                        "name": "i_onRamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2153,
                        "src": "6849:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2473,
                      "name": "StaticConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2124,
                      "src": "6751:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_StaticConfig_$2124_storage_ptr_$",
                        "typeString": "type(struct CommitStore.StaticConfig storage pointer)"
                      }
                    },
                    "id": 2477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "6765:13:2",
                      "6797:19:2",
                      "6841:6:2"
                    ],
                    "names": [
                      "chainSelector",
                      "sourceChainSelector",
                      "onRamp"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "6751:108:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StaticConfig_$2124_memory_ptr",
                      "typeString": "struct CommitStore.StaticConfig memory"
                    }
                  },
                  "functionReturnParameters": 2472,
                  "id": 2478,
                  "nodeType": "Return",
                  "src": "6744:115:2"
                }
              ]
            },
            "documentation": {
              "id": 2467,
              "nodeType": "StructuredDocumentation",
              "src": "6580:84:2",
              "text": "@notice Returns the static commit store config.\n @return the configuration."
            },
            "functionSelector": "06285c69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStaticConfig",
            "nameLocation": "6676:15:2",
            "parameters": {
              "id": 2468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6691:2:2"
            },
            "returnParameters": {
              "id": 2472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2471,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2480,
                  "src": "6717:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StaticConfig_$2124_memory_ptr",
                    "typeString": "struct CommitStore.StaticConfig"
                  },
                  "typeName": {
                    "id": 2470,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2469,
                      "name": "StaticConfig",
                      "nameLocations": [
                        "6717:12:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2124,
                      "src": "6717:12:2"
                    },
                    "referencedDeclaration": 2124,
                    "src": "6717:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StaticConfig_$2124_storage_ptr",
                      "typeString": "struct CommitStore.StaticConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6716:21:2"
            },
            "scope": 2623,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2490,
            "nodeType": "FunctionDefinition",
            "src": "6956:106:2",
            "nodes": [],
            "body": {
              "id": 2489,
              "nodeType": "Block",
              "src": "7029:33:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2487,
                    "name": "s_dynamicConfig",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2156,
                    "src": "7042:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DynamicConfig_$2129_storage",
                      "typeString": "struct CommitStore.DynamicConfig storage ref"
                    }
                  },
                  "functionReturnParameters": 2486,
                  "id": 2488,
                  "nodeType": "Return",
                  "src": "7035:22:2"
                }
              ]
            },
            "documentation": {
              "id": 2481,
              "nodeType": "StructuredDocumentation",
              "src": "6868:85:2",
              "text": "@notice Returns the dynamic commit store config.\n @return the configuration."
            },
            "functionSelector": "7437ff9f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDynamicConfig",
            "nameLocation": "6965:16:2",
            "parameters": {
              "id": 2482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6981:2:2"
            },
            "returnParameters": {
              "id": 2486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2485,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2490,
                  "src": "7007:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DynamicConfig_$2129_memory_ptr",
                    "typeString": "struct CommitStore.DynamicConfig"
                  },
                  "typeName": {
                    "id": 2484,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2483,
                      "name": "DynamicConfig",
                      "nameLocations": [
                        "7007:13:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2129,
                      "src": "7007:13:2"
                    },
                    "referencedDeclaration": 2129,
                    "src": "7007:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DynamicConfig_$2129_storage_ptr",
                      "typeString": "struct CommitStore.DynamicConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7006:22:2"
            },
            "scope": 2623,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2540,
            "nodeType": "FunctionDefinition",
            "src": "7157:486:2",
            "nodes": [],
            "body": {
              "id": 2539,
              "nodeType": "Block",
              "src": "7229:414:2",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    2499
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2499,
                      "mutability": "mutable",
                      "name": "dynamicConfig",
                      "nameLocation": "7256:13:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2539,
                      "src": "7235:34:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DynamicConfig_$2129_memory_ptr",
                        "typeString": "struct CommitStore.DynamicConfig"
                      },
                      "typeName": {
                        "id": 2498,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2497,
                          "name": "DynamicConfig",
                          "nameLocations": [
                            "7235:13:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2129,
                          "src": "7235:13:2"
                        },
                        "referencedDeclaration": 2129,
                        "src": "7235:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DynamicConfig_$2129_storage_ptr",
                          "typeString": "struct CommitStore.DynamicConfig"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2506,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2502,
                        "name": "onchainConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2493,
                        "src": "7283:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 2503,
                            "name": "DynamicConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2129,
                            "src": "7299:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_DynamicConfig_$2129_storage_ptr_$",
                              "typeString": "type(struct CommitStore.DynamicConfig storage pointer)"
                            }
                          }
                        ],
                        "id": 2504,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7298:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_DynamicConfig_$2129_storage_ptr_$",
                          "typeString": "type(struct CommitStore.DynamicConfig storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_DynamicConfig_$2129_storage_ptr_$",
                          "typeString": "type(struct CommitStore.DynamicConfig storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 2500,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7272:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 2501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "7276:6:2",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "7272:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 2505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7272:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DynamicConfig_$2129_memory_ptr",
                      "typeString": "struct CommitStore.DynamicConfig memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7235:79:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2507,
                          "name": "dynamicConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2499,
                          "src": "7325:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DynamicConfig_$2129_memory_ptr",
                            "typeString": "struct CommitStore.DynamicConfig memory"
                          }
                        },
                        "id": 2508,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7339:3:2",
                        "memberName": "ARM",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2128,
                        "src": "7325:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7354:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7346:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2509,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7346:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7346:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "7325:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 2514,
                          "name": "dynamicConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2499,
                          "src": "7360:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DynamicConfig_$2129_memory_ptr",
                            "typeString": "struct CommitStore.DynamicConfig memory"
                          }
                        },
                        "id": 2515,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7374:13:2",
                        "memberName": "priceRegistry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2126,
                        "src": "7360:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7399:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7391:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2516,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7391:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7391:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "7360:41:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7325:76:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2525,
                  "nodeType": "IfStatement",
                  "src": "7321:115:2",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2522,
                        "name": "InvalidCommitStoreConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2090,
                        "src": "7410:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 2523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7410:26:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2524,
                    "nodeType": "RevertStatement",
                    "src": "7403:33:2"
                  }
                },
                {
                  "expression": {
                    "id": 2528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2526,
                      "name": "s_dynamicConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2156,
                      "src": "7443:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DynamicConfig_$2129_storage",
                        "typeString": "struct CommitStore.DynamicConfig storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2527,
                      "name": "dynamicConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2499,
                      "src": "7461:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DynamicConfig_$2129_memory_ptr",
                        "typeString": "struct CommitStore.DynamicConfig memory"
                      }
                    },
                    "src": "7443:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DynamicConfig_$2129_storage",
                      "typeString": "struct CommitStore.DynamicConfig storage ref"
                    }
                  },
                  "id": 2529,
                  "nodeType": "ExpressionStatement",
                  "src": "7443:31:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2532,
                            "name": "i_chainSelector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2149,
                            "src": "7532:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "id": 2533,
                            "name": "i_sourceChainSelector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2151,
                            "src": "7570:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "id": 2534,
                            "name": "i_onRamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2153,
                            "src": "7601:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2531,
                          "name": "StaticConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2124,
                          "src": "7503:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_StaticConfig_$2124_storage_ptr_$",
                            "typeString": "type(struct CommitStore.StaticConfig storage pointer)"
                          }
                        },
                        "id": 2535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "7517:13:2",
                          "7549:19:2",
                          "7593:6:2"
                        ],
                        "names": [
                          "chainSelector",
                          "sourceChainSelector",
                          "onRamp"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "7503:108:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StaticConfig_$2124_memory_ptr",
                          "typeString": "struct CommitStore.StaticConfig memory"
                        }
                      },
                      {
                        "id": 2536,
                        "name": "dynamicConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2499,
                        "src": "7619:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DynamicConfig_$2129_memory_ptr",
                          "typeString": "struct CommitStore.DynamicConfig memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_StaticConfig_$2124_memory_ptr",
                          "typeString": "struct CommitStore.StaticConfig memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_DynamicConfig_$2129_memory_ptr",
                          "typeString": "struct CommitStore.DynamicConfig memory"
                        }
                      ],
                      "id": 2530,
                      "name": "ConfigSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2113,
                        6438
                      ],
                      "referencedDeclaration": 2113,
                      "src": "7486:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_StaticConfig_$2124_memory_ptr_$_t_struct$_DynamicConfig_$2129_memory_ptr_$returns$__$",
                        "typeString": "function (struct CommitStore.StaticConfig memory,struct CommitStore.DynamicConfig memory)"
                      }
                    },
                    "id": 2537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7486:152:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2538,
                  "nodeType": "EmitStatement",
                  "src": "7481:157:2"
                }
              ]
            },
            "baseFunctions": [
              6940
            ],
            "documentation": {
              "id": 2491,
              "nodeType": "StructuredDocumentation",
              "src": "7066:88:2",
              "text": "@notice Sets the dynamic config. This function is called during `setOCR2Config` flow"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeSetConfig",
            "nameLocation": "7166:16:2",
            "overrides": {
              "id": 2495,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7220:8:2"
            },
            "parameters": {
              "id": 2494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2493,
                  "mutability": "mutable",
                  "name": "onchainConfig",
                  "nameLocation": "7196:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2540,
                  "src": "7183:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2492,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7183:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7182:28:2"
            },
            "returnParameters": {
              "id": 2496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7229:0:2"
            },
            "scope": 2623,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 2555,
            "nodeType": "FunctionDefinition",
            "src": "7924:108:2",
            "nodes": [],
            "body": {
              "id": 2554,
              "nodeType": "Block",
              "src": "7977:55:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "7990:37:2",
                    "subExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2547,
                                "name": "s_dynamicConfig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2156,
                                "src": "7996:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DynamicConfig_$2129_storage",
                                  "typeString": "struct CommitStore.DynamicConfig storage ref"
                                }
                              },
                              "id": 2548,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8012:3:2",
                              "memberName": "ARM",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2128,
                              "src": "7996:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2546,
                            "name": "IARM",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5198,
                            "src": "7991:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IARM_$5198_$",
                              "typeString": "type(contract IARM)"
                            }
                          },
                          "id": 2549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7991:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IARM_$5198",
                            "typeString": "contract IARM"
                          }
                        },
                        "id": 2550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8017:8:2",
                        "memberName": "isCursed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5197,
                        "src": "7991:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                          "typeString": "function () view external returns (bool)"
                        }
                      },
                      "id": 2551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7991:36:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2545,
                  "id": 2553,
                  "nodeType": "Return",
                  "src": "7983:44:2"
                }
              ]
            },
            "documentation": {
              "id": 2541,
              "nodeType": "StructuredDocumentation",
              "src": "7858:63:2",
              "text": "@notice Support querying whether health checker is healthy."
            },
            "functionSelector": "0a6cd30d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isARMHealthy",
            "nameLocation": "7933:12:2",
            "parameters": {
              "id": 2542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7945:2:2"
            },
            "returnParameters": {
              "id": 2545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2544,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2555,
                  "src": "7971:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2543,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7971:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7970:6:2"
            },
            "scope": 2623,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2570,
            "nodeType": "ModifierDefinition",
            "src": "8144:104:2",
            "nodes": [],
            "body": {
              "id": 2569,
              "nodeType": "Block",
              "src": "8167:81:2",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2559,
                              "name": "s_dynamicConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2156,
                              "src": "8182:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DynamicConfig_$2129_storage",
                                "typeString": "struct CommitStore.DynamicConfig storage ref"
                              }
                            },
                            "id": 2560,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8198:3:2",
                            "memberName": "ARM",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2128,
                            "src": "8182:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2558,
                          "name": "IARM",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5198,
                          "src": "8177:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IARM_$5198_$",
                            "typeString": "type(contract IARM)"
                          }
                        },
                        "id": 2561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8177:25:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IARM_$5198",
                          "typeString": "contract IARM"
                        }
                      },
                      "id": 2562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8203:8:2",
                      "memberName": "isCursed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5197,
                      "src": "8177:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                        "typeString": "function () view external returns (bool)"
                      }
                    },
                    "id": 2563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8177:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2567,
                  "nodeType": "IfStatement",
                  "src": "8173:63:2",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2564,
                        "name": "BadARMSignal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2092,
                        "src": "8222:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 2565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8222:14:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2566,
                    "nodeType": "RevertStatement",
                    "src": "8215:21:2"
                  }
                },
                {
                  "id": 2568,
                  "nodeType": "PlaceholderStatement",
                  "src": "8242:1:2"
                }
              ]
            },
            "documentation": {
              "id": 2556,
              "nodeType": "StructuredDocumentation",
              "src": "8036:105:2",
              "text": "@notice Ensure that the ARM has not emitted a bad signal, and that the latest heartbeat is not stale."
            },
            "name": "whenHealthy",
            "nameLocation": "8153:11:2",
            "parameters": {
              "id": 2557,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8164:2:2"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 2581,
            "nodeType": "ModifierDefinition",
            "src": "8341:77:2",
            "nodes": [],
            "body": {
              "id": 2580,
              "nodeType": "Block",
              "src": "8366:52:2",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2573,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2590,
                      "src": "8376:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 2574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8376:8:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2578,
                  "nodeType": "IfStatement",
                  "src": "8372:34:2",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2575,
                        "name": "PausedError",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2081,
                        "src": "8393:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 2576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8393:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2577,
                    "nodeType": "RevertStatement",
                    "src": "8386:20:2"
                  }
                },
                {
                  "id": 2579,
                  "nodeType": "PlaceholderStatement",
                  "src": "8412:1:2"
                }
              ]
            },
            "documentation": {
              "id": 2571,
              "nodeType": "StructuredDocumentation",
              "src": "8252:86:2",
              "text": "@notice Modifier to make a function callable only when the contract is not paused."
            },
            "name": "whenNotPaused",
            "nameLocation": "8350:13:2",
            "parameters": {
              "id": 2572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8363:2:2"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 2590,
            "nodeType": "FunctionDefinition",
            "src": "8497:71:2",
            "nodes": [],
            "body": {
              "id": 2589,
              "nodeType": "Block",
              "src": "8542:26:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2587,
                    "name": "s_paused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2163,
                    "src": "8555:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2586,
                  "id": 2588,
                  "nodeType": "Return",
                  "src": "8548:15:2"
                }
              ]
            },
            "documentation": {
              "id": 2582,
              "nodeType": "StructuredDocumentation",
              "src": "8422:72:2",
              "text": "@notice Returns true if the contract is paused, and false otherwise."
            },
            "functionSelector": "5c975abb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paused",
            "nameLocation": "8506:6:2",
            "parameters": {
              "id": 2583,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8512:2:2"
            },
            "returnParameters": {
              "id": 2586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2585,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2590,
                  "src": "8536:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2584,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8536:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8535:6:2"
            },
            "scope": 2623,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2606,
            "nodeType": "FunctionDefinition",
            "src": "8643:91:2",
            "nodes": [],
            "body": {
              "id": 2605,
              "nodeType": "Block",
              "src": "8679:55:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2596,
                      "name": "s_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2163,
                      "src": "8685:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8696:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8685:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2599,
                  "nodeType": "ExpressionStatement",
                  "src": "8685:15:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2601,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8718:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8722:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8718:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2600,
                      "name": "Paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2096,
                      "src": "8711:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8711:18:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2604,
                  "nodeType": "EmitStatement",
                  "src": "8706:23:2"
                }
              ]
            },
            "documentation": {
              "id": 2591,
              "nodeType": "StructuredDocumentation",
              "src": "8572:68:2",
              "text": "@notice Pause the contract\n @dev only callable by the owner"
            },
            "functionSelector": "8456cb59",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2594,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2593,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "8669:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13586,
                  "src": "8669:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "8669:9:2"
              }
            ],
            "name": "pause",
            "nameLocation": "8652:5:2",
            "parameters": {
              "id": 2592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8657:2:2"
            },
            "returnParameters": {
              "id": 2595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8679:0:2"
            },
            "scope": 2623,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2622,
            "nodeType": "FunctionDefinition",
            "src": "8811:96:2",
            "nodes": [],
            "body": {
              "id": 2621,
              "nodeType": "Block",
              "src": "8849:58:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2612,
                      "name": "s_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2163,
                      "src": "8855:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 2613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8866:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "8855:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2615,
                  "nodeType": "ExpressionStatement",
                  "src": "8855:16:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2617,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8891:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8895:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8891:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2616,
                      "name": "Unpaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2100,
                      "src": "8882:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8882:20:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2620,
                  "nodeType": "EmitStatement",
                  "src": "8877:25:2"
                }
              ]
            },
            "documentation": {
              "id": 2607,
              "nodeType": "StructuredDocumentation",
              "src": "8738:70:2",
              "text": "@notice Unpause the contract\n @dev only callable by the owner"
            },
            "functionSelector": "3f4ba83a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2610,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2609,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "8839:9:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13586,
                  "src": "8839:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "8839:9:2"
              }
            ],
            "name": "unpause",
            "nameLocation": "8820:7:2",
            "parameters": {
              "id": 2608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8827:2:2"
            },
            "returnParameters": {
              "id": 2611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8849:0:2"
            },
            "scope": 2623,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2074,
              "name": "ICommitStore",
              "nameLocations": [
                "485:12:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5245,
              "src": "485:12:2"
            },
            "id": 2075,
            "nodeType": "InheritanceSpecifier",
            "src": "485:12:2"
          },
          {
            "baseName": {
              "id": 2076,
              "name": "ITypeAndVersion",
              "nameLocations": [
                "499:15:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5523,
              "src": "499:15:2"
            },
            "id": 2077,
            "nodeType": "InheritanceSpecifier",
            "src": "499:15:2"
          },
          {
            "baseName": {
              "id": 2078,
              "name": "OCR2Base",
              "nameLocations": [
                "516:8:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7233,
              "src": "516:8:2"
            },
            "id": 2079,
            "nodeType": "InheritanceSpecifier",
            "src": "516:8:2"
          }
        ],
        "canonicalName": "CommitStore",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2623,
          7233,
          6584,
          5523,
          2639,
          13425,
          13587,
          13809,
          5245
        ],
        "name": "CommitStore",
        "nameLocation": "470:11:2",
        "scope": 2624,
        "usedErrors": [
          2081,
          2086,
          2088,
          2090,
          2092,
          5843,
          6599,
          6605,
          6611,
          6613,
          6615,
          6617,
          6619,
          6621
        ]
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 2
}